export default {
  navBar: {
    management: 'Management',
    l2_switching: 'L2 Switching',
    dhcp: 'DHCP',
    security: 'Security',
    sys_util: 'System Utility',
    l3: 'L3',
    bgp4: 'BGP4',
    multicast: 'Multicast',
    qos: 'QoS',
    data_center: 'Data Center',
    language: 'Language',
    english: 'English',
  },
  button: {
    apply: 'Apply',
    assign: 'Assign',
    cancel: 'Cancel',
    edit: 'Edit',
    reset: 'Reset',
    create: 'Create',
    delete: 'Delete',
    ok: 'OK',
    upload: 'Upload',
    download: 'Download',
    detail: 'Detail',
    clear: 'Clear',
    back: 'Back',
    move: 'Move',
    reload: 'Reload',
    login: 'Login',
    logout: 'Logout',
    home: 'Back Home',
    unlock: 'Unlock',
    update: 'Update',
    renumber: 'Renumber',
    restart: 'Restart',
    stop: 'Stop',
    copy: 'Copy',
    browse: 'Browse',
    blinkStart: 'Blink Start',
    blinkStop: 'Blink Stop',
    reauth:'Re-Auth'
  },
  general: {
    titleSuffix: ' TEMP',
    homePage: 'Home Page',
    inputNullErr: 'This field is required.',
    interfaceInvalid: 'Invalid Interface.',
    ipv4AddrInvalid: 'Invalid IPv4 Address.',
    ipv6AddrInvalid: 'Invalid IPv6 Address.',
    enabled: 'Enabled',
    disabled: 'Disabled',
    interface: 'Interface',
    interfaces: 'Interfaces',
    interfacePlaceholder: 'Enter the slot/port',
    status: 'Status',
    state: 'State',
    admin: 'Admin',
    source: 'Source',
    mode: 'Mode',
    adminMode: 'Admin Mode',
    adminStatus: 'Admin Status',
    deleteAlert: 'Are you sure to delete?',
    mgmtBlockedAlert: 'Management access will be blocked for the duration of the transfer. Are you sure to start?',
	  global: 'Global',
    macAddress: 'MAC Address',
    macAddressPlaceholder: 'Enter the MAC Address',
    type: "Type",
    ipAddress: 'IP Address',
    ipAddressPlaceholder: 'Enter the IP Address',
    prefixLenPlaceholder: 'Enter the Prefix Length',
    ipMaskPlaceholder: 'Enter the IP Subnet Mask',
    ipPrefixPlaceholder: '<ip-address/prefix-length>',
    ipv6Address: 'IPv6 Address',
    ipv6AddressPlaceholder: 'Enter the IPv6 Address',
    description: 'Description',
    priority: 'Priority',
    tx: 'TX',
    rx: 'RX',
    yes: 'Yes',
    no: 'No',
    name: 'Name',
    threshold: 'Threshold',
    ipMask: 'IP Mask',
    method: 'Method',
    deleteConfirm: 'Confirm Delete',
    clearConfirm: 'Confirm Clear',
    transferConfirm: 'Confirm Transfer',
    deleteAlert: 'Are you sure to delete this item?',
    clearAlert: 'Are you sure to clear entries?',
    id: 'ID',
    invalidInput: 'Invalid field.',
    ip: 'IP',
    ipv4: 'IPv4',
    ipv6: 'IPv6',
    mac: 'MAC',
    ipLittleCase: 'ip',
    ipv6LittleCase: 'ipv6',
    na: 'N/A',
    true: 'True',
    false: 'False',
    default: 'Default',
    all: 'All',
    option: 'Option',
    dns: 'DNS',
    transmit: 'Transmit',
    receive: 'Receive',
    notify: 'Notify',
    mgmt: 'Mgmt',
    group: 'Group',
    ports: 'Ports',
    broadcast: 'Broadcast',
    multicast: 'Multicast',
    unicast: 'Unicast',
    version: 'Version',
    lag: 'LAG (3/x)',
    statistic: 'Statistic',
    more: 'More',
    interfaceErr: 'Invalid Interface',
    copyright: 'Â© 2020',
    none: 'None',
    notFound404: '404 Not Found',
    up: 'Up',
    down: 'Down',
    detach: 'Detach',
    first:'First',
    third :'Third',
    fourth :'Fourth',
    fifth :'Fifth',
    Jan:'Jan',
    Feb:'Feb',
    Mar:'Mar',
    Apr:'Apr',
    May:'May',
    Jun:'Jun',
    Jul:'Jul',
    Aug:'Aug',
    Sep:'Sep',
    Oct:'Oct',
    Nov:'Nov',
    Dec:'Dec',
    mon: 'Monday',
    tue: 'Tuesday',
    wed: 'Wednesday',
    thr: 'Thursday',
    fri: 'Friday',
    sat: 'Saturday',
    sun: 'Sunday',
    interfaceType: 'Interface Type',
    slotport: 'Slot/Port',
    serviceport: 'Service Port',
    network: 'Network Port',
    vlan: 'VLAN',
    loopback: 'Loopback',
    static: 'Static',
    dynamic: 'Dynamic',
    invalidMask: 'Invalid Mask',
    invalidGateway: 'Invalid Gateway',
    invalidLogin: 'Invalid Login',
    invalidLogout: 'Invalid Logout',
    interfaceList: 'Interface List',
    linkLocal: 'Link-Local Address',
    local: 'Local',
    loopbackPlaceholder: 'Enter the Loopback ID',
    interfaceId: 'Interface Index',
    included: 'Include',
    excluded: 'Exclude',
    start: 'Start',
    stop: 'Stop',
    done: 'Done',
    remove: 'Remove',
    filename: 'Filename',
    uploadSrc: 'Upload Source',
    uploadDst: 'Upload Destination',
    notConfig: 'not configured',
    hour: 'hour(s)',
    minute: 'minute(s)',
    seconds: 'second(s)',
    hostName: 'Host Name',
    hostNameTitle: 'Host Name: ',
    noEntries: '(There are currently no entries in the table.)',
    noEntry: '(There is currently no entry.)',
    reboot: 'Reboot',
    multicast : 'Multicast',
    mbps: 'Mbps',
    ms: 'ms',
    setDefault: '(set dafault)',
    vrfName: 'VRF Name',
    logoutAlert: 'Are you sure to logout?',
    logoutConfirm: 'Confirm Logout',
    notSet: 'Not Set',
    sec: 'sec',
    pswitch2048t: 'PSWITCH 2048T',
    pswitch2048p: 'PSWITCH 2048P',
    pswitch4032p: 'PSWITCH 4032P',
  },
  vlan: {
    vlan: 'VLAN',
    vlanID: 'VLAN ID',
    name: 'VLAN Name',
    vlanIDPlaceholder: 'Enter the VLAN ID',
    vlanRange: 'VLAN ID range is between 1 to 4093',
    deletePageTitle: 'Delete VLAN',
    current: 'Current',
    configured: 'Configured',
    tagging: 'Tagging',
    tagged: 'Tagged',
    untagged: 'Untagged',
    included: 'Include',
    excluded: 'Exclude',
    auto: 'Autodetect',
    static: 'Static',
    dynamic: 'Dynamic (IP VLAN)',
    gvrp: 'Dynamic (GVRP)',
    mvrp: 'Dynamic (MVRP)',
    dot1x: 'Dynamic (DOT1X)',
    openflow: 'Dynamic (OPENFLOW)',
    evb: 'Dynamic (EVB)',
    forbidden: 'Forbidden',
    vlanListOrg: 'VLAN List',
    vlanInterface: 'VLAN Interfaces',
    vlanListPlaceholder: 'Enter the VLAN list, ex: 3,4,6',
    addVlan: 'Add VLAN Member to the List',
    deleteVlan: 'Delete VLAN Member from the List',
    vlanListError: 'Invalid VLAN List.',
    default: 'Default',
    ascend: 'Ascending',
    descend: 'Descending',
    policy: 'Allocation Policy',
    basedVlanID: 'Based VLAN ID',
    cfgPvid: 'Port VLAN ID Configured',
    curPvid: 'Port VLAN ID Current',
    acceptFrame: 'Acceptable Frame Types',
    cfgInFilter: 'Ingress Filtering Configured',
    curInFilter: 'Ingress Filtering Current',
    egress: 'Egress rule',
    protectedPort: 'Protected port',
    switchportMode: 'Switchport mode',
    frameTagged: 'VLAN Only',
    frameUntagged: 'Untagged Only',
    frameAll: 'Admit All',
    operate: 'Operate',
    privateVlan: 'Private VLAN',
    privateVlanEdit: 'Edit Ports',
    primaryVlan: 'Primary VLAN',
    secondaryVlan: 'Secondary VLAN',
    vlanList: 'Enter VLAN list like 2,7,10-12',
    createAssociation: 'Create Association',
    deleteAssociation: 'Delete Association',
    hostAssociation: 'Host Association',
    mapping: 'Mapping',
    create: 'Create VLAN'
  },
  portCfg: {
    title: 'Port Configuration',
    port: 'UDP Dest. Port',
    status: 'Status',
    description: 'Description',
    advInfo: 'Advertise Information',
    protocol: 'Protocol',
    locator: 'Port Locator',
    hw_profile: 'HW Profile',
    intf: 'Intf',
    type: 'type',
    physicalMode: 'Physical Mode',
    physicalStatus: 'Physical Status',
    linkStatus: 'Link Status',
    linkTrap: 'Link Trap',
    lacpMode: 'LACP Mode',
    actorTimeout: 'Actor Timeout',
    up: 'Up',
    down: 'Down',
    auto: 'Auto',
    ifIndex: 'ifIndex',
    bitOffsetVal: 'Bit Offset Value',
    autoNeg: 'Auto Negotiation',
    operLinkAdvert: 'Operational Link Advertisement',
    adminLocalAdvert: 'Admin Local link Advertisement',
    operLocalAdvert: 'Oper Local link Advertisement',
    operPeerAdvert: 'Oper Peer Advertisement',
    priorityResolution: 'Priority Resolution',
    clock: 'Clock',
    mtu: 'MTU',
    dDisabled: 'D-Disable',
    qsfpExpandMode: 'QSFP Port Mode',
    qsfp1x40g: '1x40G',
    qsfp4x10g: '4x10G',
  },
  linkDependency: {
    title: 'Link Dependency',
    adminMode: 'Admin Mode',
    downIntf: 'Downstream Interfaces',
    downIntfState: 'Downstream Interface State:',
    upIntf: 'Upstream Interfaces',
    upIntfState: 'Upstream Interface State:',
    linkUp: 'Link Up',
    linkDown: 'Link Down',
    linkAction: 'Link Action',
    groupState: 'Group State',
    fdb: 'FDB Update',
    alive: 'Alive',
    alivePorts: 'Percentage of Alive Ports',
    threshold: 'Threshold',
    transThreshold: 'Transition Threshold',
    groupTransitions: 'Group Transitions:',
    groupTransitionsCounter: 'Group Transitions Counter',
    lastTransitionTime: 'Last Transition Time',
    notConfig: 'Not configured',
    clearTips: 'Are you sure to clear link dependency group config?',
    transErrorHint: 'Error! Can\'t retrieve group '
  },
  fdbs: {
    title: 'FDB',
    fdbCount: 'FDB Count',
    fdbInfo: 'FDB Information',
    entryType: 'type',
    vlanId: 'VLAN ID',
    srcPort: 'src',
    dstPort: 'dst',
    description: 'Description',
    createItemTitle: 'Create FDB',
    staticEntries:'Static Address (User-defined) count',
    dynamicEntries: 'Dynamic Address count',
    maxEntries: 'Total MAC Addresses available',
    currentEntries: 'Total MAC Addresses in use',
    ageTime: 'Age Time',
    ifIndex: 'Intf Index',
    ageTimeErr: 'Invalid Range. 10 ~ 1000000',
    clearType: 'Clear Type',
    clearFdbs: 'Clear FDBs',
    clearKey: 'Clear Key ',
    management: 'Management',
    static: 'Static',
    learned: 'Learned',
    self: 'Self',
    gmrpLearned: 'GMRP Learned',
    fipLearned: 'FIP Snooping Learned',
    spbmLearned: 'SPBM Learned',
    evbLearned: 'EVB Learned',
    dot1agStatic: 'Dot1ag Static',
    other: 'Other',
    filterDataTitle: 'Display FDB Information',
    filterAll: 'Display all information.',
    filterInterface: 'Display MAC addresses on interface',
    filterVlan: 'Display MAC addresses on the VLAN',
    filterMac: 'Display specific entries by ',
  },
  mfdbs: {
    title: 'MFDB',
    mfdbCurrEntries: 'Current Entries',
    mfdbMaxTableEntries: 'Max Entries',
    mfdbMostEntries: 'Most Entries',
    source: 'Source',
    absPortMask: 'The Interfaces of the Entry',
    frwdIntMask: 'Fowarding Interface',
    fltIntMask: 'Filtering Interface',
    mfdbClearTitle: 'Clear MFDB entries',
    mfdbClearAlert: 'Are you sure you want to clear MFDB entries?',
    clearIgmp: 'Clear all IGMP snooping entries',
    clearMld: 'Clear all MLD snooping entries',
  },
  switchports: {
    title: 'Switch Ports',
    mode: 'Switch Port Mode',
    access: 'Access',
    accessMode: 'Access Mode Configuration',
    accessVlan: 'Access VLAN',
    allowedVlan: 'Allowed VLAN',
    nativeVlan: 'Native VLAN',
    nativeTagging: 'Native VLAN Tag',
    trunk: 'Trunk',
    trunkMode: 'Trunk Mode Configuration',
    general: 'General',
    generalMode: 'General Mode Configuration',
  },
  stormControl: {
    title: 'Storm Control',
    stormControlConfig: 'Storm Control Config',
    stormControlInterfaces: 'Storm Control Interfaces',
    stormControl: 'Storm Control',
    bpdu: 'BPDU',
    mode: 'Mode',
    action: 'Action',
    level: 'Level',
    actionShutdown: 'Shutdown',
    thresholdUnit: 'pps'
  },
  loopProtection: {
    loopProtectionTitle: 'Loop Protection',
    loopProtection: 'Loop Protection global status',
    ldfInterval: 'LDF sending interval',
    ldfPriority: 'LDF user priority',
    recoveryStatus: 'Auto recovery status',
    recoveryInterval: 'Auto recovery interval',
    interface: 'Interface',
    interfaceStatus: 'Loop Protect',
    loopStatus: 'Loop Presence',
    recoveryTime: 'Recovery Remaining Time (sec)',
  },
  ovsdb: {
    ovsdbTitle: 'OVSDB',
    admin: 'Admin Status',
    sslkeyfile: 'OVSDB SSL key file',
    sslcertfile: 'OVSDB SSL cert file',
    sslcafile: 'OVSDB SSL ca file',
    tcp: 'TCP',
    tcpport: 'TCP Port',
    ssl: 'SSL',
    sslport: 'SSL Port',
    copyOvsdb:'Copy OVSDB',
    key: 'ovsdb-key',
    cert: 'ovsdb-cert',
    ca: 'ovsdb-ca',
    transferAlert: 'If the OVSDB is enable, user upload this key would restart the OVSDB. Are you sure to start?',
  },
  telnet: {
    telnetTitle: 'Telnet',
    outboundTimeout: "Outbound Telnet Login Timeout (minutes)",
    maxOutboundSession: "Maximum Number of Outbound Telnet Sessions",
    allowedNewOutbound: "Allow New Outbound Telnet Sessions",
    remoteTimeout: "Remote Connection Login Timeout (minutes)",
    maxRemoteSession: "Maximum Number of Remote Connection Sessions",
    allowedNewTelnet: "Allow New Telnet Sessions",
    telnetMode: "Telnet Server Admin Mode",
    telnetPort: "Telnet Server Port"
  },
  l2ol3Basic: {
    title: "L2oL3 Basic",
    maxTitle: "Maximum Allowed Limits or Table Sizes",
    vtepAddr: "VTEP Source Address",
    destPort: "Destination UDP Port",
    currentTitle: "Current Entries Count or Table Usage",
    tenantSize: "Tenant Table Size",
    tunnelPortSize: "Tunnel / Network Reference Ports Table Size",
    accessPortSize: "Access Ports Table Size",
    tenantEntries: "Tenant Table Entries",
    tunnelPortEntries: "Tunnel / Network Reference Port Entries",
    accessPortEntries: "Access Port Entries",
    sourceAddr : "Source Address",
    accessPorts : "Access Port (s)",
    accessPort : "Access Port",
    remoteTeps : "Remote TEP (s)",
    remoteTep : "Remote TEP",
    vxlan: "VXLAN",
    nvgre: "NVGRE",
    vnid: "VNID",
    vsid: "VSID",
    createType: "Create Type",
    vxlanName: "VXLAN Name",
    vxlandescription: "VXLAN Description",
    updateTitle: "Update VLAN / Access Port",
  },
  l2ol3Tunnels: {
    title: "L2oL3 Tunnels",
    remoteNve: "Remote NVE",
    remoteVtep: "Remote VTEP",
    reachableStatus: "Reachable",
    upTime: "Uptime (sec)",
    reachableTransitions: "Reachable Transitions",
    txPkts: "Packets Tx",
    rxPkts: "Packets Rx",
    txBytes: "Bytes Tx",
    rxBytes: "Bytes Rx",
    deleteItemTitle: "Delete Tunnel",
    nvgreClearTitle: "Clear NVGRE Counters",
    vxlanClearTitle: "Clear VXLAN Counters",
    nvgreClearAlert: "Are you sure to clear packet and byte counters of all configured NVGRE virtual networks?",
    vxlanClearAlert: "Are you sure to clear packet and byte counters of all configured VXLAN virtual networks?",
    nvgreNotEnable: "NVGRE mode is not enabled on the Switch.",
    vxlanNotEnable: "VXLAN mode is not enabled on the Switch.",
},
  l2ol3Tenants: {
    title: "L2oL3 Tenant Systems",
    maxTitle: "Maximum Allowed Limits or Table Sizes",
    localStaticFwdEntriesPerInterface: "Static Local Host Entries per Interface",
    remoteStaticFwdEntriesPerTenant: "Static Remote Host Entries per Tenant",
    remoteStaticFwdEntriesPerSwitch: "Static Remote Host Entries per Switch",
    fwdTableSize: "Forwarding Table Size",
    currentTitle: "Current Entries Count or Table Usage",
    staticHostEntries: "Static Host Entries",
    learneHostEntries: "Learned Host Entries",
    totalFwdEntries: "Forwarding Table Entries",
    detailTitle: "Tenant Systems Details",
    nvgreId: "NVGRE ID",
    vxlanId: "VXLAN ID",
    tenantMac: "Tenant MAC",
    nve: "NVE",
    vtep: "VTEP",
    appIfIndex: "AppIfIndex",
    entryType: "Entry Type",
    tenantIp: "Tenant IP",
    age: "Age",
    accessPorts: "Access Ports",
  },
  acl: {
    aclTitle: 'Access Control List',
    slotPort: 'Slot/Port',
    vlan: 'VLAN',
    direction: 'Direction',
    inbound: 'Inbound',
    outbound: 'Outbound',
    type: 'Type',
    name: 'ACL Name',
    sequence: 'Sequence Number',
    createIpAcl: 'Create IP ACL',
    createMacAcl: 'Create MAC ACL',
    updateList: 'Update ACL List',
    macAcl: 'MAC-ACL',
    ipAcl: 'IP-ACL',
    ip6Acl: 'IPv6-ACL',
    nameId: 'ACL Name/ID',
    nameIdPlaceholder: 'Enter the ACL Name or ID',
    namePlaceholder: 'Enter the ACL Name',
    seqPlaceholder: 'Enter the Sequence Number',
    intfTitle: 'ACL',
    macTitle: 'MAC ACL',
    ipAclTitle: 'IP ACL',
    ipv6AclTitle: 'IPv6 ACL',
    id: 'ACL ID',
    source: 'Source MAC Address',
    destination: 'Destination MAC Address',
    srcMask: 'Source MAC Mask',
    dstMask: 'Destination MAC Mask',
    srcAddrAndMask: 'Source MAC Address / Mask',
    dstAddrAndMask: 'Destination MAC Address / Mask',
    etherType: 'Ethertype',
    inInterface: 'Inbound Interfaces',
    outInterface: 'Outbound Interfaces',
    inVlan: 'Inbound VLANs',
    outVlan: 'Outbound VLANs',
    action: 'Action',
    matchEvery: 'Match Every',
    matchAll: 'Match All',
    protocol: 'Protocol',
    remark: 'ACL Remarks',
    ruleRemarks: 'Rule Remarks',
    ruleRemark: 'Rule Remark',
    hitCount: 'ACL Hit Count',
    createRule: 'Create Rule',
    updateSeq: 'Renumber ACL Sequence Numbers',
    startNum: 'Start Number',
    increment: 'Increment Value',
    clearAlert: 'Are you sure to clear the counters?',
    permit: 'Permit',
    deny: 'Deny',
    dstIp: 'Destination IP Address',
    dstIpMask: 'Destination IP Wildcard Mask',
    srcIp: 'Source IP Address',
    srcIpMask: 'Source IP Wildcard Mask',
    cos: 'COS',
    dscp: 'IP DSCP',
    fragments: 'Fragments',
    precedence: 'IP Precedence',
    tos: 'IP TOS',
    tosMask: 'IP TOS Mask',
    assignQueue: 'Assign Queue',
    log: 'Log',
    mirror: 'Mirror Interface',
    redirect: 'Redirect Interface',
    conformRate: 'Committed Rate',
    burstSize: 'Committed Burst Size',
    icmpMessage: 'ICMP Message',
    icmpType: 'ICMP Type',
    icmpCode: 'ICMP Code',
    igmpType: 'IGMP Type',
    srcL4PortOper: 'Source L4 Port Operator',
    srcL4Port: 'Source L4 Port Keyword',
    srcL4PortStart: 'Source L4 Start Port',
    srcL4PortEnd: 'Source L4 End Port',
    dstL4PortOper: 'Destination L4 Port Operator',
    dstL4Port: 'Destination L4 Port Keyword',
    dstL4PortStart: 'Destination L4 Start Port',
    dstL4PortEnd: 'Destination L4 End Port',
    established: 'TCP Established',
    tcpFin: 'TCP FIN',
    tcpSyn: 'TCP SYN',
    tcpRst: 'TCP RST',
    tcpPsh: 'TCP PSH',
    tcpAck: 'TCP ACK',
    tcpUrg: 'TCP URG',
    any: 'Any',
    number: 'Number',
    eq: 'Equal',
    neq: 'Not Equal',
    lt: 'Less Than',
    gt: 'Greater Than',
    range: 'Range',
    deleteRemark: 'Delete Remarks',
    dstIpv6: 'Destination IPv6 Address',
    srcIpv6: 'Source IPv6 Address',
    flowLabel: 'Flow Label',
    routing: 'Routing',
    set: 'Set',
    clear: 'Clear',
    ignore: 'Ignore',
    deleteTitle: 'Delete ACL Sequence Number',
    deny: 'Deny',
    permit: 'Permit',
    any: 'Any',
    hex: 'HEX',
    appletalk: 'APPLETALK',
    arp: 'ARP',
    ibmsna: 'IBMSNA',
    ipv4: 'IPv4',
    ipv6: 'IPv6',
    ipx: 'IPX',
    mplsmcast: 'MPLSMCAST',
    mplsucast: 'MPLSUCAST',
    netbios: 'NETBIOS',
    novell: 'NOVELL',
    pppoe: 'PPPOE',
    rarp: 'RARP',
    deleteRemark: 'Delete Remark',
    bpdu: 'BPDU',
    createIpAclRemark: 'Create IP ACL Rule Remark',
    rules: 'Rules',
    CurNumOfAcls:'Current Number of ACLs',
    MaxNumOfAcls:'Maximum Number of ACLs',
    createIpv6AclRemark: 'Create IPv6 ACL Rule Remark',
    curNumOfAllAcls:'Current Number of All ACLs',
    maxNumOfAllAcls:'Maximum Number of All ACLs',
    createIpv6Acl: 'Create IPv6 ACL',
    createMacAclRemark: 'Create MAC ACL Rule Remark',
    createAclSeqNumber: 'Create ACL Sequence Number'
  },
  cos: {
    cosTitle: 'Class Of Service',
    cosMappingTitle: 'Mapping Table',
    cosGlobalMappingTitle: 'Global Mapping Table',
    cosIntfMappingTitle: 'Interface Mapping Table',
    cosManageTitle: 'Queue Manage',
    cosIntfManageTitle: 'Interface Queue Manage',
    globalConfig: 'Global Queue Manage',
    cosRandomDetectTitle: 'Random Detect',
    cosGlobalRandomDetectTitle: 'Global Random Detect',
    cosIntfRandomDetectTitle: 'Interface Random Detect',
    cosDot1pTitle: 'Dot1p (802.1p)',
    cosUserPriorityTitle: 'User Priority',
    cosDscpTitle: 'IP DSCP',
    cosDscp: 'IP-DSCP',
    cosTrafficClass: 'Traffic Class',
    cosRandomDetectParam: 'Random Detect Parameter',
    cosWred: 'WRED',
    cosMinThreshol: 'Minimum Threshold',
    cosMaxThreshol: 'Maximum Threshold',
    cosDropProb: 'Drop Probability',
    cosECN: 'ECN Enabled',
    cosQueueID: 'Queue ID',
    cosTcpNonTCP: '(G-TCP/Y-TCP/R-TCP/Non-TCP)',
    cosWredDcay: 'WRED Decay Exponent',
    cosWredRange: 'The field must be a number and between 0 and 100.',
    cosTrustMode: 'Class of Service Trust Mode',
    cosMinBandwidth: 'Min. Bandwidth',
    cosScheduleType: 'Scheduler Type',
    cosManagementType: 'Queue Management Type',
    cosDot1p: 'Dot1p',
    cosDot1P: 'Dot1P',
    cosWeighted: 'Weighted',
    cosStrict: 'Strict',
    cosWred:'WRED',
    cosTailDrop:'Tail Drop',
    cosShapRate: 'Interface Shaping Rate',
    cosWredParameter: 'WRED Parameters',
    cosQueueParameter: 'Queue Parameters',
    untrusted: 'Untrusted',
    nonIp: 'Non-IP',
  },
  autoDiscovery: {
    title: 'Auto Discovery',
    autoDiscoveryStatus: 'Auto Discovery Status',
    ssdpStatus: "SSDP Status",
    ssdpPort: "SSDP Port Number",
    maxAge: "Max age of Auto Discovery service",
    ssdpInterval: "SSPD Alive Advertisement Interval",
    uuid: "Auto Discovery UUID",
    defaultHint: 'Default is 1900.'
  },
  udld: {
    udldTitle: 'UDLD',
    adminMode: 'Admin Mode',
    msgInterval: 'Message Interval',
    timeoutInterval: 'Timeout Interval',
    modify: 'Modify',
    port: 'Port',
    udldMode: 'UDLD Mode',
    udldStatus: 'UDLD Status',
    seconds: 'seconds',
    aggressive: 'Aggressive',
    normal: 'Normal',
    resetMsg: 'Do you want to reset all interfaces that have been shutdown by UDLD ?'
  },
  dhcp: {
    dhcpClient: 'DHCP Client',
    dhcpSnooping: 'DHCP Snooping',
    dhcpClientConf: 'DHCP Client Configuration',
    vendorIdOption: 'DHCP Client Vendor Identifier Option',
    vendorIdOpString: 'DHCP Client Vendor Identifier Option String',
    dhcpStatus: 'DHCP Status',
    dhcpClientIdStatus: 'DHCP Client-ID Option Status',
    dhcpClientIdString: 'DHCP Client Identifier',
    dhcpClientLeaseTitle: 'DHCP Client Lease',
    subnetMask: 'Subnet Mask',
    leasSvr: 'DHCP Lease Server',
    state: 'State',
    transactionId: 'DHCP Transaction ID',
    lease: 'Lease',
    renewal: 'Renewal',
    rebind: 'Rebind',
    retryCount: 'Retry Count',
    dhcpSnoopingTitle: 'DHCP Snooping Configuration',
    snoopingStatus: 'DHCP Snooping Status',
    macVerify: 'MAC Verify Status',
    dhcpDatabaseTitle: 'Database Persistent Configuration',
    dhcpExportDatabaseTitle: 'Export DHCP Snooping Database',
    agentURL: 'Agent URL',
    writeDelay: 'Write Delay (seconds)',
    agentURLPlaceholder: 'Enter the agent URL',
    writeDelayPlaceholder: 'Enter the write delay',
    dhcpSnoopingIntfTitle: 'DHCP Snooping Interface',
    trustState: 'Trust State',
    logInvalidPkt: 'Log Invalid Packets',
    rateLimit: 'Rate Limit',
    burstIntvl: 'Burst Interval',
    dhcpSnoopingBindTitle: 'DHCP Snooping Binding',
    createV4BindingTitle: 'Create IPv4 Static Binding',
    createV6BindingTitle: 'Create IPv6 Static Binding',
    deleteBindingTitle: 'Delete Static Binding',
    dhcpV4RelayTitle: 'DHCPv4 Relay',
    dhcpRelayStatus: 'DHCP Relay Status',
    cidMode: 'Circuit ID Option Mode',
    maxHopCount: 'Maximum Hop Count',
    minWaitTime: 'Minimum Wait Time (Seconds)',
    dhcpL2RelayTitle: 'DHCP L2 Relay',
    dhcpL2RelayStatus: 'DHCP L2 Relay Status',
    dhcpL2RelayVlansTitle: 'DHCP L2 Relay VLANs',
    dhcpL2RelayVlansCreateTitle: 'Create DHCP L2 Relay VLANs',
    agentOptionVlanId: 'Agent Option VLAN ID',
    circuitId: 'Circuit ID',
    l2RelayMode: 'L2 Relay Mode',
    trustMode: 'Trust Mode',
    dhcpv6ClientTitle: 'DHCPv6 Client',
    clientDuid: 'Client DUID',
    serverDuid: 'Server DUID',
    iaid: 'Interface IAID',
    leaseAddr: 'Leased Address',
    preferLifetime: 'Prefer Lifetime',
    validLifetime: 'Valid Lifetime',
    renewTime: 'Renew Time',
    expiryTime: 'Expiry Time',
    t1Time: 'T1 Time',
    t2Time: 'T2 Time',
    dhcpv6ClientInterfaceTitle: 'DHCPv6 Client Interface',
    dhcpv6Status: 'DHCPv6 Status',
    prefixDelegation: 'Prefix Delegation',
    rapidCommit: 'Rapid Commit',
    dhcpv6SnoopingIntfTitle: 'DHCPv6 Snooping Interface',
    dhcpRelay: 'DHCP Relay',
    relayAddr: 'Relay Address',
    relayIntf: 'Relay Interface',
    remoteId: 'Remote ID',
    optionFlag: 'Option Flags',
    deleteV6RelayTitle: 'Delete DHCPv6 Relay',
    dhcpv6NetworkPort: 'Network Port',
    dhcpv6ServicePort: 'Service Port',
    dhcpv6Statistic: 'DHCPv6 Statistics',
    dhcpv6Interface: 'Interface',
    rxAdvertisementPkt: 'DHCPv6 Advertisement Packets Received',
    rxReplyPkt: 'DHCPv6 Reply Packets Received',
    rxDiscardedAdvertisementPkt: 'Received DHCPv6 Advertisement Packets Discard',
    rxDiscardedReplyPkt: 'Received DHCPv6 Reply Packets Discarded',
    rxMalformedPkt: 'DHCPv6 Malformed Packets Received',
    rxTotal: 'Total DHCPv6 Packets Received',
    txSolicitPkt: 'DHCPv6 Solicit Packets Transmitted',
    txRequestPkt: 'DHCPv6 Request Packets Transmitted',
    txRenewPkt: 'DHCPv6 Renew Packets Transmitted',
    txRebindPkt: 'DHCPv6 Rebind Packets Transmitted',
    txReleasePkt: 'DHCPv6 Release Packets Transmitted',
    txTotal: 'Total DHCPv6 Packets Transmitted',
    dhcpV6SnoopingTitle: 'DHCPv6 Snooping Configuration',
    dhcpV4SnoopingTitle: 'DHCPv4 Snooping Configuration',
    v6SnoopingStatus: 'DHCPv6 Snooping Status',
    disabledMsg: 'DHCPv6 function is disabled on interface.',
    dhcpv6isDisabled: 'DHCPv6 is disabled.',
    trusted: 'Trusted',
    untrusted: 'Untrusted',
    duidIfid: 'duid-ifid',
    notConfig: 'Not configured',
    clearSnoopingBinging: 'Clear DHCP Snooping Bindings',
    clearNetworkTips: 'Are you sure to clear the DHCPv6 client statistics on the network interface?',
    clearServiceTips: 'Are you sure to clear the DHCPv6 client statistics on the service port interface?',
    clearStatisticsTips: 'Are you sure to clear the DHCPv6 client statistics on the statistics interface?',
    dhcpSnoopingStatTitle: 'DHCP Snooping Statistics',
    macVerifyFail: 'MAC Verify Failures',
    intfMismatch: 'Client Ifc Mismatch',
    untrustedSvrMsg: 'DHCP Server Msgs Rec\'d',
    clearSnoopingTips: 'Are you sure to clear the DHCP snooping statistics?',
    clearSnooping6Tips: 'Are you sure to clear the DHCPv6 snooping statistics?',
    rxSolictPktStr:'DHCPv6 Solicit Packets Received',
    rxRequestPktStr:'DHCPv6 Request Packets Received',
    rxConfirmPktStr:'DHCPv6 Confirm Packets Received',
    rxRenewPktStr:'DHCPv6 Renew Packets Received',
    rxRebindPktStr:'DHCPv6 Rebind Packets Received',
    rxReleasePktStr:'DHCPv6 Release Packets Received',
    rxDelinePktStr:'DHCPv6 Decline Packets Received',
    rxInformPktStr:'DHCPv6 Inform Packets Received',
    rxRelayFwPktStr:'DHCPv6 Relay-forward Packets Received',
    rxReleayRlyPktStr:'DHCPv6 Relay-reply Packets Received',
    rxMalformedPktStr:'DHCPv6 Malformed Packets Received',
    rxDiscardPktStr:'Received DHCPv6 Packets Discarded',
    rxTatalPktStr:'Total DHCPv6 Packets Received',
    txAdverPktStr:'DHCPv6 Advertisement Packets Transmitted',
    txReplyPktStr:'DHCPv6 Reply Packets Transmitted',
    txReconfigPktStr:'DHCPv6 Reconfig Packets Transmitted',
    txRelayRlyPktStr:'DHCPv6 Relay-reply Packets Transmitted',
    txRelayFwPktStr:'DHCPv6 Relay-forward Packets Transmitted',
    txTotalPktStr:'Total DHCPv6 Packets Transmitted',
    relay: "Relay",
    dhcpL2RelayStatsTitle: "DHCP L2 Relay Interface Statistics",
    serverWithoutOpt: "TrustedServer MsgsWithoutOpt82",
    clientWithoutOpt: "TrustedClient MsgsWithoutOpt82",
    serverWithOpt: "UntrustedServer MsgsWithOpt82",
    clientWithOpt: "UntrustedClient MsgsWithOpt82",
    clearItemTitle: 'Clear DHCP L2 Relay Interface Stats',
    clearAllAlert: 'Are you sure to clear DHCP L2 Relay statistics for all enabled interfaces?',
    clearInterfaceAlert: 'Are you sure to clear DHCP L2 Relay statistics for specific enabled interface?',
  },
  dhcpServer: {
    title: 'DHCPv6 Server',
    dhcpServerInterfacesTitle: 'DHCPv6 Server Interface',
    poolName: 'Pool Name',
    server: 'Server',
    preference: 'Server Preference',
    optionFlag: 'Option Flag',
    poolNamePlaceholder: 'Enter the Pool Name',
    preferencePlaceholder: 'Enter the Server Preference',
    poolName: 'DHCPv6 Pool Name',
    addrPrefix: 'Prefix/Prefix Length',
    validLifetime: 'Valid Lifetime',
    preLifetime: 'Preferred Lifetime',
    hostName: 'Host',
    duid: 'Client DUID',
    iaid: 'IAID',
    pdCount: 'Prefix-Delegation Count',
    iaidNotSpecified: 'IA ID not specified',
    infinite: 'infinite',
    createServerPageTitle: 'Create DHCPv6 Server',
    createPdPageTitle: 'Create DHCPv6 Server Prefix Delegation',
    dhcpServerDns: 'DHCPv6 Server DNS',
    dnsServer: 'DNS Server',
    createDnsPageTitle: 'Create DHCPv6 Server DNS',
    dhcpServerDomain: 'DHCPv6 Server Domain',
    domainName: 'Domain Name',
    dhcpService: 'DHCPv6 Service',
    createDomainPageTitle: 'Create DHCPv6 Server Domain',
    interfacesPoolnameHint: 'If you want to set the Pool Name, please set the mode is "Server" first.',
    interfacesDomainnameHint: 'If you want to set the Domain Name, please create a DHCPv6 Pool Name first.',
    interfacesDnsnameHint: 'If you want to set the DNS Name, please create a DHCPv6 Pool Name first.',
    interfacesPoolnameHint1: 'If you want to set the Pool Name, please create a DHCPv6 Pool Name in DHCPv6 server page.',
    dhcpV6BindingTitle: 'DHCPv6 Binding',
    clientAddress: 'Client Address',
    clientInterface: 'Client Interface',
    bindingAddress: 'Binding Prefix Address',
    bindingType: 'Binding Prefix Type',
    bindingExpiration: 'Binding Expiration',
    bindingValidLifeTime: 'Binding Prefix Valid Lifetime',
    bindingPreferredLifeTime: 'Binding Prefix Preferred Lifetime',
    clearBinding: 'Clear DHCPv6 Bindings',
    bindingFilter: 'Filter specific Binding Address',
    noFilter: 'Display IPv6 DHCP Binding Info'
  },
  ssh: {
    sshTitle: 'SSH',
    sshMode: 'Administrative Mode',
    sshPort: 'SSH Port',
    protocolVersions: 'Protocol Levels',
    currentSession: 'SSH Sessions Currently Active',
    maxSessions: 'Max SSH Sessions Allowed',
    sshTimeout: 'SSH Timeout (minutes)',
    presentKeys: 'Keys Present',
    keyGeneration: 'Key Generation In Progress',
    keyAction: 'SSH key action',
    protocolVersion1: 'Version 1',
    protocolVersion2: 'Version 2',
    protocolVersion12: 'Version 1 and 2',
    dsa: 'DSA',
    rsa: 'RSA',
    dsarsa: 'DSA RSA',
    ecdsa: 'ECDSA',
    ed25519: 'ED25519',
    tabConfig: 'General Config',
    tabKey: 'Key Config',
    copySsh:'Copy SSH Key',
    overwriteDialogTitle: 'Overwrite Confirm',
    overwriteDialogContent: 'Do you want to overwrite the existing keys?',
  },
  webServer: {
    title: 'Web Server',
    http: 'HTTP',
    https: 'HTTPS',
    Certificate: 'Certificate',
    uploadCertificate: 'Upload Certificate',
    unsecureMode: 'HTTP Mode (Unsecure)',
    port: 'HTTP Port',
    maxSession: 'Maximum Allowable HTTP Sessions',
    httpHardTimeout: 'HTTP Session Hard Timeout',
    httpSoftTimeout: 'HTTP Session Soft Timeout',
    secureMode: 'HTTP Mode (Secure)',
    securePort: 'Secure Port',
    secureProtocol: 'Secure Protocol Level(s)',
    httpsMaxSession: 'Maximum Allowable HTTPS Sessions',
    httpsHardTimeout: 'HTTPS Session Hard Timeout',
    httpsSoftTimeout: 'HTTPS Session Soft Timeout',
    certStatus : 'Certificate Status',
    certProgress: 'Certificate Generation In Progress',
    createContent: 'Generate certificate for HTTPS',
    dhstrong: 'sslpem-dhstrong',
    dhweak: 'sslpem-dhweak',
    root: 'sslpem-root',
    server: 'sslpem-server',
    certName : 'Certificate File',
    certType : 'Certificate File Type',
    portHint: 'If the port number is empty, it will set to default value.',
    warnMsg: 'Are you sure to disabled http mode or https mode? If you disabled http mode or https mode, you will not be able to connect through http or https.',
    serverRestartWarnMsg: 'Web server restarting, it needs to take 20 seconds.'
  },
  portIntf: {
    title: 'Port Interface',
    neighbor: 'Neighbor',
    networkTitle: 'Network Port Interface',
    networkNeighborTitle: 'Network Port Interface Neighbor',
    serviceTitle: 'Service Port Interface',
    serviceNeighborTitle: 'Service Port Interface Neighbor',
    neighborTitle: 'Port Interface Neighbor',
    createItemTitle: 'Create Neighbor',
    createTitle: 'Create IPv6 Address',
    interfaceStatus: 'Interface Status',
    ipAddr: 'IP Address',
    subnetMask: 'Subnet Mask',
    defaultGateway: 'Default Gateway',
    ipv6AdminMode: 'IPv6 Administrative Mode',
    staticV6Gateway: 'Static IPv6 Gateway',
    dynamicV6Gateway: 'Dynamic IPv6 Gateway',
    showDhcpClientId: 'Show DHCP Client ID',
    ipv4Protocol: 'Configured IPv4 Protocol',
    ipv6Protocol: 'Configured IPv6 Protocol',
    ipv6Autoconfig: 'IPv6 AutoConfig Mode',
    dhcpClientId: 'DHCP Client ID',
    dhcpv6ClientDuid: 'DHCPv6 Client DUID',
    burnedInMacAddr: 'Burned In MAC Address',
    localAdminMacAddr: 'Locally Administered MAC address',
    ipv6Addr: 'IPv6 Address/Prefix Length',
    ipv6AddrList: 'IPv6 Address/Prefix Length List',
    ipv6Placeholder: 'IPv6 / Prefix',
    macAddrType: 'MAC Address Type',
    burnedinMacAddr: 'Burned In MAC Address',
    mgmtVlanId: 'Management VLAN ID',
    burnedIn: 'Burned in',
    localAdmin: 'Locally Administered',
    bootp: 'Bootp',
    dhcp: 'DHCP',
    euiFlag: 'EUI Flag',
    incomplete: 'Incomplete',
    reachable: 'Reachable',
    stale: 'Stale',
    delay: 'Delay',
    probe: 'Probe',
    unknown: 'Unknown',
    permanent: 'Permanent',
    other: 'Other',
    local: 'Local',
    age: 'Age(Secs)',
    isRtr: 'isRtr',
    state: 'NeighborState',
    deleteItemTitle: 'Delete Neighbor',
    manuel: 'Manuel',
  },
  dot1p: {
    dot1pTitle: 'Provisioning (IEEE 802.1p)',
    priority: 'Default Priority',
  },
  access: {
    accessTitle: 'Access',
    portAccessTitle: 'Console Port Access',
    accessID: 'ID',
    userName: 'User Name',
    connectFrom: 'Connection From',
    idleTime: 'Idle Time',
    sessionTime: 'Session Time',
    sessionType: 'Session Type',
    deleteAccessTitle: 'Delete Access',
    deleteAccessAlert: 'Are you sure to delete the sessions? It needs to take a while.',
    serialTimeout: 'Serial Port Login Timeout (minutes)',
    baudRate: 'Baud Rate (bps)',
    characterSize: 'Character Size (bits)',
    flowControl: 'Flow Control',
    stopBits: 'Stop Bits',
    parity: 'Parity',
    secondTimeout: 'Console2 Port Login Timeout (minutes)',
    password: 'Password',
    accessClassTitle: 'Access Class',
    mgmtAccessClassTitle: 'Management Access Class',
    mgmtAccessListTitle: 'Management Access List',
    accessListTitle: 'Access List',    
    listName: 'List Name',
    listAdminMode: 'List Admin Mode',
    noAccessList: 'No Access list has been defined.',
    ruleAction: 'Action',
    ruleSrc: 'IP-Source',
    ruleMask: 'Mask',
    interface: 'Interface',
    interfaceType: 'Interface Type',
    portType: 'Port Type',
    port: 'Port',
    protocolType: 'Protocol Type',
    priority: 'Priority',
    deleteRuleAlert: 'Are you sure to delete this rule?',
    deleteListAlert: 'Are you sure to delete "',
    deleteListAlertEnd: '" list?',
    accessListNamePlaceholder: 'Enter the Access List Name',
    slotPortPlaceholder: 'Enter the Slot/Port',
    portPlaceholder: 'Enter the Port',
    vlanPlaceholder: 'Enter the VLAN',
    priorityPlaceholder: 'Enter the Priority',
    sourcePlaceholder: 'Enter the IP-Source',
    sourceMaskPlaceholder: 'Enter the Mask',
    permit: 'Permit',
    deny: 'Deny',
    tcp: 'TCP',
    udp: 'UDP',
    network: 'Network',
    servicePort: 'Serviceport',
    vlan: 'VLAN',
    specifyPort: 'Specify a port number',
    anyPort: 'Any port number'
  },
  snmp: {
    snmpTitle: 'SNMP',
    userTitle: 'SNMP User',
    configTitle: 'SNMP Config',
    viewTitle: 'SNMP View',
    groupTitle: 'SNMP Group',
    filterTitle: 'SNMP Filter',
    hostTitle: 'SNMP Host',
    v3HostTitle: 'SNMPv3 Host',
    communityTitle: 'SNMP Community',
    deletePageTitle: 'Delete User',
    createUserTitle: 'Create SNMP User',
    name: 'Name',
    userNamePlaceholder: 'Enter the user name',
    groupName: 'Group Name',
    groupNamePlaceholder: 'Enter the group name',
    md5Pw: 'HMAC-MD5-96 Password',
    md5Key: 'HMAC-MD5-96 Pre-generated Key',
    shaPw: 'HMAC-SHA-96 Password',
    shaKey: 'HMAC-SHA-96 Pre-generated Key',
    authMeth: 'Auth Meth',
    privMeth: 'Priv Meth',
    privDes: 'Priv DES',
    privDesKey: 'Priv DES Key',
    remoteEngineId: 'Remote Engine ID',
    userName: 'User Name',
    password: 'Password / Key',
    passwordPlaceholder: 'Enter the password or key',
  },
  snmpView: {
    title: 'SNMP View',
    deletePageTitle: 'Delete Snmp View',
    deleteMsg: 'Are you sure you want to delete it ?',
    modify: ' Modify',
    name: 'Name',
    oidTree: 'OID Tree',
    type: 'Type',
    createPageTitle: 'Create SNMP View',
    viewName: 'View Name',
    groupName: 'Group Name',
  },
  snmpConfig: {
    title: 'SNMP Config',
    snmpServer: 'SNMP Server',
    sysname: 'Snmp Server Sysname',
    location: 'Snmp Server Location',
    contact: 'Snmp Server Contact',
    engineID: 'User Engine ID',
    port: 'SNMP Server Port',
    trap: 'SNMP Trap Send Port',
    sourceInterface: 'SNMP Source Interface',
    clientInterface: 'SNMP Trap Client Source Interface',
    interfaceType: 'SNMP Trap Client Source Type',
    interface: 'SNMP Trap Client Source Interface',
    ipv4: 'SNMP trap Client Source IPv4 Address',
    ipv6: 'SNMP trap Client Source IPv6 Address',
    flags: 'Trap Flags',
    auth: 'Authentication Flag',
    link: 'Link Up/Down Flag',
    spanningTree: 'Spanning Tree Flag',
    acl: 'ACL Traps',
    bgp: 'BGP Traps',
    dvmrp: 'DVMRP Traps',
    ospfv2: 'OSPFv2 Traps',
    pim: 'PIM Traps',
    temperature: 'Temperature Trap',
    fan: 'Fan Trap',
    power: 'Power Supply Module state trap',
  },
  snmpFilter: {
    title: 'SNMP Filter',
    deletePageTitle: 'Delete SNMP Filter',
    createPageTitle: 'Create SNMP Filter',
    deleteMsg: 'Are you sure you want to delete it ?',
    name: 'Name',
    tree: 'OID Tree',
    type: 'Type',
  },
  snmpGroup: {
    title: 'SNMP Group',
    deletePageTitle: 'Delete Group',
    createPageTitle: 'Create SNMP Group',
    deleteMsg: 'Are you sure you want to delete it ?',
    name: 'Name',
    prefix: 'Context Prefix',
    model: 'Security Model',
    level: 'Security Level',
    read: 'Views Read',
    write: 'Views Write',
    notify: 'Views Notify',
    groupName: 'Group Name',
  },
  snmpV3Host: {
    title: 'SNMPv3 Host',
    deletePageTitle: 'Delete SNMPv3 Host',
    createPageTitle: 'Create SNMPv3 Host',
    host: 'Target Address',
    hostPlaceholder: 'ipaddr | ipv6addr | hostname',
    userName: 'User Name',
    securityLevel: 'Security Level',
    udpPort: 'UDP Port',
    filterName: 'Filter name',
    seconds: 'TO Sec',
    retries: 'Retries',
    inputType: 'Input Type',
    hostPlaceholder: 'Enter the Host Name',
    trap: 'Trap',
    inform: 'Inform'
  },
  snmpHost: {
    title: 'SNMP Host',
    deletePageTitle: 'Delete Host',
    createPageTitle: 'Create SNMP Host',
    strHost: 'Target Address',
    hostPlaceholder: 'ipaddr | ipv6addr | hostname',
    community: 'Community',
    version: 'version',
    udpPort: 'UDP Port',
    filterName: 'Filter name',
    seconds: 'TO Sec',
    retries: 'Retries',
    trap: 'Trap',
    inform: 'Inform',
    auth: 'Auth',
    noAuth: 'No Auth',
    priv: 'Priv'
  },
  snmpCommunity: {
    title: 'SNMP Community',
    deletePageTitle: 'Delete Host',
    createPageTitle: 'Create SNMP Community',
    communityType: 'Community Type',
    communityName: 'Community-String',
    access: 'Community-Access',
    viewName: 'View Name',
    groupName: 'Group Name',
    ipAddress: 'IP Address',
    community: 'Community',
    communityGroup: 'Community Group',
    readOnly: 'Read Only',
    readWrite: 'Read/Write',
    super: 'Super User',
  },
  snmpTrapSrcInterface: {
    title: 'SNMP Trap Source Interface',
    type: 'Type',
    loopback: 'Loopback',
    vlan: 'VLAN',
    ipv4: 'IPv4 Address',
    ipv6: 'IPv6 Address',
  },
  rmon: {
    title: 'RMON',
    time: 'Time',
    event: 'Event',
    owner: "Owner",
    interval: 'Interval',
    intervalPlaceholder: 'Enter Interval',
    ownerPlaceholder: 'Enter Owner',
    create: 'Create',
    index: 'Index',
  },
  rmonAlarms: {
    title: 'RMON Alarms',
    alarmVariable: "Variable",
    alarmLastSampleValue: 'Last Sample Value',
    sampleType: "Sample Type",
    startup: "Startup Alarm",
    risingThreshold: 'Rising Threshold',
    risingEventIndex: 'Rising Event Index',
    fallingThreshold: 'Falling Threshold',
    fallingEventIndex: 'Falling Event Index',
    absolute: 'absolute',
    delta: 'delta',
    alarmIndexPlaceholder: 'Enter Alarms Index',
    alarmVariablePlaceholder: 'Enter Alarms Variable',
    risingThresholdPlaceholder: 'Enter Rising Threshold',
    risingEventIndexPlaceholder: 'Enter Rising Event Index',
    fallingThresholdPlaceholder: 'Enter Falling Threshold',
    fallingEventIndexPlaceholder: 'Enter Falling Event Index',
    startupPlaceholder: "Enter Startup Alarm",
    rising: 'rising',
    falling: 'falling',
    risingFalling: 'rising-falling',
  },
  rmonHcAlarms: {
    title: 'RMON High Capacity Alarms',
    risingThresholdHigh: 'Rising Threshold High',
    risingThresholdLow: 'Rising Threshold Low',
    risingStatus: 'Rising Threshold Status',
    fallingThresholdHigh: 'Falling Threshold High',
    fallingThresholdLow: 'Falling Threshold Low',
    fallingStatus: 'Falling Threshold Status',
    positive: 'Positive',
    negative: 'Negative',
    risingThresholdHighPlaceholder: 'Rising Threshold High',
    risingThresholdLowPlaceholder: 'Rising Threshold Low',
    fallingThresholdHighPlaceholder: 'Falling Threshold High',
    fallingThresholdLowPlaceholder: 'Falling Threshold Low',
  },
  rmonEvents: {
    title: 'RMON Event',
    lastTimeSent: 'Last Time Sent',
    community: 'Community',
    communityPlaceholder: 'Enter Community',
    log: 'Log',
    trap: 'Trap',
    logTap: 'Log-Trap',
    descriptionPlaceholder: 'Enter Description',
    indexPlaceholder: 'Enter Event Index',
  },
  rmonCollectionHistorys: {
    title: 'RMON Collection History',
    requestBuckets: 'Requested Samples',
    grantedBuckets: 'Granted Samples',
    historyIndexPlaceholder: 'Enter History Index',
    buckets: 'Buckets',
    bucketsPlaceholder: 'Enter Buckets',
  },
  rmonHistory: {
    title: 'RMON History',
    modeError: 'Errors',
    modeThroughput: 'Throughput',
    modeOther: 'Other',
    requestSamples: 'Requested Samples',
    grantedSamples:'Granted Samples',
    maxTableSize: 'Maximum table size',
    period: 'Period',
    crcAlign: 'CRC Align',
    undersizePkts: 'Undersize Packets',
    oversizePkts: 'Oversize Packets',
    fragments: 'Fragments',
    jabbers: 'Jabbers',
    droped: 'Dropped',
    collisions: 'Collisions',
    octets: 'Octets',
    packets: 'Packets',
    broadcast: 'Broadcast',
    multicast: 'Multicast',
    util: 'Util',
  },
  rmonStatistics: {
    title: 'RMON Statistic',
    port: 'Port',
    dropped: 'Dropped',
    octets: 'Octets',
    packets: 'Packets',
    broadcast: 'Broadcast',
    multicast: 'Multicast',
    crcAlignErrors: 'CRC Align Errors',
    collisions: 'Collisions',
    undersizePkts: 'Undersize Packets',
    oversizePkts: 'Oversize Packets',
    fragments: 'Fragments',
    jabbers: 'Jabbers',
    pktsOfLength: 'Total Packets Length',
    hcOverflowPkts: 'HC Overflow Packets',
    hcPkts: 'HC Packets',
    hcOverflowOctets: 'HC Overflow Octets',
    hcOctets: 'HC Octets',
    hcOverflowPktsOfLength: 'HC Packets Overflow Length',
    hcPktsOfLength: 'HC Total Pcakets Length'
  },
  rmonLogs: {
    title: 'RMON Log',
    maxTableSize: 'Maximum Table Size',
    logIndex: 'Log Index',
  },

  evb: {
    title: 'Edge Virtual Bridging',
    interfaceTitle: 'EVB Interface',
    ifDetailTitle: 'LLDP EVB Interface',
    txStatus: 'Transmission Status',
    opVal: 'Operational value',
    lldpInfo: 'Information',
    lldpLocal: 'Local',
    lldpRemote: 'Remote',
    ecpMaxRetries: 'ECP Max Retries',
    ecpRetrain: 'ECP Retransmission (Exponent)',
    resourceWaitDelay: 'Resource Wait Delay (Exponent)',
    reinitKeepAlive: 'Reinit Keep Alive (Exponent)',
    bridgeStatus: 'EVB Bridge Status',
    groupId: 'Group ID',
    reflectRelay: 'Reflect Relay',  
    reflectRelayRequest: 'Reflect Relay Request',
    reflectRelayStatus: 'Reflect Relay Status',
    scid: 'SCID',
    svid: 'SVID',
    schannelTitle: 'EVB S-Channel',
    schannel: 'S-Channel',
    vsiid: 'VSI ID',
    vdpState: 'VDP State',
    vsiTitle: 'EVB VSI',
    vsi: 'VSI',
    vdpTlvType: 'VDP TLV Type',
    vsiIdType: 'VSI ID Type',
    vsiManagerId: 'VSI Manager ID',
    vsiTypeId: 'VSI Type ID',
    vsiTypeVersion: 'VSI Type Version',
    vsiFilterInfoFormat: 'Filter Info Format',
    filterInfo: 'Filter Info',
    vsiId: 'VSI ID',
    evbRole:'Role',
    sComponent: 'S-Component',
    channelCap:'Channel Capacity',
  },
  dcbx: {
    title: 'DCBX Interface',
    dcbx: 'DCBX',
    interface: 'DCBX Interface',
    dcbxRole: 'Role',
    version: 'DCBX Version',
    sourceSelect: 'Is Configuration Source Selected',
    sourcePort: 'Configuration Source Port',
    dcbxTx: 'DCBX Tx',
    dcbxRx: 'DCBX Rx',
    dcbxErrors: 'DCBX Errors',
    unknownTLV: 'Unknown TLV',
    ieee: 'IEEE',
    auto: 'Auto',
    cee: 'CEE 1.06',
    cin: 'CIN 1.0',
    manual: 'Manual',
    autoUp: 'Auto-up',
    autoDown: 'Auto-down',
    configurationSource: 'Configuration-source',
    dcbxStatus: 'DCBX operational status',
    versionDetail: 'Configured DCBX version',
    peerDcbxVersion: 'Peer DCBX version',
    peerMac: 'Peer MAC',
    peerDesc: 'Peer Description',
    dcbxRoleDetail: 'Auto-configuration Port Role',
    peerSource: 'Peer is configuration source',
    errorCounters: 'Error Counters',
    etsError: 'ETS incompatible configuration',
    pfcError: 'PFC incompatible configuration',
    disappearError: 'Disappearing neighbor',
    multiDetect: 'Multiple neighbors detected',
    localConfig: 'Local configuration',
    peerConfig: 'Peer configuration',
    subtype: 'Subtype',
    operVersion: 'Oper/Max Version',
    threeStats: 'En/Will/Error',
    pfcTx: 'PFC configuration',
    pfcWilling: 'PFC Willing',
    etsWilling: 'ETS Willing',
    mbc: 'MBC',
    pfcSupported: 'Max PFC classes supported',
    vector: 'PFC enable vector',
    etsTx: 'ETS configuration',
    creditShaper: 'ETS Credit Shaper',
    tcsSuppored: 'Number of TCs supported',
    etsPriority: 'Priority assignment',
    trafficClass: 'Traffic class bandwidth (%)',
    trafficAlgo: 'Traffic selection algorithm',
    applicationPri: 'Application Priority',
    application: 'Application',
    etsPriGroupId: 'Priority group ID',
    etsPG: 'PG percentage (%)',
    strictPri: 'Strict priority',
    peerVersion: 'Operational version',
    peerMaxVersion: 'Max version',
    peerSeqNumber: 'Sequence number',
    peerAckNumber: 'Ack number',
    common: 'Common',
    peer: 'Peer',
  },
  dcbxTlv: {
    title: 'DCBX TLV',
    etsConfig: 'ETS Config',
    etsReommend: 'ETS Recommend',
    pfcConfig: 'PFC',
  },
  portSecurity: {
    title: 'Port Security',
    dynamicLimit: 'Dynamic Limit',
    staticLimit: 'Static Limit',
    sticky: 'Sticky',
    static: 'Static',
    dynamic: 'Dynamic',
    violation: 'Violation',
    createStaticMac: 'Add Static MAC Address'
  },
  script: {
    title: 'Configuration Script',
    downloadScript: 'Download Script',
    uploadScriptTitle: 'Upload Script',
    uploadKeyTitle: 'Upload Public Key',
    verifyTitle: 'Verify Script',
    scriptName: 'Configuration Script Name',
    scriptSize: 'Script Size (Bytes)',
    scriptApply: 'Apply Script',
    scriptValid: 'Validate Script',
    copyToServer: 'Copy a configuration script file to server',
    copyToSwitch: 'Upload a configuration script file to Switch',
    copyKeyToSwitch: 'Upload a public key file to Switch',
    verify: 'Verify',
    noVerify: 'No Verify',
    verified: 'Verified',
    notverified: 'Not Verified',
    verifyStatus: 'Signature Verification ',
    run: 'Run',
    validate: 'Validate',
    deleteItemTitle: 'Delete Script',
    clearItemTitle: 'Clear Script'
  },
  netConf: {
    title: 'Network Config',
    maxSession: 'Max Session',
    sessionTimeout: 'Session Timeout',
    helloTimeout: 'Hello Timeout',
  },
  cliBanner: {
    title: 'CLI Banner',
    bannerMsg: 'Banner Message Configured',
    uploadTitle: 'Upload CLI Banner',
    bannerName: 'CLI Banner File',
  },
  vrfs: {
    title: 'Virtual Router',
    vrfInterface: 'VRF Interface',
    identifier: 'Identifier',
    routeDistinguisher: 'Route Distinguisher',
    maxRoute: 'Maximum Routes',
    warningOnly: 'Warning-only',
    vrf: 'VRF',
    addVrf: 'Add Virtual Router',
    rtSubTitle: 'RT Extended Communities',
    exportRtTitle: 'Export VPN Route-Target Communities',
    importRtTitle: 'Import VPN Route-Target Communities',
    updateRt: 'Update the Route-Target Extended Community',
    routeTargetDirection: 'Route-Target Direction',
    routeTargetId: 'Route-Target Id',
    export: 'Export',
    import: 'Import',
    both: 'Both',
    nmuOfIntfs: 'Number of interfaces',
    routeTableSize: 'Route table size',
    namePlaceholder: 'Enter the VRF Name',
    rtIdPlaceholder: 'Enter the Route-Target Id',
    vrfSetHint: 'Please create a VRF first.',
  },
  fipSnooping: {
    title: 'FIP Snooping',
    globalMode: 'Global Mode',
    status: 'General Status',
    fcoeVlanList: 'FCoE VLAN List',
    fcfs: 'FCFs',
    eNodes: 'ENodes',
    sessions: 'Sessions',
    maxVlans: 'Max VLANs',
    maxFcfs: 'Max FCFs in VLAN',
    maxENodes: 'Max ENodes',
    maxSessions: 'Max Sessions',
  },
  fipSnoopingInterfaces: {
    title: 'FIP Snooping Interfaces',
  },
  fipSnoopingENodes: {
    title: 'FIP Snooping ENodes',
    vlan: 'VLAN',
    nameId: 'Name-ID',
    eNodeMac: 'ENode-MAC',
    fcfs: 'FCFs',
    sessions: 'Sessions',
    establish: 'Sessions Established',
    waiting: 'Sessions Waiting',
    failed: 'Sessions Failed',
    maxSize: 'Max-FCoE-PDU',
    time: 'Time Elapsed',
    fcfsConnected: 'FCFs Connected',
    noEnodes: 'ENode entries are not available.',
  },
  fipsnoopingstats: {
    title: 'FIP Snooping Statistics',
    tableTitle: 'FIP-Operation / Number of Pkts',
    vlanRequest: 'VR',
    notification: 'VN',
    multiSolicitation: 'MDS',
    uniSolicitation: 'UDS',
    fabricLogin: 'FLOGI',
    fabricDiscovery: 'FDISC',
    logout: 'LOGO',
    vnPort: 'VNPort-keep-alive',
    multiAdvertise: 'MDA',
    uniAdvertise: 'UDA',
    flogiAcc: 'FLOGI_ACC',
    flogiRjt: 'FLOGI_RJT',
    fdiscAcc: 'FDISC_ACC',
    fdiscRjt: 'FDISC_RJT',
    logoAcc: 'LOGO_ACC',
    logoRjt: 'LOGO_RJT',
    clear: 'CVL',
    virtualTimeout: 'Number of Virtual Session Timeouts',
    fcfTimeout: 'Number of FCF Session Timeouts',
    failures: 'Number of Session configuration failures',
    fcfSessions: 'Number of Sessions denied with FCF limit',
    eNodeSessions: 'Number of Sessions denied with ENode limit',
    systemSessions: 'Number of Sessions denied with System limit',
    clearTips: 'Are you sure to clear FIP Snooping Statistics of specified interface?',
    clearAllTips: 'Are you sure to clear FIP Snooping Statistics of all interfaces?',
  },
  fipsnoopingfcfs: {
    title: 'FIP Snooping FCFs',
    vlan: 'VLAN',
    eNodes: 'ENodes',
    type: 'FPMA/SPMA',
    fcMap: 'FC-MAP',
    fcfMac: 'FCF-MAC',
    nameId: 'Name-ID',
    name: 'Fabric-Name',
    sessions: 'Sessions',
    dBit: 'D-bit',
    login: 'Available for Login',
    priority: 'Priority',
    fkaAdv: 'FKA-ADV(FKA_ADV_PERIOD*5)',
    fcfTime: 'FCF Expiry Time',
    timeElapsed: 'Time Elapsed',
    noFcfs: 'FCF entries are not available.',
    milliseconds: 'milliseconds',
    seconds: 'seconds'
  },
  fipSessions: {
    title: 'FIP Snooping Sessions',
    fcfMac: 'FCF-MAC',
    eNodeMac: 'ENode-MAC',
    vlan: 'VLAN',
    fcoeMac:'FCoE-MAC',
    fcId: 'FC-ID',
    eNodeInfo: 'ENode Information',
    noSession: 'FIP snooping sessions are not available.',
    filterDataTitle: 'Display the FIP snooping sessions',
    filterFcf: 'Display the FIP snooping sessions established on the FCF-MAC',
    filterInterface: 'Display the FIP snooping sessions on the interface',
    filterVlan: 'Display the FIP snooping configuration on the VLAN'
  },
  fipSessionsDetail: {
    title: 'Session Detail',
    fcfMap: 'FC-MAP',
    fcfs: 'FCFs',
    eNodes: 'ENodes',
    sessions: 'Sessions',
    fcfInfo: 'FCF Information',
    fcfMac: 'MAC',
    eNodeInfo: 'ENode Information',
    eNodeWaiting: 'Waiting',
    sessionInfo: 'Session Information',
    request: 'Request (FP, SP)',
    expiryTime: 'Expiry Time(sec)',
    mode: 'Mode',
    state: 'State',
    sessionTime: 'Session-Time'
  },
  fipsnoopingvlans: {
    title: 'FIP Snooping VLAN',
    createEntry: 'Create FIP Snooping VLAN',
    vlanId: 'VLAN ID',
    fcMap: 'FC-MAP',
    fcfs: 'FCFs',
    eNodeso: 'ENodes',
    sessions: 'Sessions',
    activePorts: 'Active Ports',
    inactivePorts: 'Inactive Ports',
    vlanList: 'Enter VLAN list like 2,7,10-12',
  },
  protectedport:{
    title: 'Protected Ports',
    groupTitle: 'Protected Groups',
    name: 'Name',
    groupNameErr: 'Invalid group name',
    clearInfo: 'Clear groups',
  },
  qcn:{
    treeTitle: 'QCN',
    title: 'QCN Global Setting',
    qcnStatus: 'QCN Status',
    cnmPriority: 'CNM Transmit Priority',
  },
  qcnInterfaces:{
    title: 'QCN Interfaces',
    cpIndex: 'CP-Index',
    mac: 'MAC-Address',
    cpIdentifier: 'CP-Identifier',
    cnmPriority: 'CNM-Transmit-Priority',
    weight: 'Congestion Queue Weight',
    sample: 'Sample-Base',
    cpSize: 'CP-Sizesetpoint',
    minHeader: 'Min-HeaderOctets',
  },
  qcnpriority:{
    title: 'QCN Global Priority',
    perPriority: 'Dot1p Priority',
    defenseMode: 'Defense Mode',
    alternate: 'Alternate-priority',
    cpCreation: 'CP-creation',
    errorPort: 'Errored Port List',
    lldp: 'LLDP Mismatch List',
    activePort: 'Active Port List',
    interior: 'Interior',
    edge: 'Edge',
  },
  qcnLldpInterfaces:{
    title: 'QCN LLDP Interfaces',
    qcnTlv: 'QCN TLV',
  },
  qcnstats:{
    title: 'QCN Statistics',
    cpIndex: 'CP-Index',
    cnmTransmit: 'CNMs Transmitted',
    clearTips: 'Are you sure to clear QCN Statistics?',
    clearQcnStats: 'Clear QCN Statistics',
  },
  qcnpriorityinterfaces:{
    title: 'QCN Priority Interfaces',
    perPriority: 'Per-priority',
    defenseChoice: 'Defense Mode Choice',
    defenseMode: 'Defense Mode',
    alternate: 'Alternate Priority',
    component: 'Component',
    interior: 'Interior',
    edge: 'Edge',
    alternateRange: 'The field must be a number and between 0 and 7.',
  },
  sourceGuard: {
    title: 'Source Guard',
    v4Title: 'IPv4 Source Guard',
    v6Title: 'IPv6 Source Guard',
    createEntry: 'Create Static Source Guard',
    verifyTitle: 'IP Source Guard Verify',
    filterType: 'Filter Type',
    ipmac: 'ip-mac',
    ipv6mac: 'ipv6-mac'
  },
  multiconfig:{
    title: 'Multi Configuration',
    downloadTitle: 'Download Configuration',
    uploadFileTitle: 'Upload File Configuration',
    uploadRunningTitle: 'Upload Running Configuration',
    startupConfig: 'Startup Configuration',
    configTitle: 'Configuration Name',
    configAction: 'Config Action',
    copyToServer: 'Download a Configuration File',
    first: 'First-Config',
    secnod: 'Second-Config',
    third: 'Third-Config',
    startup: 'StartUp-Config',
    running: 'Running-Config',
    default: 'Factory-Defaults-Config',
    applyTitle: 'Apply a Config to StartUp-Config',
    resetTitle: 'Reset Config to Default',
    notSupport: '(Not Support)',
    currentCfg: '(Current Config)',
  },
  cutthroughconfig:{
    title: 'Cut Through',
    current: 'Current Mode',
    configured: 'Configured Mode',
    reloadEnable: 'The mode (enable) is effective from the next reload of switch/stack.',
    reloadDisable: 'The mode (disable) is effective from the next reload of switch/stack.',
  },
  loopbackInterface: {
    title: 'Loopback Interface',
    loopbackId: 'Loopback ID',
    interfaceName: 'Interface Name',
    status: 'Interface Link Status',
    mtuSize: 'MTU Size (Bytes)'
  },
  ipHeapSummary: {
    title: 'IP Routing Heap Summary',
    heapSize: 'Heap Size',
    memoryUse: 'Memory In Use',
    freeList: 'Memory on Free List',
    memoryHeap: 'Memory Available in Heap',
    useMax: 'In Use High Water Mark',
  },
  routingPolicy: {
    treeTitle: 'Routing Policy',
  },
  prefixlists: {
    title: 'IP Prefix Lists',
    pfxListName: 'Prefix List Name',
    description: 'Description',
    sequenceNum: 'Sequence Number',
    operation: 'Operation',
    ipAddr: 'IP Address',
    ipPfxLen: 'IP Prefix Length',
    ipPfxLenLe: 'Maximum IP Prefix Length',
    ipPfxLenGe: 'Minimum IP Prefix Length',
    createPrefixListsEntry: 'Create IP Prefix Lists',
    pfxListNamePlaceholder: 'Enter the Prefix List Name',
    descriptionPlaceholder: 'Enter the Description',
    pfxListLenPlaceholder: 'Enter the IP Prefix Length',
    hitcount: 'hitcount',
    permit: 'Permit',
    deny: 'Deny',
    entries: 'Entries',
    updateSeq: 'Renumber Sequence',
    startNum: 'Start Number',
    increment: 'Increment Value',
    clearTips: 'Are you sure to clear prefix-list hit counters of specified interfaces?',
    clearAllTips: 'Are you sure to clear prefix-list hit counters of all interfaces?',
  },
  policyRouteMaps: {
    title: 'Policy Route Maps',
    mapName: 'Map Name',
    createPolicyRouteMap: 'Create Policy Route Map',
    createPolicyRouteMapHint: 'If you want to set the route-map to this interface, please create a route-map first.'
  },
  ipv6prefixlists: {
    title: 'IPv6 Prefix Lists',
    pfxListName: 'Prefix List Name',
    description: 'Description',
    sequenceNum: 'Sequence Number',
    action: 'Action',
    ipv6Addr: 'IPv6 Address',
    ipv6PfxLen: 'IPv6 Prefix Length',
    ipv6PfxLenLe: 'Maximum IPv6 Prefix Length',
    ipv6PfxLenGe: 'Minimum IPv6 Prefix Length',
    ipv6PfxLenPlaceholder: 'Enter the IPv6 Prefix Length',
    createPrefixListsEntry: 'Create IPv6 Prefix Lists',
    pfxListNamePlaceholder: 'Enter the Prefix List Name',
    descriptionPlaceholder: 'Enter the Description',
    hitcount: 'Hit Count',
    permit: 'Permit',
    deny: 'Deny',
    updateSeq: 'Renumber Sequence',
    startNum: 'Start Number',
    increment: 'Increment Value',
    clearTips: 'Are you sure to clear IPv6 prefix-list hit counters of specified interfaces?',
    clearAllTips: 'Are you sure to clear IPv6 prefix-list hit counters of all interfaces?'
  },
  ipecmp: {
    title: 'IP ECMP',
    sharingNumber: 'Sharing Mode',
    sharingStatus: 'Sharing Status',
    inner: 'Inner',
    outer: 'Outer',
  },
  ipRouteSummary: {
    title: 'IP Route Summary',
    vrf: 'VRF',
    vrfName: 'VRF Name',
    connectRoute: 'Connected Routes',
    staticRoute: 'Static Routes',
    kernelRoute: 'Kernel Routes',
    unnumberRoute: 'Unnumbered Peer Routes',
    bgpRoute: 'BGP Routes',
    bgpExternal: 'External',
    bgpInternal: 'Internal',
    bgpLocal: 'Local',
    ospfRoute: 'OSPF Routes',
    intraArea: 'Intra Area Routes',
    interArea: 'Inter Area Routes',
    externalType1: 'External Type-1 Routes',
    externalType2: 'External Type-2 Routes',
    rejectRoute: 'Reject Routes',
    netPrototype: 'Net Prototype',
    totalRoute: 'Total Routes',
    bestRoute: 'Best Routes (High)',
    alternate: 'Alternate Routes',
    leakRoute: 'Leak Routes',
    rfcRoute: 'RFC5549 Routes - IPv4 with IPv6 nexthop',
    routeAdds: 'Route Adds',
    routeModify: 'Route Modifies',
    routeDelete: 'Route Deletes',
    unresolved: 'Unresolved Route Adds',
    invalidRoute: 'Invalid Route Adds',
    failAdds: 'Failed Route Adds',
    failKernel: 'Failed Kernel Route Adds',
    failHardware: 'Hardware Failed Route Adds',
    reservedLocal: 'Reserved Locals',
    uniqueNexthop: 'Unique Next Hops (High)',
    nexthopGroup: 'Next Hop Groups (High)',
    ecmpGroup: 'ECMP Groups (High)',
    ecmpRoute: 'ECMP Routes',
    truncatedEcmp: 'Truncated ECMP Routes',
    ecmpRetries: 'ECMP Retries',
    routeWithHop: 'Routes with n Next Hops',
    clearTips: 'Are you sure to clear IP Route Summary Statistics?',
    routesWith: 'Routes with ',
    nextHop: ' Next Hop',
    nextHops: ' Next Hops',
    ripRoutes: 'RIP Routes'
  },
  ipBrief: {
    treeTitle: 'IP Routing',
    title: 'IP Brief',
    vrf: 'VRF',
    vrfName: 'VRF Name',
    defaultTime: 'Default Time to Live',
    routingMode: 'Routing Mode',
    maxNextHops: 'Maximum Next Hops',
    maxRoutes: 'Maximum Routes',
    maxStaticRoutes: 'Maximum Static Routes',
    icmpRateLimitInterval: 'ICMP Rate Limit Interval',
    icmpRateLimitBurstSize: 'ICMP Rate Limit Burst Size',
    icmpEchoReplies: 'ICMP Echo Replies',
    icmpRedirects: 'ICMP Redirects',
    msec: 'msec',
    messages: 'messages',
    notset: 'Not Set',
  },
  ipStats: {
    title: 'IP Stats',
    vrf: 'VRF',
    vrfName: 'VRF Name',
    receive: 'IP In Receives',
    hdrError: 'IP In Headers Errors',
    addrError: 'IP In Address Errors',
    forward: 'IP Forward Datagrams',
    unknownProtos: 'IP In Unknown Protos',
    inDiscard: 'IP In Discards',
    deliver: 'IP In Delivers',
    request: 'IP Out Requests',
    outDiscard: 'IP Out Discards',
    noRoute: 'IP Out No Routes',
    timeout: 'IP Reassembly Timeout',
    reasmRequest: 'IP Reassembly Request',
    reasmOk: 'IP Reassembly Oks',
    reasmFail: 'IP Reassembly Fails',
    fragOk: 'IP Fragmented OKs',
    fragFail: 'IP Fragmented Fails',
    fragCreate: 'IP Fragmented Creates',
    routingDiscard: 'IP Routing Discards',
    inMsg: 'ICMP In Messages',
    inError: 'ICMP In Errors',
    inDest: 'ICMP In Destination Unreachs',
    inTimeExceed: 'ICMP In Time Exceed',
    inParameter: 'ICMP In Parameter Problem',
    inSrouce: 'ICMP In Source Quenchs',
    inRedirect: 'ICMP In Redirects',
    inEcho: 'ICMP In Echos',
    inEchoRep: 'ICMP In Echo Reply',
    inTimestamp: 'ICMP In Time Stamps',
    inTimestampRep: 'ICMP In Time Stamps Reply',
    inMask: 'ICMP In Addrress Masks',
    inMaskReply: 'ICMP In Addrress Masks Reply',
    outMsg: 'ICMP Out Messages',
    outError: 'ICMP Out Errors',
    outDest: 'ICMP Out Destination Unreachs',
    outTimeExceed: 'ICMP Out Time Exceeds',
    outParameter: 'ICMP Out Parameter Problems',
    outSrouce: 'ICMP Out Source Quenchs',
    outRedirect: 'ICMP Out Source Redirects',
    outEcho: 'ICMP Out Echos',
    outEchoRep: 'ICMP Out Echos Reply',
    outTimestamp: 'ICMP Out Time Stamps',
    outTimestampRep: 'ICMP Out Time Stamps Reply',
    outMask: 'ICMP Out Address Masks',
  },
  ipRoutePreferences: {
    title: 'IP Route Preferences',
    vrf: 'VRF',
    vrfName: 'VRF Name',
    local: 'Local',
    bgpExternal: 'BGP External',
    ospfIntra: 'OSPF Intra',
    ospfInter: 'OSPF Inter',
    ospfExternal: 'OSPF External',
    bgpInternal: 'BGP Internal',
    bgpLocal: 'BGP Local',
    configGateway: 'Configured Default Gateway',
    dhcpGateway: 'DHCP Default Gateway',
    rip: 'RIP'
  },
  routingPolicy: {
    treeTitle: 'Routing Policy',
  },
  routeMaps: {
    title: 'Route Maps',
    routeMap: 'route-map',
    matchClauses: 'Match clauses',
    setClauses: 'Set clauses',
    mapName: 'Route Map Name',
    sequenceNum: 'Sequence Number',
    action: 'Action',
    actionSeqNumber: 'Action / Seq.Number',
    dstIntf: 'Destination Interface',
    ipAccessList: 'IP Address Access-List',
    macAccessList: 'MAC Access-List',
    interface: 'Interface',
    lengthMinMax: 'Minimum Length / Maximum Length',
    lengthMin: 'Length Minimum',
    lengthMax: 'Length Maximum',
    ipDefaultNextHop: 'IP Default Next Hop',
    ipNextHop: 'IP Next Hop',
    ipv6NextHop: 'IPv6 Next Hop',
    localPreference: 'Local Preference',
    ipPrecedence: 'IP Precedence',
    ipPrefixList: 'IP Address Prefix-List',
    ipv6PrefixList: 'IPv6 Address Prefix-List',
    asPath: 'AS-path',
    asPathPrepend: 'AS-path Prepend',
    commList: 'Community List',
    community: 'Community',
    communityExact: 'Community Exact',
    communityAdditive: 'Community Additive',
    communityStatement: 'Community Statement',
    extCommList: 'Ext-Community List',
    extCommunity: 'Ext-Community',
    extCommunityExact: 'Ext-Community Exact',
    extCommunityAdditive: 'Ext-Community Additive',
    extCommunityAttr: 'Ext-Community Attribute',
    exactMatch: 'Exact-match',
    additive: 'Additive',
    commListDelete: 'delete',
    rt: 'route-target',
    soo: 'site-of-origin',
    noAdvertise: 'No-advertise',
    noExport: 'No-export',
    metric: 'Metric',
    createRouteMaps: 'Create Route Map',
    permit: 'permit',
    deny: 'deny',
    null0: 'null0',
    updateList: 'Update List',
    addMatch: 'Add match terms',
    delMatch: 'Delete match terms',
    addSet: 'Add set terms',
    delSet: 'Delete set terms',
    addDst: 'Add Destination Port',
    removeSrc: 'Remove Source Port',
    list: 'List',
    specifyListName: 'Specify List Name',
    setting: 'Configure Setting',
    mapNamePlaceholder: 'Enter the Map Name',
    matchExtCommuPlaceholder: 'Enter the list number (ex. 1 or 1,2,3)',
    matchMacPlaceholder: 'Enter the MAC acl list names',
    matchIpv6Placeholder: 'Enter the ipv6 list name',
    matchlistNamePlaceholder: 'Enter the list name (ex. aaa or aaa,bbb,ccc)',
    listNameHint: '(Please use comma to separate multiple lists.)',
    ipNextHopPlaceholder: 'Enter Ip addresses of up to 16 next-hops',
    ipv6NextHopPlaceholder: 'Enter the next-hop address',
    ipNextHopHint: '(Please use comma to separate multiple IP addresses.)',
    commuSetPlaceholder: 'Enter the integers(1-4294967295) or AA:NN',
    extCommuSetPlaceholder: 'Enter the ASN:nn or IP-address:nn',
  },
  ipRoute: {
    title: 'IP Route',
    routeType: 'Route Type',
    metric: 'Metric',
    nextHop: 'Next Hop',
    timestamp: 'Time Stamp',
    gateway: 'Gateway',
    vrfName: 'VRF Name',
    preference: 'Preference',
    subnetmask: 'Subnetmask',
    nexthopIp: 'Next Hop IP',
    vlanID: 'VLAN ID',
    prefixLen: 'Prefix Length',
    netNexthop: 'Net Next Hop',
    numRoutes: 'Num Routes',
    createIpRouteEntry: 'Create IP Route',
    vrfPlaceholder: 'Enter the VRF Name',
    null0: 'Null0',
    descriptionPlaceholder: 'Enter the Description',
    filterDataTitle: 'Filter by Mode, IP address, IP mask, longer-prefixes',
    longerPrefixes: 'longer-prefixes',
    filterOption: 'Filter Option: ',
    noFilterHint: 'Display routing table information.',
  },
  ipInterfaces: {
    title: 'IP Interfaces',
    routeStatus: 'Routing Interface Status',
    primaryIp: 'Primary IP Address',
    secondIp: 'Secondary IP Address',
    unnumberGratArp: 'Unnumbered - gratuitous ARP accept',
    unnumberInterface: 'Unnumbered - numbered interface',
    proxyArp: 'Proxy ARP',
    localProxyArp: 'Local Proxy ARP',
    method: 'Method',
    routingMode: 'Routing Mode',
    adminMode: 'Administrative Mode',
    forwardNet: 'Forward Net Directed Broadcasts',
    activeState: 'Active State',
    linkSpeed: 'Link Speed Data Rate',
    mac: 'MAC Address',
    encapsulation: 'Encapsulation Type',
    netdirbcast: 'Network-Directed Broadcasts',
    mtu: 'IP MTU',
    bandwidth: 'Bandwidth',
    suppressStatus: 'Interface Suppress Status',
    dhcpStatus: 'DHCP Status',
    dhcpClientIdStatus: 'DHCP Client Identifier Status',
    dhcpClientIdString: 'DHCP Client Identifier',
    vrfName: 'VRF Name',
    type: 'Type',
    ipMethod: 'IP Method',
    ethernet: 'Ethernet',
    snap: 'SNAP',
    ipAddressPlaceholder: 'Enter the IP Address',
    maskPlaceholder: 'Enter the IP Subnet Mask',
    destinationUnreach: 'Destination Unreachable',
    icmpRedirMode: 'ICMP Redirect Mode',
    unnumberIntfHint: 'If the loopback ID is empty, it will clear unnumber interface.'
  },
  ipEcmpGroups: {
    title: 'IP Route ECMP Groups',
    groupNum: 'ECMP Group No.',
    nextHops: 'Number of Next Hops',
    usedRoute: 'Number of Used Route',
    hopContents: 'Hop Contents',
  },
  vrrp: {
    title: 'VRRP',
    adminMode: 'VRRP Admin Mode',
  },
  vrrpInterface: {
    title: 'VRRP Interface',
    adminMode: 'Administrative Mode',
    vrid: 'VRID',
    ipAddr: 'Primary IP Address',
    secondaryIpAddr: 'Secondary IP Address',
    vMacAddr: 'VMAC Address',
    acceptMode: 'Accept Mode',
    authMode: 'Authentication Type',
    key: 'Key',
    preempt: 'Pre-empt Mode',
    priority: 'Priority',
    configuredPriority: 'Configured Priority',
    advertiseInterval: 'Advertisement Interval (secs)',
    trackedInterfaces: 'Track Interface',
    trackedIpRoutes: 'Track Route',
    trackIpAddr: 'IP address/prefix-length',
    reachable: 'Reachable',
    decrementPriority: 'Decrement Priority',
    state: 'State',
    createEntry: 'Create VRID for VRRP Interface',
    updateTrackEntry: 'Update VRRP Config',
    interfacePlaceholder: 'Enter Interface',
    vridPlaceholder: 'Enter VRID',
    simple: 'Simple',
    trackIntfHint: 'No interfaces are tracked for this vrid and interface combination.',
    trackRouteHint: 'No routes are tracked for this vrid and interface combination.',
  },
  vrrpInterfaceStats: {
    title: 'VRRP Interface Stats',
    vlan: 'VLAN',
    upTime: 'Uptime',
    protocol: 'Protocol',
    stateTransitionedToMaster: 'State Transitioned to Master',
    advertisementReceived: 'Advertisement Received',
    advertisementIntervalErrors: 'Advertisement Interval Errors',
    authenticationFailure: 'Authentication Failure',
    ipTtlErrors: 'IP TTL Errors',
    zeroPriorityPacketsReceived: 'Zero Priority Packets Received',
    zeroPriorityPacketsSent: 'Zero Priority Packets Sent ',
    invalidTypePacketsReceived: 'Invalid Type Packets Received',
    addressListErrors: 'Address List Errors',
    invalidAuthenticationType: 'Invalid Authentication Type',
    authenticationTypeMismatch: 'Authentication Type Mismatch',
    packetLengthErrors: 'Packet Length Errors',
    advertisementSent: 'Advertisement Sent',
    clearVrrpStateTitle: 'Clear VRRP Statistics',
    clearVrrpStateAlert: 'Are you sure to clear VRRP statistical information?',
  },
  vrrpStats: {
    title: 'VRRP Stats',
    checksumErrors: 'Router Checksum Errors',
    versionErrors: 'Router Version Errors',
    vridErrors: 'Router VRID Errors',
  },
  ospfV3: {
    title: 'OSPFv3',
    active: 'Active',
    inactive: 'Inactive',
    always: 'Always',
    connected: 'Connected',
    static: 'Static',
    notConfig: 'Not Configured',
    areaId: 'Area ID',
    routerId: 'Router ID',
    spfStartTime: 'SPF Start Time',
    spfMinHoldTime: 'SPF Hold Time',
    spfMaxHoldTime: 'SPF Maximum Hold Time',
    autoCostRefBandwidth: 'AutoCost Ref BW',
    maxPaths: 'Maximum Paths',
    alwaysDefaultRouteAdv: 'Always Default Route Advertise',
    defaultRouteMetric: 'Default Route Metric',
    intraAreaPref: 'Intra Area Distance',
    interAreaPref: 'Inter Area Distance',
    externalPref: 'External Area Distance',
    clearOspfV3Title: 'Clear OSPFv3 Configuration',
    clearOspfV3Alert: 'Are you sure to clear OSPFv3 Configuration?',
    externalType: 'External Type',
    nolimit: 'No Limit',
    lsaCnt: 'LSA Count',
    ospfV3AsbrTitle: 'OSPFv3 AS Boundary Router'
  },
  ospfV3Abr: {
    title: 'OSPFv3 Area Border Router',
    type: 'Type',
    routerId: 'Router ID',
    cost: 'Cost',
    areaId: 'Area ID',
    nextHops: 'Next Hops',
    hopIpAddr: 'Next Hop',
    hopIntf: 'Next Hop Interface'
  },
  ospfV3Policies: {
    title: 'OSPFv3 Policies',
    createPageTitle: 'Create OSPFv3 Policies',
    source: 'Source',
    metric: 'Metric',
    metricType: 'Metric Type',
    tag: 'Tag',
    clearOspfV3Alert: 'Are you sure to clear OSPFv3 policies?',
  },
  ospfV3VirtualLinks: {
    title: 'OSPFv3 Virtual Link',
    neighborId: 'Neighbor Router ID',
    areaPlaceHolder: 'Enter the area ID.',
    neighborPlaceHolder: 'Enter the neighbor router ID.',
  },
  ospfV3Area: {
    title: 'OSPFv3 Area',
    always: 'Always',
    summaryLink: 'Summary Link',
    nssaExternalLink: 'NSSA External Link',
    candidate: 'Candidate',
    spfRuns: 'SPF Runs',
    areaBorderRouterCount: 'Area Border Router Count',
    areaLsaCount: 'Area LSA Count',
    areaLsaChecksum: 'Area LSA Checksum',
    importSummaryLsas: 'Import Summary LSAs',
    stubMetricValue: 'Stub Metric Value',
    translatorState: 'Translator State',
    defaultCost: 'Default Cost',
    neighbor: 'Neighbor',
    nssaDefaultInfoOriginate: 'Default Information Originate',
    metric: 'Default Metric',
    metricType: 'Default Metric Type',
    nssaNoRedistribute: 'Redistribute into NSSA',
    nssaNoSummary: 'No Summary into NSSA',
    translatorRole: 'Translator Role',
    translatorStabInterval: 'Translator Stability Interval',
    rangePrefix: 'Range Prefix',
    rangeCost: 'Range Cost',
    rangeNetmask: 'Range Net Mask',
    linkType: 'Link Type',
    stub: 'Stub Mode',
    nssaMode: 'NSSA Mode',
    stubNoSummary: 'Stub No Summary',
    externalLsa: 'Import External LSAs',
    noLsa: 'Import No LSAs',
    nssa: 'Import NSSAs',
    compare: 'Comparable',
    noncompare: 'Non-Comparable',
    nssaTitle: 'OSPF NSSA Specific Information',
    areaHint: 'Enter area Id to display OSPFv3 area information.'
  },
  ospfV3Interface: {
    title: 'OSPFv3 Interface',
    areaId: 'OSPF Area ID',
    linkLsaSuppressionMode: 'Link LSA Suppression',
    lsaAckInterval: 'LSA Ack Interval',
    deadInterval: 'Dead Interval (secs)',
    helloInterval: 'Hello Interval (secs)',
    retransmitInterval: 'Retransmit Interval (secs)',
    transmitDelay: 'Transmit Delay (secs)',
    intfType: 'OSPF Interface Type',
  },
  ospfV3InterfaceStats: {
    title: 'OSPFv3 Interface Stats',
    areaId: 'OSPFv3 Area ID',
    areaBorderCount: 'Area Border Router Count',
    asBorderCount: 'AS Border Router Count',
    lsaCount: 'Area LSA Count',
    ospfIntfEvents: 'OSPF Interface Events',
    virtualEvents: 'Virtual Events',
    neighborEvents: 'Neighbor Events',
    sentPackets: 'Sent Packets',
    rcvdPackets: 'Received Packets',
    discards: 'Discards',
    badVersion: 'Bad Version',
    virtualLinkNotFound: 'Virtual Link Not Found',
    areaMismatch: 'Area Mismatch',
    invalidDestAddr: 'Invalid Destination Address',
    noNeighborSrcAddr: 'No Neighbor at Source Address',
    invalidOspfPktType: 'Invalid OSPF Packet Type',
    hellosIgnored: 'Hellos Ignored',
    helloPackets: 'Hello Packets',
    dbDescrPackets: 'Database Description Packets',
    lsReqPackets: 'LS Request Packets',
    lsUpdatePackets: 'LS Update Packets',
    lsAckPackets: 'LS Acknowledgement Packets',
    sentReceived: ' (Sent, Received)',
  },
  ospfV3StubRouter: {
    title: 'OSPFv3 Stub Router',
    externalLsaMetric: 'External LSAs Maximum Metric',
    internalLsaMetric: 'Internal LSAs Maximum Metric',
    summaryLsaMetric: 'Summary LSAs Maximum Metric',
    stubStatus: 'Stub Router Status',
    startTime: 'Start Time',
    timeElapsed: 'Time Elapsed',
    clearStubAlert: 'Are you sure to force OSPFv3 to exit stub router mode for the specified router?',
    typeOfService: 'Type of Service',
    metric: 'Metric Val',
    importLsa: 'Import SummaryLSA',
  },
  ospfV3AreaRanges: {
    title: 'OSPFv3 Area Ranges',
    ipv6PfxLen: 'Prefix Length',
    lsdbType: 'LSDB Type',
    externalLink: 'External Link',
    nssaexternallink: 'NSSA External Link',
    summarylink: 'Summary Link',
    advertise: 'Advertisement',
    createTitle: ' Create OSPFv3 Area Ranges',
    ipv6prefix: 'IPv6 Prefix/Prefix Length',
    areaHint: 'Enter area Id to display OSPFv3 area range information.',
    noRange: 'No area range configured.'
  },
  ospfV3Lsdb: {
    title: 'OSPFv3 Link State Database',
    states: 'States',
    linkStates: 'Link States',
    area: 'Area',
    referenced: 'Referenced',
    wildcard: 'Wildcard Multicast Receiver',
    nssaTrans: 'NSSA Translator',
    virtualLink: 'Virtual Link Endpoint',
    routeTag: 'Route Tag',
    lsId: 'LS ID',
    advRouter: 'Adv Router',
    advertisingRouter: 'Advertising Router',
    attachedRtrs: 'Attached Router',
    neighborRtrs: 'Neighbor Router',
    addressPfx: 'IPv6 Address Prefix',
    destRouter: 'Destination Router',
    externalType: 'Ecternal Type',
    metricType: 'Metric Type',
    forwardingAddr: 'Forwarding Address',
    rtrPriority: 'Router Priority',
    refLsType: 'Identifies Type',
    refLsId: 'Identifies LSID',
    prefix: 'Prefix',
    age: 'Age',
    sequence: 'Sequence',
    checksum: 'Checksum',
    lsAge:'LS Age',
    lsType:'LS Type',
    routerType: 'Router Type',
    lsSeqNumber: 'LS Seq Number',
    length: 'Length',
    numberOfLinks: 'Number of Links',
    linkConnected: 'Link connected to',
    linkMetric: 'Link Metric',
    linkInterfaceId: 'Local Interface ID',
    neighborInterfaceId: 'Neighbor Interface ID',
    neighborRouterId: 'Neighbor Router ID',
    asExternal: 'AS External',
    external: 'External',
    interArea: 'Inter-Area Router',
    interAreaPrefix: 'Inter-Area Prefix',
    link: 'Link',
    network: 'Network',
    nssaExternal: 'NSSA External',
    intraAreaPrefix: 'Intra-Area Prefix',
    router: 'Router',
    selfOriginate: 'Self originated',
    unknown: 'Unknown',
    areaUnknown: 'Area Unknown',
    asUnknown: 'AS Unknown',
    abr: 'Area Border Router',
    asbr: 'AS Boundary Router',
    linkLocalAddr: 'Link-Local Address',
    routerLsa: 'Router LSA',
    networkLsa: 'Network LSA',
    interAreaPrefixLsa: 'Inter-Area Prefix LSA',
    interAreaRouterLsa: 'Inter-Area Router LSA',
    asExternalLsa: 'AS-external LSA',
    nssaLsa: 'NSSA LSA',
    linkLsa: 'Link LSA',
    intraAreaPrefixLsa: 'Intra-Area Prefix LSA',
    linkUnknownLsa: 'Unknown LSA in link scope',
    areaUnknownLsa: 'Unknown LSA in area scope',
    asUnknownLsa: 'Unknown LSA in AS scope',
    noFilter: '(Display all information)',
  },
  ospfV3Neighbors: {
    title: 'OSPFv3 Neighbor',
    neighborId: 'Neighbor ID',
    options: 'Options',
    lsOptions: 'LS Options',
    rtrOpt: 'Options Of Router LSA',
    priority: 'Router Priority',
    state: 'State',
    role: 'Role',
    events: 'Events',
    reTxQueueLength: 'Retransmission Queue Length',
    clearTitle: 'Clear OSPFv3 Neighbors',
    allNeighbor: 'All Neighbor Routers',
    specificNeighbor: 'Specific Neighbor Router'
  },
  ospfV3LsaGroup: {
    title: 'OSPFv3 LSA Group',
    total: 'Total self-originated LSAs',
    average: 'Average LSAs per group',
    pacinglimit: 'Pacing group limit',
    subTitle: 'Number of self-originated LSAs within each LSA group'
  },
  ospfV3Stats: {
    title: 'OSPFv3 Statistics',
    spfRuns: 'SPF Runs',
    deltaTime: 'Delta Time',
    summ: 'Summ',
    intra: 'Intra',
    external: 'External',
    spfTotal: 'SPF Total',
    ribUpdate: 'RIB Update',
    reason: 'Reason',
  },
  ospfV3DatabaseSummary: {
    title: 'OSPFv3 Database Summary',
    subTitle: 'Router database summary',
    routerLsaTotal: 'Router',
    networkLsaTotal: 'Network',
    interPrefixTotal: 'Inter-area Prefix',
    interRouterTotal: 'Inter-area Router',
    type7LsaTotal: 'Type-7 Ext',
    linkLsaTotal: 'Link',
    intraPrefixTotal: 'Inter-area Prefix',
    linkUnknownTotal: 'Link Unknown',
    areaUnknownTotal: 'Area Unknown',
    asUnknownTotal: 'AS Unknown',
    Type5LsaTotal: 'Type-5 Ext',
    selfType5LsaTotal: ' Self-Originated Type-5 Ext',
    lsaTotal: 'Total LSAs',
    areaId: 'Area Id',
    routerLsa: 'Router',
    networkLsa: 'Network',
    interPrefix: 'Inter-area Prefix',
    interRouter: 'Inter-area Router',
    type7Lsa:'Type-7 Ext',
    linkLsa: 'Link',
    intraPrefix: 'Intra Prefix',
    linkUnknown: 'Link Unknown',
    areaUnknown: 'Area Unknown',
    selfType7: 'Self Originated Type-7',
    subtotal : 'Total LSAs',
  },
  snooping: {
    igmpSnooping: 'IGMP Snooping',
    mldSnooping: 'MLD Snooping',
    headerValidate: 'IGMP Header Validation',
    controlFrames: 'Multicast Control Frame Count',
    fastLeaveMode: 'Fast Leave Mode',
    groupMemberInterval: 'Group Membership Interval (secs)',
    maxResponseTime: 'Max Response Time (secs)',
    mrouteExpiryTime: 'Multicast Router Expiry Time (secs)',
    reportSuppMode: 'Report Suppression Mode',
    querier: 'Querier',
    igsquerier: 'IGMP Snooping Querier',
    mldsquerier: 'MLD Snooping Querier',
    querierAddress: 'Querier Address',
    igsquerierMode: 'IGMP Snooping Querier Mode',
    mldsquerierMode: 'MLD Snooping Querier Mode',
    igmpVersion: 'IGMP Version',
    mldVersion: 'MLD Version',
    querierQueryInterval: 'Querier Query Interval',
    querierExpiryInterval: 'Querier Expiry Interval',
    lastQuerierAddr: 'Last Querier Address',
    lastQuerierVer: 'Last Querier Version',
    igsqVlanMode: 'Querier VLAN Mode',
    igsqVlanElectionMode: 'Querier Election Participate Mode',
    igsqVlanAddress: 'Querier VLAN Address',
    querierVersion: 'Querier Version',
    querierInterval: 'Querier Interval',
    operVersion: 'Operational Version',
    operState: 'Operational State',
    operMaxRespTime: 'Operational Max Response Time',
    totalEntries: 'Total Entries',
    mostSSMEntries: 'Most SSM FDB Entries Ever Used',
    currentEntries: 'Current Entries',
    entries: 'Entries',
    groups: 'Groups',
    srcIP: 'Source IP',
    srcFilterMode: 'Source Filter Mode',
    srcAddressList: 'Source Address List',
    reporter: 'Reporter',
    interfaces: 'Interfaces',
    igsssms: 'IGMP Source Specify Multicasting',
    mldsssms: 'MLD Source Specify Multicasting',
    igmpmrouter : 'IGMP Snooping Multicast Router',
    mRouterAttach: 'Multicast Router Attached',
    mldmrouter : 'MLD Snooping Multicast Router',
    globalConfig: 'Global Configuration'
  },
  dvmrp: {
    title: 'DVMRP',
    configTitle: 'DVMRP Configuration',
    globalAdmin: 'Global Admin Mode',
    trapFlags: 'Trap Flags',
    interfaceMode: 'Interface Mode',
    metric: 'Metric',
    localAddress: 'Local Address',
    generationlId: 'Generation ID',
    badPacket: 'Received Bad Packets',
    badRoute: 'Received Bad Routes',
    sendRoute: 'Sent Routes',
    version: 'Version',
    numRoutes: 'Total Number of Routes',
    reachableRoutes: 'Reachable Routes'
  },
  dvmrpPrune: {
    title: 'DVMRP Prunes',
    groupIp: 'Group IP',
    sourceIP: 'Source IP',
    sourceMask: 'Source Mask',
    expiryTime: 'Expiry Time (secs)',
    noPrunes: 'No prunes available.'
  },
  dvmrpRoute: {
    title: 'DVMRP Routes',
    sourceAddress: 'Source Address',
    upstream: 'Upstream Neighbor',
    upTime: 'Up Time (secs)',
    noRoutes: 'No routes available.'
  },
  dvmrpNeighbor: {
    title: 'DVMRP Neighbors',
    nbrIpAddr: 'Neighbor IP Address',
    generationId: 'Generation ID',
    majorVer: 'Major Version',
    minorVer: 'Minor Version',
    capabilities: 'Capabilities',
    recvRoutes: 'Received Routes',
    recvBadPackets: 'Received Bad Packets',
    recvBadRoutes: 'Received Bad Routes',
    upTime: 'Up Time (hh:mm:ss)',
    expiryTime: 'Expiry Time (hh:mm:ss)',
    noNeighbors: 'No neighbors available.'
  },
  dvmrpNexthop: {
    title: 'DVMRP Nexthop',
    nextHopIntf: 'Next Hop Interface',
    noNexthop: 'No Nexthop available.'
  },
  mgmdConfig:{
    igmp: 'IGMP',
    mld: 'MLD',
    igmpConfig: 'IGMP Configuration',
    mldConfig: 'MLD Configuration',
    globalAdmin: 'Global Admin Mode',
    headerValidation: 'IGMP Header Validation'
  },
  mgmdInterfaces:{
    igmpInterfaces: 'IGMP Interfaces',
    igmpAdminMode: 'IGMP Admin Mode',
    mldAdminMode: 'MLD Global Admin Mode',
    mldInterfaces: 'MLD Interfaces',
    interfaceMode: 'Interface Mode',
    mldInterfaceMode: 'MLD Interface Admin Mode',
    operation: 'Operational Status',
    mldOperation: 'MLD Operational Mode',
    queryInterval: 'Query Interval',
    queryMaxResponse: 'Query Max Response Time(1/10 th of a sec)',
    mldQueryMaxResponse: 'Query Max Response Time (milli-secs)',
    queryCount: 'Robustness',
    startupQueryInterval: 'Startup Query Interval',
    startupQueryCount: 'Startup Query Count',
    lastMemberQueryInterval: 'Last Member Query Interval',
    lastMemberQueryCount: 'Last Member Query Count',
    querierStatus: 'Querier Status',
    querier: 'Querier',
    nonQuerier: 'Non-Querier',
    querierIpAddress: 'Querier IP Address',
    querierUpTime: 'Querier Up Time (hh:mm:ss)',
    querierExpiryTime: 'Querier Expiry Time (hh:mm:ss)',
    operational: 'Operational',
    nonOperational: 'Non-Operational',
  },
  mgmdGroups:{
    igmpGroups: 'IGMP Groups',
    mldGroups: 'MLD Groups',
    igmpGroupAddress: 'Multicast IP Address',
    mldGroupAddress: 'Group Address',
    lastReporter: 'Last Reporter',
    upTime: 'Up Time',
    expiryTime: 'Expiry Time',
    upTimeWithInfo: 'Up Time (hh:mm:ss)',
    expiryTimeWithInfo: 'Expiry Time (hh:mm:ss)',
    mldFilterMode: 'Filter Mode',
    ver1HostTimer: 'Version1 Host Timer',
    igmpVer2HostTimer: 'Version2 Host Timer',
    compatMode: 'Group Compat Mode',
    srcFilterMode: 'Source Filter Mode',
    source: 'Source Hosts',
    srcExpiryTime: 'Expiry Time',
    noGroups: 'No Groups available.',
    noHosts: 'No Hosts available.',
  },
  mgmdStats:{
    igmpStats: 'IGMP Stats',
    mldStats: 'MLD Stats',
    joins: 'Number of Joins Received',
    wrongVersionQueries: 'Wrong Version Queries Received',
    groups: 'Number of Groups',
    mldTraffic: 'MLD Traffic',
    clearMgmd: 'Clear IPv6 MLD Stats',
    counter: 'counters',
    interface: 'interface',
    traffic: 'traffic',
    validPacketReceive: 'Valid MLD Packets Received',
    validPacketSent: 'Valid MLD Packets Sent',
    queriesReceive: 'Queries Received',
    queriesSent: 'Queries Sent',
    reportsReceive: 'Reports Received',
    reportsSent: 'Reports Sent',
    leaveReceive: 'Leaves Received',
    leaveSent: 'Leaves Sent',
    badChecksumPacket: 'Bad Checksum MLD Packets',
    malformedPacket: 'Malformed MLD Packets',
    counterType: 'Counters Type',
  },
  sfptransceiver:{
    title: 'SFP Transceiver',
    temperature: 'Temperature [C]',
    voltage: 'Voltage [Volt]',
    txBias: 'Current [mA]',
    outputPower: 'Outout Power [dBm]',
    inputPower: 'Input Power [dBm]',
    txFault: 'Tx Fault',
    lossSignal:  'Loss Signal',
    diag: 'Diag',
    vendor: 'Vendor',
    vendorName: 'Vendor',
    om2Length: 'Link Length 50um [m]',
    om1Length: 'Link Length 62.5um [m]',
    serialNumber: 'Serial Number',
    partNumber: 'Part Number',
    bitRate: 'Nominal Bit Rate [Mbps]',
    revisionNumber: 'Rev',
    compliance: 'Compliance',
  },
  flowctrl: {
    title: 'Flow Control',
    rxPause: 'Rx Pause',
    txPause: 'Tx Pause',
    operation: 'Operation',
    symmetric: 'Symmetric',
    asymmetric: 'Asymmetric',
  },
  stp: {
    stpTitle: 'Spanning Tree Protocol',
    stpConfig: 'STP Configuration',
    stpInterface: 'STP Interface',
    CistBdgRootInfo: 'CIST Bridge Information',
    CistTCInfo: 'CIST Topology Change Information',
    generalInfo: 'General Information',
    modeInfo: 'Mode Information',
    stpBdgeInfo: 'Bridge Information',
    stpBdgeId: 'Bridge ID',
    rootInfo: 'Root Information',
    rootId: 'Root ID',
    designateRoot: 'Designated Root',
    cfgInfo: 'Configuration Information',
    stpAdminMode: 'Spanning Tree Admin Mode',
    stpVersion: 'Spanning Tree Protocol Version',
    bpduFilterMode: 'BPDU Filter Mode',
    bpduGuardMode: 'BPDU Guard Mode',
    uplinkFastMode: 'UplinkFast Mode',
    updateRate: 'Max Update Rate',
    mstInstances: 'MST Instances',
    holdTime: 'Bridge Hold Time',
    holdCount: 'Bridge Tx Hold Count',
    maxHops: 'Bridge Max Hops',
    bridgeMaxAge: 'Bridge Max Age',
    bridgeForwardDelay: 'Bridge Forward Delay',
    bridgeID: 'Bridge Identifier',
    mstBridgeID: 'MST Bridge Identifier',
    rootPriority: 'Root Priority',
    rootPathCost: 'Root Path Cost',
    address: 'Address',
    rootCost: 'Cost',
    maxAge: 'Max Age',
    helloTime: 'Hello Time',
    bridgeHelloTime: 'Bridge Hello Time',
    forwardDelay: 'Forward Delay',
    configName: 'Configuration Name',
    configRevision: 'Configuration Revision Level',
    configDigestKey: 'Configuration Digest Key',
    configFormatSelector: 'Configuration Format Selector',
    rootDisplay: 'This bridge is the root.',
    pvst: 'PVST',
    pvrst: 'Rapid-PVST',
    stp: 'STP (IEEE 802.1d)',
    rstp: 'RSTP (IEEE 802.1w)',
    mst: 'MSTP (IEEE 802.1s)',
    rootPortId: 'Root Port Identifier',
    bridgePriority: 'Bridge Priority',
    mstBridgePriority: 'MST Bridge Priority',
    priority: 'priority',
    sysIdExt : 'sys-id-ext',
    timeSinceTC: 'Time Since Topology Change',
    tcCount: 'Topology Change Count',
    tcStatus: 'Topology Change in Progress',
    mstInstancesCfg: 'MST Instances Configuration',
    instDetail: 'MST Instances Detail',
    instIntfDetail: 'MST Instances Interfaces Detail',
    noInstExist: 'No MST instances to display.',
    associations: 'Assocications',
    noAssociation: 'No FIDs or VLANs associated with this instance.',
    fid: 'FID',
    vid: 'VID',
    instance: 'Instance ID',
    stpState: 'STP State',
    portRole: 'Port Role',
    mstPortDetailed: 'MST Port Detailed',
    portFwdState: 'Port Forwarding State',
    portId: 'Port Identifier',
    portPriority: 'Port Priority',
    portPathCost: 'Port Path Cost',
    autoCalculateCost: 'Auto-calculate Port Path Cost',
    designatedBridgeID: 'Designated Bridge ID',
    designatePortID: 'Designated Port ID',
    operatePathCost: 'Operate Port Path Cost',
    loopState: 'Loop Inconsistent State',
    inLoopCount: 'Transitions Into Loop Inconsistent State',
    outLoopCount: 'Transitions Out Of Loop Inconsistent State',
    rootPort: 'Root',
    designatedPort: 'Designated',
    alternatePort: 'Alternate',
    backupPort: 'Backup',
    masterPort: 'Master',
    disabledPort: 'Disabled',
    loopInfo: 'Loop Information',
    portInfo: 'Port Information',
    pathInfo: '(Configure this field to zero will enable the auto-calculate port path cost.)',
    discarding: 'Discarding',
    learning: 'Learning',
    forwarding: 'Forwarding',
    manualFwd: 'Manual Forwarding',
    notParticipate: 'Not Participating',
    interfaceDetail: 'Interface Detail',
    interfaceStatistics: 'Interface Statistics',
    portMode: 'Port Mode',
    helloTime: 'Hello Time',
    edgeInfo: 'Edge Information',
    edgePort: 'Edge Port',
    edgePortStatus: 'Edge Port Status',
    autoEdge: 'Auto Edge',
    pathCost: 'Path Cost',
    autoCalculateExCost: 'Auto-Calculate External Port Path Cost',
    exPortPathCost: 'External Port Path Cost',
    tca: 'Topology Change Acknowledge',
    p2pMacStatus: 'Point to Point MAC Status',
    portUpTime: 'Port Up Time Since Counters Last Cleared',
    designatedRoot: 'Designated Root',
    designatedPortCost: 'Designated Port Cost',
    designatedPortID: 'Designated Port Identifier',
    cstRegionalRoot: 'CST Regional Root',
    cstInternRootPathCost: 'CST Internal Root Path Cost',
    pathCostInfo: 'Path Cost Information',
    statusInfo: 'Status Information',
    bpduGuardEffect: 'BPDU Guard Effect',
    rootGuard: 'Root Guard',
    loopGuard: 'Loop Guard',
    bpduFloodMode: 'BPDU Flood Mode',
    tcnGuard: 'TCN Guard',
    loopInfo: 'Loop Information',
    stpBPDU: 'STP BPDUs',
    rstpBPDU: 'RSTP BPDUs',
    mstpBPDU: 'MSTP BPDUs',
    stpBPDUTx: 'STP BPDUs Transmitted',
    stpBPDURx: 'STP BPDUs Received',
    rstpBPDUTx: 'RSTP BPDUs Transmitted',
    rstpBPDURx: 'RSTP BPDUs Received',
    mstpBPDUTx: 'MSTP BPDUs Transmitted',
    mstpBPDURx: 'MSTP BPDUs Received',
    clearConfirm: 'Are you sure to clear the statistics?',
    migrationConfirm: 'Migration Confirm',
    migrationConfirmContent: 'Are you sure to do migration check?',
    pvstPvrstConfigTitle: 'PVSTP and PVRSTP Configuration',
    vlanDetail: 'VLAN Detail',
    vlanIntfDetail: 'VLAN Interfaces Detail',
    rootStatus: 'Is this Switch Root Bridge',
    decimal: 'Decimal',
    pvstUplinkFastTitle: 'PVST UplinkFast Configuration',
    uplinkFastStatus: 'Directlink rapid convergence status',
    maxUpdateRate: 'BPDU update rate (packets/sec)',
    upinkfastStatsTitle: 'Directlink rapid convergence Statistics (all VLANs)',
    uplinkTx: 'Directlink rapid convergence transitions',
    proxyUplinkTx: 'Proxy multicast addresses transmitted',
    migration: 'Migration',
    createInstTitle: 'Create MST Instance',
    instPlaceholder: 'Enter the instance ID',
    deleteInstTitle: 'Delete MST Instance',
    pvstPvrstConfigTitle: 'PVSTP and PVRSTP Configuration',
    vlanDetail: 'VLAN Detail',
    vlanIntfDetail: 'VLAN Interfaces Detail',
    rootStatus: 'Is this Switch Root Bridge',
    decimal: 'Decimal',
    pvstUplinkFastTitle: 'PVST UplinkFast Configuration',
    uplinkFastStatus: 'Directlink rapid convergence status',
    maxUpdateRate: 'BPDU update rate (packets/sec)',
    upinkfastStatsTitle: 'Directlink rapid convergence Statistics (all VLANs)',
    uplinkTx: 'Directlink rapid convergence transitions',
    proxyUplinkTx: 'Proxy multicast addresses transmitted',
    migration: 'Migration',
    createInstTitle: 'Create MST Instance',
    instPlaceholder: 'Enter the instance ID',
    deleteInstTitle: 'Delete MST Instance',
    notCorrespondMsg: 'Error! The MST ID does not correspond to a known MST instance.',
    configToBeARoot:'Configure to be a Root'
  },
  pfc: {
    title: 'Priority-based Flow Control',
    dropPriorities: 'Drop Priorities',
    noDropPriorities: 'No-Drop Priorities',
    opStatus: 'Operational Status',
    pfcConfigState: 'Configured State',
    pfcOperState: 'Operational State',
    configDropPriorities: 'Configured Drop Priorities',
    configNoDropPriorities: 'Configured No-Drop Priorities',
    operDropPriorities: 'Operational Drop Priorities',
    operNoDropPriorities: 'Operational No-Drop Priorities',
    delayAllowance: 'Delay Allowance',
    peerConfigCompatible: 'Peer Configuration Compatible',
    compatibleConfigCount: 'Compatible Configuration Count',
    incompatibleConfigCount: 'Incompatible Configuration Count',
    rxPFCFrames: 'Received PFC Frames',
    txPFCFrames: 'Transmitted PFC Frames',
    active: 'Active',
    inactive: 'Inactive',
    clearPfcStatistics: 'Are you sure to clear statistics ?',
  },
  ipsubnetvlans: {
    title: 'IP Subnet Based VLAN',
    createEntry: 'Create IP Subnet Based VLAN',

  },
  protovlans:{
    title: 'Protocol Based VLAN',
    groupName: 'VLAN Group Name',
    groupId: 'Group ID',
    ethertype: 'Protocol',
    protocolPlaceHolder: 'arp,ipv4,ipv6,ipx,1536 ~ 65535',
  },
  protovlaninterfaces:{
    title: 'Protocol Based VLAN Interfaces',
    associate: 'Associate',
    groupIdErr: 'Incorrect input!',
  },
  mgmtVlan:{
    title: 'Management VLAN',
  },
  dvlan:{
    title: 'Double VLAN',
    primaryId: 'Primary TPID',
    secondaryId: 'Secondary TPIDs Configured',
    primary: 'Primary',
    secondary: 'Secondary',
    secondaryCnt: 'Secondary Count  (Max:3)',
    opmode: 'Add/Delete',
    add: 'Add',
    delete: 'Delete',
    tpid: 'TPID',
    entertpid: 'Enter TPID',
    tpidRangeErr: 'Input range between 1 ~ 65535',
    ethertypes: 'Ethertypes'
  },
  MACBasedVlan: {
    title: 'MAC Based VLAN',
    deleteEntry: 'Delete Mac Based VLAN',
    createEntry: 'Create Mac Based VLAN',
  },
  privateVlan: {
    title: 'Private VLAN',
    privateVlanType: 'Private VLAN Type',
    associate: 'Associate',
    deAssociate: 'De-Associate',
    deleteEntry: 'Delete Private VLAN',
    createEntry: 'Create Private VLAN',
    vlanIDPlaceholder: 'Enter the Private VLAN ID',
    community: 'Community',
    isolated: 'Isolated',
    primary: 'Primary',
    host: 'Host Ports',
    promiscuous: 'Promiscuous Ports',
    invalidPorts: 'Invalid Ports.',
  },
  privateVlanInterface: {
    title: 'Private VLAN Interfaces',
    host: 'Private VLAN Host',
    promiscuous: 'Private VLAN Promiscuous',
  },
  lldp: {
    title: 'LLDP',
    txInterval: 'Transmit Interval (seconds)',
    txHoldMultipier: 'Transmit Hold Multiplier',
    reinitDelay: 'Reinit Delay (seconds)',
    notifyInterval: 'Notification Interval (seconds)',
    agentDefault: 'Default',
    ncb: 'Nearest Customer Bridge',
    nntpb: 'Nearest Non-TPBR Bridge',
    tlvs: 'TLVs',
    portDescription: 'Port Description',
    systemName: 'System Name',
    systemDescription: 'System Description',
    systemCapability: 'System Capability',
    localDevice: 'Local Device',
    chassisIdSubtype: 'Chassis ID Subtype',
    chassisId: 'Chassis ID',
    portIdSubtype: 'Port ID Subtype',
    portId: 'Port ID',
    systemCapabilitySupport: 'System Capability Supported',
    systemCapabilityEnabled: 'System Capability Enabled',
    mgmtAddrType: 'Management Address Type',
    mgmtAddr: 'Management Address',
    deviceStats: 'Device Statistic',
    intfStats: 'Interface Statistic',
    lastUpdate: 'Last Update',
    totalInserts: 'Total Inserts',
    totalDels: 'Total Deletes',
    totalDrops: 'Total Drops',
    totalAgeouts: 'Total Ageouts',
    txTotal: 'Tx Total',
    rxTotal: 'Rx Total',
    discards: 'Discards',
    errors: 'Errors',
    ageout: 'Ageout',
    tlvDiscards: 'TLV Discards',
    tlvUnknowns: 'TLV Unknowns',
    tlvMed: 'TLV MED',
    tlv802dot1: 'TLV 802.1',
    tlv802dot3: 'TLV 802.3',
    remoteDevice: 'Remote Device',
    remId: 'RemID',
    remoteIdentifier: 'Remote Identifier',
    ttl: 'Time to Live',
    lldpConfig: 'LLDP Configuration',
    localDevSummary: 'Local Device Summary',
    remoteDevSummary: 'Remote Device Summary',
    clearStats: 'Clear LLDP Remote Data',
    clearStatsTips: 'Are you sure to reset all LLDP statistics?',
    clearRemoteDev: 'Clear LLDP Remote Data Table',
    clearRemoteDevTips: 'Are you sure to delete all information from the LLDP remote data table?',
    intfEmptyHint: 'No LLDP data has been received on this interface.'
  },
  logging:{
    title: 'Logging',
    copyTitle: 'Copy Log',
    logFile: 'Log File Name',
    globalConfig: 'Logging Configuration',
    clientLocalPort: 'Client Local Port',
    clientSourceInterface: "Client Source Interface",
    srcV4Addr: 'Source IPv4',
    srcV6Addr: 'Source IPv6',
    cliLogging: 'CLI Command Logging',
    protocol: 'Logging Protocol',
    consoleLogging: 'Console Logging',
    consoleLoggingSeverity: 'Console Logging Severity Filter',
    bufferedLogging: 'Buffered Logging',
    bufferedInMemoryLogging: 'Buffered (In-Memory) Logging',
    bufferedLoggingWrapBehavior: 'Buffered Logging Wrapping Behavior',
    bufferedLogCount: 'Buffered Log Count',
    bufferedLoggingSeverity: 'Buffered Logging Severity Filter',
    bufferedWrapping: 'Buffered Wrapping',
    persistentLogging: 'Persistent Logging',
    persistentLogCount: 'Persistent Log Count',
    persistentLoggingSeverity: 'Persistent Logging Severity Filter',
    syslogLogging: 'Syslog Logging',
    linkLimit: 'Limit Link logs',
    messagesReceived: 'Log Messages Received',
    messagesDropped: 'Log Messages Dropped',
    messagesRelayed: 'Log Messages Relayed',
    config: 'Config',
    buffType: 'Buffered',
    perType: 'Persistent',
    expand: 'Expand',
    logs: 'Logs',
    clearLogs: 'Clear Logs',
    createPageTitle: 'Create Logging Host',
    deletePageTitle: 'Delete Host',
    hosts: 'Logging Hosts',
    hostndx: 'Index',
    host: 'Host',
    hostType: 'Host Type',
    hostNameIp: 'IP Address/Hostname',
    auth: 'Auth Mode',
    tls: 'tls',
    anon: 'anon',
    udp: 'udp',
    trapLogs: 'Trap Logs',
    tlogs: 'Trap Logs',
    trapsSinceReset: 'Traps Since Last Reset',
    trapCapacity: 'Trap Log Capacity',
    trapsLastViewed: 'Traps Since Log Last Viewed',
    upperLimit: 'Upper Limit',
    trapSeverity: 'Severity',
    emergency: '0. Emergency',
    alert: '1. Alert',
    critical: '2. Critical',
    error: '3. Error',
    warning: '4. Warning',
    notice: '5. Notice',
    info: '6. Info',
    debug: '7. Debug',
    upperLimitErr: 'Invalid Range. 0 ~ 1000',
    portErr: 'Invalid Range. 1 ~ 65535',
    severityErr: 'Invalid Range. 1 ~ 7',
    empty: 'Log Empty',
    clearAlert: 'Are you sure to clear Logging In-memory?',
    clearLog: 'Are you sure to clear the Trap Log?',
    buffered: 'Buffered Log',
    crash: 'Crash Log',
    linux: 'Linux Log',
    persistent: 'Persistent Log',
    trapLog: 'Trap log',
    certNum: 'Cert#',
    log: 'Log',
    systemUpTime: 'System Up Time',
    trap: 'Trap',
  },
  usb: {
    title: 'USB',
    deviceTitle: 'USB Device',
    dirTitle: 'USB Memory Stats',
    deviceStatus: 'Device Status',
    manufacturer: 'Manufacturer',
    productName: 'Product Name',
    devSn: 'Device Serial Number',
    classCode: 'Class Code',
    subClassCode: 'Subclass Code',
    protocol: 'Protocol',
    vendorId: 'Vendor ID',
    productId: 'Product ID',
    versionCompliance: 'USB Version Compliance',
    eject: 'Eject',
    ejectMessage: 'You can now unplug USB flash device.',
    ejectAlert: 'Are you sure to eject current device?',
    totalSize: 'Total Size',
    bytesUsed: 'Bytes Used',
    bytesFree: 'Bytes Free',
    fileName: 'File Name',
    fileSize: 'File Size',
    ModificationTime: 'Modification Time'
  },
  sntp: {
    title: 'SNTP',
    fullTitle: 'Simple Network Time Protocol',
    sntpTab: 'SNTP Info',
    clientTab: 'SNTP Client Info',
    serverTab: 'SNTP Server Info',
    sourceInterfaceTab: 'SNTP Source Interface Info',
    updateTime: 'Last Update Time',
    attemptTime: 'Last Unicast Attempt Time',
    attemptStatus: 'Last Attempt Status',
    broadcastCount: 'Broadcast Count',
    clientSupportMode: 'Client Supported Modes',
    serverVersion: 'SNTP Version',
    clientPort: 'Port',
    clientMode: 'Client Mode',
    broadcastClientPollInterval: 'Broadcast Poll Interval (seconds)',
    unicastClientPollInterval: 'Unicast Poll Interval (seconds)',
    unicastClientPollTimeout: 'Unicast Poll Timeout (seconds)',
    unicastClientPollRetry: 'Unicast Poll Retry',
    unicastBroadcast: 'Unicast / Broadcast',
    clientSourceInterface: 'SNTP Client Source Interface',
    clientIPv4: 'SNTP Client Source IPv4 Address',
    clientIPv6: 'SNTP Client Source IPv6 Address',
    serverHost: 'Server Host Address',
    serverType: 'Server Type',
    serverStratum: 'Server Stratum',
    referenceID: 'Server Reference Id',
    serverMode: 'Server Mode',
    maxiEntries: 'Server Maximun Entries',
    currentEntries: 'Server Current Entries',
    sntpServers: 'SNT Servers Info',
    serverAddr: 'Host Address',
    addressType: 'Address Type',
    priority: 'Priority',
    serverVersion: 'Version',
    port: 'Port',
    serverAttemptTime: 'Last Attempt Time',
    updateStatus: 'Last Update Status',
    totalUnicastReq: 'Total Unicast Requests',
    failedUnicastReq: 'Failed Unicast Requests',
    globalInfo: 'Global Info',
    create: 'Configure SNTP Server Parameters',
    delete: 'Delete SNTP Server',
    serverAddrSetPlaceholder: "<ipaddress | ipv6address | host-name>",
    notConfig: '0 (Not Configured)',
    slotportHelpVlan: '(Please enter VLAN format as 4/x.)',
    slotportHelpLoopback: '(Please enter Loopback format as 6/x.)',
  },
  sflow: {
    title: 'sFlow',
    receiversTitle: 'sFlow Receivers',
    sflowAgent: 'sFlow Agent',
    sflowSource: 'sFlow Source',
    srcPlaceholder: 'Enter the slot/port, loopback, serviceport, network, vlan or empty',
    sourceType: 'sFlow Client Source Type',
    sourceIntf: 'sFlow Client Source Interface',
    sourceIpv4: 'sFlow Client Source IPv4 Address',
    sourceIpv6: 'sFlow Client Source IPv6 Address',
    statusIpv4: 'sFlow Client Source IPv4 Status',
    statusIpv6: 'sFlow Client Source IPv6 Status',
    rcvrIndex: 'Rcvr Index',
    owner: 'Owner String',
    noTimeout: 'No Timeout',
    timeout: 'Timeout',
    maxSize: 'Max Datagram Size',
    port: 'Port',
    datagramVersion: 'Datagram Version',
    sflowVersion: 'sFlow Version',
    addressType: 'Address Type',
    receiversEdit: 'sFlow Receiver Index',
    interfacePlaceholder: 'Enter Interface'
  },
  sflowSamplers: {
    title: 'sFlow Samplers',
    samplerSource: 'Sampler Data Source',
    receiverIndex: 'Receiver Index',
    rate: 'Packet Sampling Rate',
    maxSize: 'Max Header Size',
    create: 'Create sFlow Samplers',
    receiverIndexPlaceholder: 'Enter Receiver Index'
  },
  sflowPollers: {
    title: 'sFlow Pollers',
    pollerSource: 'Poller Data Source',
    pollerInterval: 'Poller Interval',
    create: 'Create sFlow Pollers',
  },
  garp: {
    title: 'Registration Protocol',
    garp: 'GARP',
    gvrp: 'GVRP',
    gmrp: 'GMRP',
    mrp: 'MRP',
    mvrp: 'MVRP',
    mmrp: 'MMRP',
    joinTimer: 'Join Timer',
    leaveTimer: 'Leave Timer',
    leaveAllTimer: 'Leave All Timer',
    garpConfig: 'GARP Configuration',
    garpStatistic: 'GARP Statistic',
    mrpConfig: 'MRP Configuration',
    mrpStatistic: 'MRP Statistic',
    messageRx: 'Messages Received',
    messageTx: 'Messages Transmitted',
    failReg: 'Failed Registrations',
    periodSMState: 'Period State Machine State',
    clearTips: 'Are you sure to clear statistic of specified interfaces?',
    clearAllTips: 'Are you sure to clear statistic of all interfaces?',
  },
  config:{
    title: 'Config',
    clearTitle: 'Clear Configuration',
    reloadTitle: 'Reload Configuration',
    name: 'Script Name',
    configName: 'Config Name',
    placeholder: 'File name of configuration script with extension.',
    message: 'Are you sure to reload config ?',
    clearmsg: 'Are you sure to clear config?',
  },
  locatorLed:{
    title:'Locator LED',
    adminMode: 'Locator Admin Mode',
    portLocator:'Port Locator LED',
    portMode: 'Port Locator Mode',
    blinkHint: '(Blink State / Port)',
    disabledConfirm: 'Confirm to Disable Port Locator',
    disabledAlert: 'Are you sure to disable Port Locator?',
  },
  clock:{
    title:'Time',
    utc: 'UTC',
    dateTime: 'Date',
    acronym: 'Acronym',
    timeZone: 'Time Zone',
    offset: 'Offset',
    timeSource: 'Time Source',
    dateTimeSupport: 'IPv4/IPv6/DNS',
    dateTimeEx: '<hh:mm:ss> EX:01:01:01',
    dateTimeEx1: '<hh:mm> EX:01:59',
    timeZoneEx: '<hh:mm> EX: -10:00',
    acronymEx: 'EX: JP',
    clock: 'Clock',
    summerTime: 'Summer Time',
    dstMode: 'DST Mode',
    nrecurr: 'non-Recurr',
    recurr: 'Recurr',
    summerBeg: 'Time Begin',
    summerEnd: 'Time End',
    nrecurrMode: 'Non Recurring Summer-time',
    recurrMode: 'Recurring',
    recurrModeString: 'Recurring every year',
    nrecurrDstMode: 'Non-Recurring DST',
    recurrDstMode: 'Recurring DST',
    euMode: 'EU',
    usaMode: 'USA',
    minute: '(minutes)'
  },
  sysRuntime:{
    title:'Upgrade System Runtime',
    downloadSrc: 'Download File Source Path',
    downloadDst: 'Download File Destination Path',
    uploadDst: 'Upload File Destination Path',
    copyTrans: 'File transfer in progress. Management access will be blocked for the duration of the transfer. please wait...',
    pageUnauthorized: 'Unauthorized! The web will go to the login page.',
  },
  bootSelect:{
    title:'Boot Runtime Image Select',
    nextSystemBoot: 'Runtime Image',
    firstBoot: 'First',
    secondBoot: 'Second',
  },
  runTime:{
    title:'Runtime'
  },
  statistics:{
    title: 'Statistics',
    RxTitle: 'Packets Received',
    TxTitle: 'Packets Transmitted',
    RxOctetsTitle: 'Packets Received (Octets)',
    TxOctetsTitle: 'Packets Transmitted (Octets)',
    RxTxOctetsTitle: 'Packets Received and Transmitted (Octets)',
    RxSuccessTitle: 'Packets Received Successfully',
    TxSuccessTitle: 'Packets Transmitted Successfully',
    RxMacErrTitle: 'Packets Received with MAC Errors',
  },
  interfaceStats:{
    title: 'Interface Stats',
    rxNoErr: 'Packets Received Without Errors',
    rxErr: 'Packets Received With Errors',
    rxBroadcast: 'Broadcast Packets Received',
    rxDiscarded: 'Receive Packets Discarded',
    txNoErr: 'Packets Transmitted Without Errors',
    txBroadcast: 'Broadcast Packets Transmitted',
    txDiscarded: 'Transmit Packets Discarded',
    txErr: 'Transmit Packet Errors',
    collisionFrames: 'Collision Frames',
    loadInterval: 'The internal time of the load traffic',
    bpsRx: 'Receive total bits per second',
    bpsTx: 'Transmitted total bits per second',
    ppsRx: 'Received total packets per second',
    ppsTx: 'Transmitted total packets per second',
    clearTime: 'Time since counters last cleared',
    collisionFrames: 'Collision Frames',
    loadInterval: 'Load Interval',
    bpsRx: 'Bits Per Second Received',
    bpsTx: 'Bits Per Second Transmitted',
    ppsRx: 'Packets Per Second Received',
    ppsTx: 'Packets Per Second Transmitted',
    clearTime: 'Time Since Counters Last Cleared',
  },
  interfaceEthernet:{
    title: 'Interface Ethernet Stats',
    rxTotalOctets: 'Total Packets Received (Octets)',
    rx64Octets: 'Packets Received 64 Octets',
    rx65to127Octets: 'Packets Received 65-127 Octets',
    rx128to255Octets: 'Packets Received 128-255 Octets',
    rx256to511Octets: 'Packets Received 256-511 Octets',
    rx512to1023Octets: 'Packets Received 512-1023 Octets',
    rx1024to1518Octets: 'Packets Received 1024-1518 Octets',
    rxOver1518Octets: 'Packets Received > 1518 Octets',
    rxtx64Octets: 'Packets RX and TX 64 Octets',
    rxtx65to127Octets: 'Packets RX and TX 65-127 Octets',
    rxtx128to255Octets: 'Packets RX and TX 128-255 Octets',
    rxtx256to511Octets: 'Packets RX and TX 256-511 Octets',
    rxtx512to1023Octets: 'Packets RX and TX 512-1023 Octets',
    rxtx1024to1518Octets: 'Packets RX and TX 1024-1518 Octets',
    rxtx1519to2047Octets: 'Packets RX and TX 1519-2047 Octets',
    rxtx2048to4095Octets: 'Packets RX and TX 2048-4095 Octets',
    rxtx4096to9216Octets: 'Packets RX and TX 4096-9216 Octets',
    rxNoErr: 'Total Packets Received Without Errors',
    rxUnicast: 'Unicast Packets Received',
    rxMulticast: 'Multicast Packets Received',
    rxMACErr: 'Total Packets Received with MAC Errors',
    rxJabber: 'Jabbers Received',
    rxFragment: 'Fragments Received',
    rxUndersize: 'Undersize Received',
    rxFCSErr: 'Rx FCS Errors',
    rxNotForward: 'Total Received Packets Not Forwarded',
    txTotalOctets: 'Total Packets Transmitted (Octets)',
    tx64Octets: 'Packets Transmitted 64 Octets',
    tx65to127Octets: 'Packets Transmitted 65-127 Octets',
    tx128to255Octets: 'Packets Transmitted 128-255 Octets',
    tx256to511Octets: 'Packets Transmitted 256-511 Octets',
    tx512to1023Octets: 'Packets Transmitted 512-1023 Octets',
    tx1024to1518Octets: 'Packets Transmitted 1024-1518 Octets',
    txOver1518Octets: 'Packets Transmitted > 1518 Octets',
    maxFrameSize: 'Max Frame Size',
    maxTransmitUnit: 'Maximum Transmit Unit',
    txSuccessfully: 'Total Packets Transmitted Successfully',
    txUnicast: 'Unicast Packets Transmitted',
    txMulticast: 'Multicast Packets Transmitted',
    txErr: 'Total Transmit Errors',
    txCollisionDiscarded: 'Total Transmit Packets Discard',
    rxGVRPPDU: 'GVRP PDUs Received',
    txGVRPPDU: 'GVRP PDUs Transmitted',
    gvrpFailedRegister: 'GVRP Failed Registrations',
  },
  hardware:{
    treeTitle: 'Hardware Info',
    title: 'Hardware',
    machineType: 'Machine Type',
    machineModel: 'Machine Model',
    serialNum: 'Serial Number',
    burnedMACaddr: 'Burned In MAC Address',
  },
  hardwareSysEeprom:{
    title: 'System EEPROM',
    productName: 'Product Name',
    partNum: 'Part Number',
    baseMacAddr: 'Base MAC Address',
    manufactureDate: 'Manufacture Date',
    deviceVersion: 'Device Version',
    platformName: 'Platform Name',
    macCount: 'Number of MACs',
    manufacturer: 'Manufacturer',
    vendor: 'Vendor',
    countryCode: 'Country Code',
    serviceTag: 'Service Tag',
    vendorExtension: 'Vendor Extension',
    crc: 'CRC',
  },
  hardwarePsuEeprom:{
    title: 'PSU EEPROM',
    headerVersion: 'Header Version',
    fanType: 'Fan Type',
  },
  hardwareFanEeprom:{
    title: 'Fan Tray EEPROM',
    fanNum: 'Number of Fans',
  },
  systemLed:{
    sysLed: 'System LED',
    fanLed: 'FAN LED',
    locLed: 'Located LED',
    pwrLed: 'Power LED',
  },
  cpuThreshold:{
    title: 'CPU Threshold',
    thresholdUnit: '%',
    intervalUnit: 'secs',
    memoryThesholdUnit: 'KB',
    risingThreshold: 'Rising Threshold',
    risingInterval: 'Rising Interval',
    fallingThreshold: 'Falling Threshold',
    fallingInterval: 'Falling Interval',
    utilThresholds: 'CPU Utilization Monitoring Thresholds',
    freeMemoryThreshold: 'CPU Free Memory Monitoring Threshold',
    cpuMonitoringThreshold: 'CPU Monitoring Threshold (All)',
    resetTitle:'CPU Threshold Reset',
    message:'Are you sure to reset the configuration ?',
  },
  terminalLength:{
    title: 'Terminal Length',
    currentLen: 'For Current Session',
    consoleLen: 'For Serial Console',
    sshLen: 'For SSH Sessions',
    telnetLen: 'For Telnet Sessions',
    inputErr: 'Terminal Length must be in the range of 5 to 48 or 0.',
  },
  counterStats:{
    title: 'Counter Stats',
    inOctets: 'InOctets',
    inUcastPkts: 'InUcastPkts',
    inMcastPkts: 'InMcastPkts',
    inBcastPkts: 'InBcastPkts',
    outOcets: 'OutOctets',
    outUcastPkts: 'OutUcastPkts',
    outMcastPkts: 'OutMcastPkts',
    outBcastPkts: 'OutBcastPkts',
    clearTips: 'Are you sure you want to clear the port stats?',
    clearAllTips: 'Are you sure you want to clear ALL port stats?',
  },
  environment:{
    title: 'Environment',
    powerTitle: 'Environment Powers',
    tempSensorsTitle: 'Environment Temp Sensors',
    fansTitle: 'Environment Fans',
    unitId: 'Unit',
    voltage: 'Voltage (mV)',
    watt: 'Watt (mW)',
    temperature: 'Temp (C)',
    maxTemperature: 'Max_Temp (C)',
    speed: 'Speed',
    dutyLevel: 'Duty Level',
    current: 'Current (mA)',
    batteryStatus: 'Battery Status',
  },
  process:{
    title: 'Process',
    appListTitle: 'Process App-list',
    listTitle: 'Process Proc-list',
    cpuTitle: 'Process CPU Threshold',
    pid: 'PID',
    adminStatus: 'Admin Status',
    autoRestart: 'Auto Restart',
    runningStatus: 'Running Status',
    memoryLimit: 'Memory Limit',
    cpuShare: 'CPU Share',
    memoryUsage: 'Memory Usage',
    maxMemoryUsage: 'Max Mem Usage',
    processName: 'Process Name',
    appIdName: 'Application ID-Name',
    child: 'Child',
    vmSize: 'VM Size (KB)',
    vmPeak: 'VM Peak (KB)',
    fdCount: 'FD Count',
    procUpTime: 'Process Up Time',
    freeBytes: 'Free (KBytes)',
    allocBytes: 'Alloc (KBytes)',
    peakUtil: 'CPU Peak',
    utilization: 'Utilization',
    memUtilization: 'Memory Utilization Report',
    cpuUtilization: 'CPU Utilization',
    secs: 'Secs',
    unlimited: 'Unlimited',
    totalCpuUtilization: 'Total CPU Utilization',
  },
  firmware:{
    title: 'Firmware',
    bootLoaderTitle: 'Bootloader',
    diagOnieTitle: 'Diag / ONIE',
    noFileInProgress: 'No file is in progress',
    allFileUploaded: '100% uploaded file',
    uploadFailed: 'Upload Failed',
    uploadAborted: 'Upload Aborted'
  },
  version:{
    title: 'Version',
    currentRuntimeVersion: 'Current Runtime Version',
    currentRuntimeBuildTime: 'Current Runtime Build Time',
    firstRuntimeVersion: 'First Runtime Version',
    firstRuntimeBuildTime: 'First Runtime Build Time',
    secondRuntimeVersion: 'Second Runtime Version',
    secondRuntimeBuildTime: 'Second Runtime Build Time',
    diagnosticVersion: 'Diagnostic Program Version',
    onieVersion: 'ONIE Version',
    bootLoaderVersion: 'Bootloader Version',
    bootDwnTitle: 'Upgrade Bootloader File',
    bootDwnName: 'Bootloader Name',
  },
  sysInfo:{
    title: 'System Info',
    description: 'Switch Description',
    systemName: 'System Name',
    systemLocation: 'System Location',
    systemContact: 'System Contact',
    systemObjectId: 'System Object ID',
    systemUpTime: 'System Up Time',
    sntpTime: 'Current SNTP Synchronized Time',
    rebootContent: 'Are you sure to reboot the switch?',
    techsupTitle: 'Tech Support',
    createTech: 'Create Tech Support File',
    downloadTech: 'Download Tech Support ',
    createContent: 'Are you sure to create tech-support?',
  },
  portMirror:{
    title:'Monitor',
    srcIntf: 'Source Interface',
    src: 'Source',
    dst: 'Destination',
    rspan:'RSPAN VLAN',
    remoteSpan:'Remote SPAN VLAN',
    session1Tab: 'Session 1',
    session2Tab: 'Session 2',
    session3Tab: 'Session 3',
    session4Tab: 'Session 4',
    session: 'Session ID',
    adminMode: 'Admin Mode',
    dstPort: 'Destination Port',
    srcVlan: 'Source VLAN',
    srcPort: 'Mirrored Port',
    refPort: 'Reflector Port',
    srcRemoteVlan: 'Source Remote-VLAN',
    dstRemoteVlan: 'Destination Remote-VLAN',
    directionType: 'Direction Type',
    tx: 'TX',
    rx: 'RX',
    both: 'TX, RX',
    portPlaceholder: 'Enter slot/port',
    createSrcPort: 'Create Mirrored Port',
  },
  ehm: {
    mainTitle: 'EHM',
    title: 'EHM Group Configuration',
    interfacesTitle: 'EHM Interfaces',
    autoUplinkSync: 'Auto VLAN uplink synchronization',
    repinTimer: 'Repinning Timer',
    uplinkPorts: 'Uplink Ports',
    downlinkPorts: 'Downlink Ports',
    createPinGroup: 'Create Pin Group',
    pinGroupName: 'Pin Group Name',
    pinGroupHolder: 'Enter pin group name.',
    selectedPort: 'Selected Port',
    pinState: 'Pin Group State',
    linkState: 'Link State',
    portType: 'Port Type',
    pinning: 'Pinning Feature',
    uplink: 'Uplink',
    downlink: 'Downlink',
    pinned: 'Pinned',
    notpinned: 'Not Pinned',
    idle: 'Idle',
    pinning: 'Pinning'
  },
  vpc: {
    mainTitle: 'VPC',
    title: 'VPC Configuration',
    adminStatus: 'VPC Admin Status',
    operStatus: 'VPC Operational Status',
    enhanceMode: 'Enhance Mode',
    peerLink: 'Peek Link Interface',
    keepAliveTitle: 'VPC KeepAlive',
    roleTitle: 'VPC Role',
    selfRole: 'VPC Self Role',
    peer: 'Peer',
    vpcState: 'VPC State',
    domainId: 'VPC Domain ID',
    rolePriority: 'Role Priority',
    systemMac: 'Configured VPC MAC',
    operSystemMac: 'Operational VPC MAC',
    systemPriority: 'Configured VPC System Priority',
    operSystemPriority: 'Operational VPC System Priority',
    localSystemMac: 'Local System MAC',
    statisticsTitle: 'VPC Statistics',
    vpcGroupsTitle: 'VPC Groups',
    vpcConsistencyTitle: 'VPC Consistency',
    systemPriorityWarnMsg: 'The configured VPC system-priority becomes operational only after both the VPC devices perform primary role re-election(if primary device already exists).',
    systemMacWarnMsg: 'The configured VPC MAC address becomes operational only after both the VPC devices perform primary role re-election(if primary device already exists).',
  },
  vpcKeepAlive: {
    peerDetectMode: 'Peer Detection Admin Mode',
    peerDetectOperMode: 'Peer Detection Operational Mode',
    peerDetectTxInterval: 'Configured TX Interval(milliseconds)',
    peerDetectRxTimeout: 'Configured RX Timeout(milliseconds)',
    peerDetectOperTxInterval: 'Operational TX Interval(milliseconds)',
    peerDetectOperRxTimeout: 'Operational RX Timeout(milliseconds)',
    peerDetected: 'Peer Is Detected',
    keepAliveMode: 'KeepAlive Mode',
    keepAliveOperMode: 'KeepAlive Operational Mode',
    keepAliveTimeout: 'KeepAlive Timeout',
    keepAliveDstIp: 'Peer IP Address',
    keepAliveSrcIp: 'Source IP Address',
    keepAliveUdpPort:'UDP Port'
  },
  vpcGroups: {
    vpcState: 'VPC State',
    vlans: 'VLans',
    upLocalMembers: 'Up Local Members',
    downLocalMembers: 'Down Local Member',
    upPeerMembers: 'Up Peer Members',
    downPeerMembers: 'Down Peer Members',
    vpcId: 'VPC ID',
    lagIf: 'LAG Interface',
    vpcIdPlaceholder: 'Enter VPC ID',
    lagIfPlaceholder: 'Enter LAG Interface',
  },
  vpcConsistency: {
    lagId: 'LAG ID',
    stpMode: 'STP Mode',
    stpVersion: 'STP Version',
    filterMode: 'BPDU Filter Mode',
    guardMode: 'BPDU Guard Mode',
    mstInstances: 'MST Instances',
    fdbAgetime: 'FDB Age Time',
    vpcMac: 'VPC System Mac Address',
    vpcPriority: 'VPC System Priority',
    vpcDomainId: 'VPC Domain ID',
    associatedVlans: 'Associated VLANs',
    portchannelMode: 'Port Channel Mode',
    floodMode: 'Flood Mode',
    autoEdge: 'Auto Edge',
    tcnGuard: 'TCN Guard',
    portCost: 'Port Cost',
    edgePort: "Edge Port",
    rootGuard: 'Root Guard',
    loopGuard: 'LOOP Guard',
    hashMode: 'Hash Mode',
    minLinks: 'Min Links',
    channelType: 'Channel Type',
    vlanCfg: 'VLAN Configuration',
    mtu: 'MTU',
    noneLAGInterface: 'None of the LAG interface consistency parameters for VPC on the switch.'
  },
  vpcStatistic: {
    peerKeepaliveStat: 'Peer KeepAlive',
    peerLinkStat: 'Peer Link admin status',
    transmitted: 'Transmitted',
    received: 'Received',
    other: 'Other',
    txTotal: 'Total Transmitted',
    txSuccessful: 'Successful Transmitted',
    txError: 'Error Transmitted',
    rxTotal: 'Total Received',
    rxSuccessful: 'Successful Received',
    rxError: 'Error Received',
    timeoutCounter: 'Timeout Counter',
    txControlMessage: 'Control Message Transmitted',
    txControlMessageError: 'Control Message Error Transmitted',
    txControlMessageTimeout: 'Control Message Timeout Transmitted',
    txControlMessageAck: 'Control Message Ack Transmitted',
    txControlMessageAckError: 'Control Message Ack Error Transmitted',
    rxControlMessage: 'Control Message Received',
    txDataMessage: 'Data Message Transmitted',
    txDataMessageError: 'Data Message Error Transmitted',
    txDataMessageTimeout: 'Data Message Timeout Transmitted',
    rxDataMessage: 'Data Message Received',
    txBPDUToPeer: 'BPDU To Peer Transmitted',
    txBPDUError: 'BPDU Error Transmitted',
    rxBPDUFromPeer: 'BPDU From Peer Received',
    rxBPDUError: 'BPDU Error Received',
    txLACPDUToPeer: 'LACPDU To Peer Transmitted',
    txLACPDUError: 'LACPDU Error Transmitted',
    rxLACPDUFromPeer: 'LACPDU From Peer Received',
    rxLACPDUError: 'LACPDU Error Received',
    clearTips: 'Are you sure to clear vpc statistics?'
  },
  spb: {
    mainTitle: 'SPB',
    spbmTitle: 'SPBM',
    spbmIntfTitle: 'SPBM Interface',
    metric: 'Metric',
    allocateSpSourceId: 'Allocated SPSource ID',
    spSourceid: 'SPSource ID',
    bVid: 'BVID',
    ectIndex: 'ECT-Algorithm',
    enterBvid: 'Enter BVID',
    enterEctIndex: 'Enter ECT-Algorithm',
    createSpbm: 'Create SPBM Config',
  },
  eeeinterfaces: {
    title: 'EEE Interfaces',
  },
  isis : {
    mainTitle: 'ISIS',
    intfTitle: 'ISIS Interfaces',
    systemId: 'System ID',
    adjancencyStateLogging: 'Adjacency State Logging',
    adminMode: 'Admin Mode',
    lspRefreshTime: 'LSP-Refresh Time (secs)',
    lspMaxLifeTime: 'Max Life Time (secs)',
    psnpInterval: 'PSNP Interval (secs)',
    rxmtLspInterval: 'Rxmt LSP Interval (secs)',
    interval: 'Hello Interval (secs)',
    multiplier: 'Holding Multiplier',
    sysIdResetHint: 'Clear value is resetting the System ID to default value.',
    mode: 'ISIS Mode'
  },
  isisNeighbors : {
    title: 'ISIS Neighbors',
    systemId: 'System Id',
    circuitId: 'Circuit Id',
    holdTime: 'Hold Time',
    noNeighbors: 'No Neighbors available.'
  },
  isisLsdbs : {
    title: 'ISIS LSDBs',
    lspId: 'LSP Id',
    length: 'PDU Len',
    lifeTime: 'Life Time',
    seqNum: 'SeqNum',
    checksum: 'CheckSum',
    type: 'TypeBlock',
    tlvName: 'TLV Name',
    tlvId: 'TLV Id',
    protocolDesc: 'Protocl Desc',
    flags: 'Flags',
    mtId: 'MtId',
    subTlvName: 'Sub TLV Name',
    bMac: 'B-MAC',
    baseVid: 'Base-VID',
    cistRootId: 'CIST Root Id',
    cistExtRootPathCost: 'CIST External Root P',
    bridgePriority: 'Bridge Priority',
    spSourceIdFlags: 'Flags',
    spSourceId: 'SPSourceId',
    iSid: 'I-SID',
    neighbors: 'Neighbors',
    linkMetric: 'Link Metric',
    numOfPorts: 'Number of Ports',
    portId: 'Port Id',
    noLsdbs: 'No LSDBs available.',
    baseVid: 'Base VID',
    spvid: 'SPVID',
    reserved: 'Reserved'
  },
  isisSpfResults : {
    title: 'ISIS SPF Results',
    sourceId: 'Source Id',
    noResults: 'No SPF result available.'
  },
  portChannel: {
    mainTitle: 'Port Channel',
    subTitle: 'Port Channel Configuration',
    lacpTitle: 'LACP',
    lacpAdminKey: 'LACP Admin Key',
    actor: 'Actor',
    partner: 'Partner',
    systemPriority: 'System Priority',
    linkState: "Link State",
    adminMode: "Admin Mode",
    minLinks: 'Min-Links',
    loadBalanceMode: 'Load Balance Option',
    pxeBootupMode: 'PXE BootUp Status',
    trapFlag: 'Trap Flag',
    portSpeed: 'Port Speed',
    active: 'Port Active',
    addPort: 'Add Port',
    addPortPlaceholder: 'Enter Interface',
    resetHint: 'Clear value is LACP Admin Key to default.'
  },
  portChannelCounter: {
    title: 'Port Channel Counter',
    flapCount: 'Flap Count',
    members: 'Members',
    clearTips: 'Are you sure to clear port channel counters?',
    memberCount: 'Member Count'
  },
  portChannelLacp: {
    sysPriority: 'System Priority',
    adminKey: 'Admin Key',
    portPriority: 'Port Priority',
    adminState: 'Admin State',
    individual: 'Individual',
    longTimeout: 'LongTimeout',
    passive: 'Passive'
  },
  portChannelLacpPartner: {
    operational: 'Operational',
    intfState: 'Interface Mode Set',
    sysId: 'System ID',
    portId: 'Port ID',
  },
  ldap: {
    ldapTitle: 'LDAP',
    serverIp: 'Server IP',
    serverPort: 'Server Port',
    serverBaseDn: 'Server Base DN',
    serverSecurity: 'Security Mode',
    serverUserMode: 'Server User Mode',
    ldapRange: 'LDAP port range is between 1 to 65535',
    sslEnable: 'SSL Enable',
    sslDisable: 'SSL Disable',
    userModeEn: 'uid',
    userModeDis: 'cn'
  },
  tacacsConfig: {
    title: 'TACACS+',
    keyString:'Key',
    globalTimeout:'Global Timeout',
    clientInterface:'TACACS Client Source Interface',
    clientIp:'TACACS Client Source IPv4 Address',
    clientLinkState:'TACACS Client Source Interface Status',
    placeholder: 'Enter the slot/port, serviceport, network or empty',
    hostAddress:'Host Address',
    hostPort:'Port',
    hostPriority:'Priority',
    hostTimeout:'Timeout',
    createHost:'Create Host',
    hostName:'Host',
    hostNameHolder:'Enter host name or host address',
    hostKey:'Host Key',
    encrypt:'Encrypt',
    notConfig:'(Not Configured)',
    defaultPort:'(default: 49)',
    defaultPriority:'(default: 0)',
  },
  diffServ: {
    title: 'Differentiated Services',
    adminMode: 'Admin Mode',
    status: 'General Status',
    classTableSize: 'Class Table Current Size',
    classTableMax: 'Class Table Max Size',
    classRuleTableSize: 'Class Rule Table Current Size',
    classRuleTableMax: 'Class Rule Table Max Size',
    policyTableSize: 'Policy Table Current Size',
    policyTableMax: 'Policy Table Max Size',
    policyInstTableSize: 'Policy Instance Table Current Size',
    policyInstTableMax: 'Policy Instance Table Max Size',
    policyAttrTableSize: 'Policy Attribute Table Current Size',
    policyAttrTableMax: 'Policy Attribute Table Max Size',
    serviceTableSize: 'Service Table Current Size',
    serviceTableMax: 'Service Table Max Size',
  },
  classMap: {
    classMapTitle: 'Class Configuration',
    className: 'Class Name',
    classType: 'Class Type',
    classL3Protocol: 'Layer 3 Protocol',
    refClassName: 'Reference Class Name',
    refClass: 'Reference Class',
    createClass: 'Create Class',
    classNameHolder: 'Enter Class Name',
    v4ClassConfig: 'IPv4 Class Configuration',
    v6ClassConfig: 'IPv6 Class Configuration',
    matchCriteria: 'Match Criteria',
    matchAny: 'Match Any',
    dstMac: 'Destination MAC Address',
    dstMacMask: 'Destination MAC Address Mask',
    srcMac: 'Source MAC Address',
    srcMacMask: 'Source MAC Address Mask',
    ethertype: 'EtherType',
    secondCos: 'Secondary Class of Service',
    ipPrecedence: 'IP Precedence',
    ipTos: 'IP TOS',
    ipTosMask: 'IP TOS Mask',
    dstIp: 'Destination IP Address',
    dstIpMask: 'Destination IP Address Mask',
    srcIp: 'Source IP Address',
    srcIpMask: 'Source IP Address Mask',
    srcL4Port: 'Source Layer 4 Port',
    dstL4Port: 'Destination Layer 4 Port',
    flowLabel: 'Flow Label',
    deleteRefClass: 'Are you sure to delete reference class?'
  },
  policyMap: {
    title: 'Policy Map',
    policyName: 'Policy Name',
    policyType: 'Policy Type',
    className: 'Class Name',
    createName: 'Create Policy Name',
    classMember: 'Class Members',
  },
  policyMapConfig: {
    title: 'Policy Map Config',
    simple: 'Simple',
    single: 'Single',
    two: 'Two',
    mark: 'Mark',
    transmit: 'Transmit',
    drop: 'Drop',
    redirect: 'Redirect',
    mirror: 'Mirror',
    assignQueue: 'Assign Queue',
    markCos: 'Mark Cos',
    markDscp: 'Mark IP DSCP',
    markPrecedence: 'Mark IP Precedence',
    markCosAsSecCos: 'Mark CoS as Secondary CoS',
    policeAction: 'Police Action',
    conformRate: 'Conform Rate',
    conformBurst: 'Conform Burst',
    peakRate: 'Peak Rate',
    excessBurst: 'Excess Burst',
    conformAction: 'Conform Action',
    exceedAction: 'Exceed Action',
    violateAction: 'Violate Action',
    conformColor: 'Conform Color Class',
    exceedColor: 'Exceed Color Class',
    cos: 'Cos',
    dscp: 'IP DSCP',
    precedence: 'IP Precedence',
    cosAsSecCos: 'CoS as Secondary CoS',
    conformColorMode: 'Conform Color Mode',
    conformColorCos: 'Conform Color COS Value',
    exceedColorMode: 'Exceed Color Mode',
    exceedColorCos: 'Exceed Color COS Value',
    unknown: 'Unknown',
    blind: 'Blind',
    awareCos: 'Aware COS',
    awareSecCos: 'Aware Secondary COS',
    awareDscp: 'Aware IP DSCP',
    awarePrec: 'Aware IP Precedence',
    notSpec: 'Not Specified',
  },
  policyMapStats: {
    title: 'Policy Map Stats',
    policyStatus: 'Operational Status',
    name: 'Policy Name',
    className: 'Class Name',
    offeredPacket: 'In Offered Packets',
    discardedPackets: 'In Discarded Packets',
  },
  servicePolicy: {
    title: 'Service Policy',
    intf: 'Interface',
    name: 'Policy Name',
    createEntry: "Create Service Policy Name",
    operStatus: 'Operational Status',
    policyName: 'Policy Name',
    deletePageTitle: 'Delete Service Policy',
  },
  dosConfig: {
    title: 'Denial of Service',
    firstFragCheck: 'First Fragment Mode',
    minTcpHeaderSize: 'The Minimum TCP Header Size',
    icmpV4Check: 'ICMPv4 Mode',
    maxIcmpV4Size: 'The Maximum ICMPv4 Payload Size',
    icmpV6Check: 'ICMPv6 Mode',
    maxIcmpV6Size: 'The Maximum ICMPv6 Payload Size',
    icmpFragCheck: 'ICMPv4 Fragment Mode',
    l4PortCheck: 'L4 Port Mode',
    tcpPortCheck: 'TCP Port Mode',
    udpPortCheck: 'UDP Port Mode',
    ipCheck: 'SIPDIP Mode',
    macCheck: 'SMACDMAC Mode',
    tcpFinUrgPshCheck: 'TCP FIN&URG&PSH Mode',
    tcpFlagSeqCheck: 'TCP Flag & Sequence Mode',
    tcpSynCheck: 'TCP SYN Mode',
    tcpSynFinCheck: 'TCP SYN&FIN Mode',
    tcpFragCheck: 'TCP Fragment Mode',
    tcpOffsetCheck: 'TCP Offset Mode',
  },
  dot1xSupplicant: {
    title: '802.1X Supplicant',
    protocolVersion: "Protocol Version",
    paeState: "Supplicant PAE State",
    backendAuthState: "Backend Authentication State",
    maxStartMsgs: "Max Start Messages",
    startPeriod: "Start Period (secs)",
    heldPeriod: "Held Period (secs)",
    authPeriod: "Authentication Period (secs)",
  },
  ets: {
    mainTitle: 'ETS',
    title: 'ETS Configuration',
    interfacesTitle: 'ETS Interfaces',
    trafficGroup: 'Traffic Class Group',
    minBandwidth: 'Min. Bandwidth',
    maxBandwidth: 'Max. Bandwidth',
    weight: 'Weight',
    schedule: 'Schedule Type',
    trafficClassMaps: 'TrafficClassMaps',
    strict: 'Strict',
    wrr: 'Weighted Round Robin',
    trafficClass: "Traffic Class",
    trafficClassGroup: "Traffic Class Group Setting"
  },
  radius: {
    title:"RADIUS",
    subTitle: 'RADIUS Status',
    statsTitle: 'RADIUS Statistics',
    authServers: "Number of Configured Authentication Servers",
    acctServers: "Number of Configured Accounting Servers",
    authServerGroups: "Number of Named Authentication Server Groups",
    acctServerGroups: "Number of Named Accounting Server Groups",
    adminMode: "RADIUS Accounting Mode",
    attributeMode: "RADIUS Attribute 4 Mode",
    attributeIp: "RADIUS Attribute 4 Value",
    retrans: "Number of Retransmits",
    timeout: "Timeout Duration (seconds)",
    sourceInterface: "RADIUS Client Source Interface",
    sourceAddress: "RADIUS Client Source IPv4 Address",
    sourceState: "RADIUS Client Source Interface Status",
    encrypted: 'Encrypted',
    secret: 'Secret',
    encryptedSecret: 'Encrypted Secret',
    clearContent: 'Are you sure to clear all the RADIUS statistics ?',
    secs: 'secs'
  },
  radiusAccountings: {
    title:"RADIUS Accounting",
    serverName: "RADIUS Accounting Server Name",
    hostAddr: "RADIUS Accounting Server IP Address or Host Name",
    ip: "RADIUS Accounting Server IP Address",
    secretStatus: "Secret Configured",
    tripTime: "Round Trip Time ",
    requests: "Requests",
    retransmissions: "Retransmissions",
    responses: "Responses",
    malformedRes: "Malformed Responses",
    badAuth: "Bad Authenticators",
    pendingReq: "Pending Requests ",
    timeout: "Accounting Timeouts to This Server",
    unknownType: "RADIUS Packets of Unknown Types",
    pktDrop: "Packets Dropped",
    createEntry: "Create RADIUS Accounting",
    serverNamePlaceholder: 'Enter the Server Name',
    radiusAccStats: 'RADIUS Accounting Statistics',
    hostAddrPlaceholder: 'Enter a valid IP address or Hostname.',
  },
  radiusAuths:{
    title:"RADIUS Authenticating",
    serverName: "RADIUS Authenticating Server Name",
    hostAddr: "RADIUS Authenticating Server IP Address or Host Name",
    ip: "RADIUS Server IP Address",
    secretStatus: "Secret Configured ",
    msgAuth: "Message Authenticator ",
    selectedSrv: "Selected Server",
    accepts: "Access Accepts",
    rejects: "Access Rejects",
    challenges: "Access Challenges",
    timeout: "Authentication Timeouts to This Server",
    createEntry: "Create RADIUS Authenticating",
    radiusAuthStats: 'RADIUS Authenticating Statistics'
  },
  irdp: {
    title: 'IRDP',
    address: 'Destination Address',
    maxInterval: 'Max Interval (secs)',
    minInterval: 'Min Interval (secs)',
    holdTime: 'Hold Time (secs)',
    preference: 'Preference',
    timeType: 'Time Type',
    editTitle: 'Edit IRDP Interface',
  },
  userAccount: {
    title: 'User Account',
    userAccounts: 'User Accounts',
    createPageTitle: 'Create User Account',
    userName: 'User Name',
    password: 'Password',
    encrypted: 'Encrypted',
    privilegeLevel: 'Privilege Level',
    passwordAging: 'Password Aging',
    passwordExpireIn: 'Expire In',
    passwordExpiryDate: 'Estimated Password Expiry Date',
    lockout: 'Lockout',
    overrideComplexity: 'Override Complexity Check',
    passwordStrength: 'Password Strength',
    level_0: '0',
    level_1: '1',
    level_15: '15',
  },
  passwordReset:{
    title:'Reset All Passwords',
    message:'Are you sure you want to reset all passwords? ',
  },
  password: {
    createPageTitle: 'Create Password',
    deletePageTitle: 'Delete Password',
    mode: 'Password mode',
    enable: 'Enable',
    console: 'Console',
    console2: 'Console2',
    passwordHolder: 'Enter Password',
    configuration: 'Passwords Configuration',
    result: 'Passwords Result',
    minPasswordLength: 'Minimum Password Length',
    passwordAging: 'Password Aging (days)',
    passwordHistory: 'Password History',
    lockoutAttempts: 'Lockout Attempts' ,
    passwordStrengthCheck: 'Password Strength Check',
    minPasswordUppercase: 'Minimum Password Uppercase Letters',
    minPasswordLowercase: 'Minimum Password Lowercase Letters',
    minPasswordNumeric: 'Minimum Password Numeric Characters',
    minPasswordSpecial: 'Minimum Password Special Characters',
    maxPasswordRepeated: 'Maximum Password Repeated Characters',
    maxPasswordConsecutive: 'Maximum Password Consecutive Characters',
    minPasswordCharacter: 'Minimum Password Character Classes',
    passwordExcludeKeywords: 'Password Exclude Keywords',
    passwordLastUser: 'Last User Whose Password Is Set',
    passwordLastPasswordSet: 'Last Password Set Result',
    excludeKeywordsError: 'This field should be in the range of 2 to 64 characters.'
  },
  privilegeLevels: {
    title: 'Privilege Levels',
    assignPrivilegeLevel: 'Assign Privilege Level',
    privilegeLevel: 'Privilege Level',
    command: 'Command',
    usageHint: 'The following table shows commands that privilege level is not 0. Users can use the Assign button to change the privilege level of the commands. Users can refer to CLI Reference Manual for commands. '
  },
  silentTime: {
    title: 'Silent Time',
    silentStatus: 'Silent Time Status',
    interval: 'Silent Time Interval'
  },
  dot1x: {
    title: "802.1X Port Based and MAC Based Authentication",
    portBasedTitle: "802.1X Port Based Detail Interfaces",
    macBasedTitle: "802.1X MAC Based Detail Interfaces",
    supplicantTitle: "802.1x Supplicant Detail Interfaces",
    paeCapabilities: "PAE Capabilities",
    controlMode: "Control Mode",
    authPAEState: "Authenticator PAE State",
    backendAutheState: "Backend Authentication State",
    quietPeriod: "Quiet Period (secs)",
    transmitPeriod: "Transmit Period (secs)",
    guestVlanID: "Guest VLAN ID",
    guestVlanPeriod: "Guest VLAN Period (secs)",
    suppTimeout: "Supplicant Timeout (secs)",
    serverTimeout: "Server Timeout (secs)",
    maxRequests: "Maximum Requests",
    configMABMode: "Configured MAB Mode",
    operationalMABMode: "Operational MAB Mode",
    vlanAssignedReason: "VLAN Assigned Reason",
    reAuthPeriod: "Reauthentication Period (secs)",
    reAuth: "Reauthentication Enabled",
    keyTrans: "Key Transmission Enabled",
    ctrDirection: "Control Direction",
    operCtrDirection: "Oper Control Direction",
    maxUsers: "Maximum Users",
    unAuthVlanID: "Unauthenticated VLAN ID",
    sessionTimeout: "Session Timeout",
    sessionTerminationAction: "Session Termination Action",
    authenticatedPort: "Authenticated Port",
    logicalPort: "Logical Port",
    suppMAC: "Supplicant MAC-Address",
    assigned: "VLAN-Assigned",
    initialize: "Initialize",
    both: "Both",
    in: "In",
    authenticator: 'Authenticator',
    dot1xStatusTitle: '802.1X Status',
    dot1xStatsTitle: '802.1X Statistics',
    adminMode: 'Administrative Mode',
    vlanAssignmentMode: 'VLAN Assignment Mode',
    dynamicVLANCreateMode: 'Dynamic VLAN Creation Mode',
    eapolFloodMode: 'EAPOL Flood Mode',
    paeCapability: 'PAE Capabilities',
    eapolRx: 'EAPOL Frames Received',
    eapolTx: 'EAPOL Frames Transmitted',
    eapolStartTx: 'EAPOL Start Frames Transmitted',
    eapolLogoffRx: 'EAPOL Logoff Frames Received',
    eapRespIdRx: 'EAP Resp/ID Frames Received',
    eapResponseRx: 'EAP Response Frames Received',
    eapReqIdTx: 'EAP Req/ID Frames Transmitted',
    eapReqTx: 'EAP Req Frames Transmitted',
    invalidEapolRx: 'Invalid EAPOL Frames Received',
    eapLengthErrorRx: 'EAP Length Error Frames Received',
    lastEapolVersion: 'Last EAPOL Frame Version',
    lastEapolSource: 'Last EAPOL Frame Source',
    authenticator: 'Authenticator',
    supplicant: 'Supplicant',
    cleardot1xStatsTitle: 'Clear 802.1X Statistics',
    interfaceTitle: '802.1X Interfaces',
    controlMode: 'Control Mode',
    opCtrlMode: 'Operating Control Mode',
    reAuth: 'Reauthentication Enabled',
    portStatus: 'Port Status',
    paeCapability: 'PAE Capabilities',
    user: 'User',
    authenticator: 'Authenticator',
    supplicant: 'Supplicant',
    forceAuthorized: 'Force-Authorized',
    forceUnauthorized: 'Force-Unauthorized',
    macBased: 'MAC Based',
    authorized: 'Authorized',
    unauthorized: 'Unauthorized',
    createEntry:' Create 802.1X Interface',
    resetEntry:' Reset 802.1X Interface',
    interfacePlaceholder: 'Enter the Interface',
    userPlaceholder: 'Enter the User',
    historyTitle: '802.1X Authentication History',
    timeStamp: 'Time Stamp',
    authStatus: 'Authorized Status',
    clearHistoryTitle: 'Clear Authentication History',
    clearHistoryAlert: 'Are you sure to clear Authentication Histories?',
    reauthEntry:'Re-Aeauthenticate 802.1x Interface',
    clearStatistics:'Are you sure you want to clear dot1x port stats?',
  },
  dot1xClients: {
    title: '802.1x Clients',
    monitorMode: 'Monitor Mode',
    dot1x: 'Clients Authenticated Using Dot1x',
    logicalInterface: 'Logical Interface',
    interface:'Interface',
    user:'User Name',
    suppMACAddr: 'Supplicant MAC Address',
    sessionTime:'Session Time',
    vlanId:'VLAN ID',
    vlanAssigned:'VLAN Assigned',
    sessionTimeout:'Session Timeout',
    sessionTerminationAction:'Session Termination Action',
    filterId:'Filter Id',
  },
  mcast: {
    title: 'Multicast',
    configTitle: 'Multicast Config',
    mcastsBoundary: 'Multicast Boundary',
    mcastStaticRoute: 'Multicast Static Route',
    mfcTitle: 'MFC',
    mfcCacheTitle: 'MFC Cache',
    deletePageTitle: 'Multicast Boundary Entry Delete',
    createPageTitle: 'Multicast Boundary Entry Create',
    mrouteStaticCreateTitle: 'Multicast Static Route Create',
    mrouteStaticDeleteTitle: 'Multicast Static Route Delete',
    mroutev6StaticTitle: 'IPv6 Multicast Static Route',
    mroutev6StaticCreateTitle: 'IPv6 Multicast Static Route Create',
    mroutev6StaticDeleteTitle: 'IPv6 Multicast Static Route Delete',
    sourceAddress: 'Source IP',
    groupAddress: 'Group Address',
    sourceMask: 'Source Mask',
    rpfAddress: 'RPF Address',
    preference: 'Preference',
    protocolState: 'Protocol State',
    protocol: 'Protocol',
    mcastTableMaxSize: 'Multicast Table Max Size',
    mcastForwardCount: 'Multicast Forwarding Cache Entry Count',
    boundaryGroupIp: 'Group IP',
    boundaryGroupMask: 'Mask',
    interfaceTtl: 'TTL',
    mrouteTable: 'Multicast Route Table',
    mrouteTitle: 'Multicast Route Entry',
    mroutev6Title: 'IPv6 Multicast Route Entry',
    mrouteDeleteTitile: 'Multicast Route Entry Delete',
    mrouteClearTitile: 'Multicast Route Entry Clear',
    mroutev6DeleteTitile: 'IPv6 Multicast Route Entry Delete',
    mroutev6ClearTitile: 'IPv6 Multicast Route Entry Clear',
    mrouteRoutingTitle: 'IP Multicast Routing Table',
    sourceIp: 'Source IP',
    groupIp: 'Group IP',
    incomingInterface: 'Incoming Interface',
    outgoingInterfaceList: 'Outgoing Interface List',
    expiryTime: 'Expiry Time (hh:mm:ss)',
    upTime: 'Up Time (hh:mm:ss)',
    rpfNeighbor: 'RPF Neighbor',
    rp: 'RP',
    flag: 'Flags',
    ipv4Mode: 'IPv4 Mode',
    ipv6Mode: 'IPv6 Mode',
    entryCount: 'Entry Count',
    currentIpv4Protocol: 'Current Multicast IPv4 Protocol',
    currentIpv6Protocol: 'Current Multicast IPv6 Protocol',
    totalSoftwareForwardedPackets: 'Total Software Forwarded Packets',
    softwareForwardedPackets: 'Software Forwarded Packets',
    preferenceErr: 'The field must be between 1 and 255.',
    mfcCacheExpiryTime: 'Expiry Time',
    mfcCacheUpTime: 'Up Time',
    mfcIpv4Mode: 'MFC IPv4 Mode',
    mfcIpv6Mode: 'MFC IPv6 Mode',
    mfcEntryCount: 'MFC Entry Count',
    join: 'Joins',
    prunes: 'Prunes',
    registers: 'Registers',
    registerStops: 'Registers Stop',
    groupIpAddr: 'Group IP Address',
    ipAddressPlaceholder: 'Enter the Group IP Address',
  },
  arp: {
    dynamicArpInspection: 'Dynamic ARP Inspection',
    title: 'ARP',
    settingTitle: 'ARP Setting',
    respTime: 'Response Time (seconds)',
    retries: 'Retries',
    ageTime: 'Age Time (seconds)',
    timeout: 'Timeout (seconds)',
    dynamicRenew: 'Dynamic Renew Mode',
    cacheTitle: 'ARP Cache',
    interface: 'Interface',
    ipAddr: 'IP Address',
    macAddr: 'MAC Address',
    type: 'Type',
    age: 'Age',
    purge: 'Purge',
    createTitle: 'Create ARP Cache Entry',
    deleteTitle: 'Delete ARP Cache Entry',
    clearTitle: 'Clear ARP Cache',
    clearAlert: 'Are you sure to clear the entries from the ARP cache?',
    clearDynamic: 'Clear the dynamic entries.',
    clearGateway: 'Clear the dynamic and gateway entries.',
    purgeTitle: 'Purge ARP Cache Entry',
    purgeAlert: 'Are you sure to remove the entry from the ARP cache?',
    cachebriefTitle: 'ARP Cache Brief',
    cacheSize: 'Cache Size',
    totalCount: 'Total Entry Count Current / Peak',
    staticCount: 'Static Entry Count Configured / Active / Max',
    vrfName: 'VRF Name',
    noVrfMsg: 'VRF does not exist!',
  },
  ipHelper: {
    title: 'IP Helper',
    ipHelperStatus: 'IP Helper Status',
    vrfName: 'VRF Name',
  },
  ipHelperStats: {
    title: 'IP Helper Stats',
    dhcpClientRecv: 'DHCP Client Messages Received',
    dhcpClientRelayed: 'DHCP Client Messages Relayed',
    dhcpServerRecv: 'DHCP Server Messages Received',
    dhcpServerRelayed: 'DHCP Server Messages Relayed',
    udpClientRecv: 'UDP Client Messages Received',
    udpClientRelayed: 'UDP Client Messages Relayed',
    dhcpHotCount: 'DHCP Message Hop Count Exceeded Max',
    dhcpSecsField: 'DHCP Message with Secs Field Below Min',
    dhcpGiaddr: 'DHCP Message with Giaddr Set to Local Address',
    ttlPacket: 'Packets with Expired TTL',
    discardEntryPacket: 'Packets that Matched A Discard Entry',
  },
  ipHelperAddress: {
    udpPort: 'UDP Port',
    discard: 'Discard',
    hitCount: 'Hit Count',
    serverAddress: 'Server Address',
    inputType: 'Input Type',
    udpPortNumber:'UDP Port Number',
    dhcp:  'Relay DHCP (UDP port 67) packets.',
    domain: 'Relay DNS (UDP port 53) packets.',
    isakmp: 'Relay ISAKMP (UDP port 500) packets.',
    mobileip: 'Relay Mobile IP (UDP port 434) packets.',
    nameserver: 'Relay IEN-116 Name Service (UDP 42) packets.',
    netbiosdgm: 'Relay NetBIOS Datagram Server (UDP port 138) packets.',
    netbiosns: 'Relay NetBIOS Name Server (UDP port 137) packets.',
    ntp: 'Relay network time protocol (UDP port 123) packets.',
    pimautorp: 'Relay PIM auto RP (UDP port 496) packets.',
    rip: 'Relay RIP (UDP port 520) packets.,',
    tacacs: 'Relay TACACS (UDP port 49) packets.',
    tftp: 'Relay TFTP (UDP port 69) packets.',
    time: 'Relay time service (UDP port 37) packets.',
    otherPort: 'Other Port',
    any: 'Any',
    createIpHelperAddrEntry: 'Create IP Helper Address',
    subtitle:'Helper IP\'s List Information'
  },
  vlanRouting: {
    title: 'Virtual LAN Routing',
    createPageTitle: 'Create Virtual LAN Routing',
    interfaceId: 'Interface ID',
  },
  arpInspects: {
    title: 'ARP Inspection',
    createVlan: 'Create ARP Inspection VLAN',
    configuration: 'Configuration',
    logging: 'Log Invalid',
    aclName: 'ACL Name',
    staticFlag: 'Static Flag',
    deleteEntry: 'Delete ARP Inspection VLAN',
    editVlan: 'Edit ARP Inspection VLAN',
    aclNameRequire: 'Acl Name is required',
  },
  arpInspectValidate: {
    title: 'ARP Inspection Validate',
    srcMac: 'Source MAC',
    dstMac: 'Destination MAC',
    ip: 'IP Address',
  },
  arpInspectTrustLimit: {
    title: 'ARP Inspection Trust Limit',
    trust: 'Trust State',
    rateLimit: 'Rate Limit (pps)',
    burstInterval: 'Burst Interval (seconds)',
  },
  arpInspectStats: {
    title: 'ARP Inspection Stats',
    forwarded: 'Forwarded',
    dropped: 'Dropped',
    dhcpDrops: 'DHCP Drops',
    aclDrops: 'ACL Drops',
    dhcpPermits: 'DHCP Permits',
    aclPermits: 'ACL Permits',
    badSrcMac: 'Bad Src MAC',
    badDstMac: 'Bad Dest MAC',
    invalidIp: 'Invalid IP',
    clearTips: 'Are you sure to clear statistic?',
  },
  arpAcls: {
    title: 'ARP ACL',
    deleteEntry: 'Delete ARP ACL Rule',
    aclName: 'ARP ACL Name',
    aclCount: 'ARP ACL Count',
    createAclName: 'Create ARP ACL Name',
    createAcl: 'Create ARP ACL Rule',
    aclNamePlaceholder: 'Enter the ACL Name',
    permitIp: 'Permit IP Host',
    permitMac: 'Permit MAC Host',
  },
  arpSwitch: {
    title: 'ARP Switch',
    clearItemTitle: 'Clear ARP Switch',
    clearAlert: 'Are you sure to clear the Management port entries from the ARP Cache?'
  },
  application: {
    title: 'Application',
    uploadTitle: 'Upload Application',
    eraseItemTitle: 'Erase the application',
    eraseAlert: 'Are you sure to erase it from the nvram?',
    startOnBoot: 'Start On Boot',
    autoRestart: 'Auto Restart',
    maxCpu: 'CPU Sharing',
    maxMemory: 'Max Memory',
    install: 'Install',
    createPageTitle: 'Create Application Configuration',
    fileSize: 'File size (bytes)',
    directorySize: 'Directory Size (bytes)',
    erase: 'Erase',
    megaBytes: 'megabytes',
    appName: 'Application Name',
    destName: 'Destination Filename',
    namePlaceholder: 'Filename for application file',
  },
  aaa: {
    title: 'AAA',
  },
  authentication: {
    title: 'Authentication',
  },
  authenticationList: {
    title: 'Authentication Method List',
    createPageTitle: 'Create Authentication List',
    listName: 'List Name',
    authenMethod: 'Authentication Method',
    enable: 'Enable',
    ldap: 'LDAP',
    line: 'Line',
    tacacs: 'TACACS',
    ias: 'IAS',
    dot1x: 'Dot1x',
    http: 'HTTP',
    https: 'HTTPS',
    authenMethodLoginPlaceHolder: 'enable,ldap,line,local,radius,tacacs,none',
    authenMethodEnablePlaceHolder: 'enable,ldap,line,radius,tacacs,none,deny',
    authenMethodHttpHttpsPlaceHolder: 'local,radius,tacacs,none',
  },
  authenticationBinding: {
    title: 'Authentication Binding',
    loginConsole: 'Login Method List Console',
    enableConsole: 'Enable Method List Console',
    loginSsh: 'Login Method List SSH',
    enableSsh: 'Enable Method List SSH',
    loginTelnet: 'Login Method List Telnet',
    enableTelnet: 'Enable Method List Telnet',
  },
  authorization: {
    title: 'Authorization',
  },
  authorizationList: {
    title: 'Authorization Method List',
    createPageTitle: 'Create Authorization List',
    authorMethod: 'Authorization Method',
    radiusTacacs: 'RADIUS,TACACS',
    tacacsRadius: 'TACACS,RADIUS',
    radiusNone: 'RADIUS,None',
    tacacsNone: 'TACACS,None',
    radiusTacacsNone: 'RADIUS,TACACS,None',
    tacacsRadiusNone: 'TACACS,RADIUS,None',
  },
  authorizationBinding: {
    title: 'Authorization Binding',
    console: 'Command Method List Console',
    ssh: 'Command Method List SSH',
    telnet: 'Command Method List Telnet',
  },
  accounting: {
    title: 'Accounting',
  },
  accountingList: {
    title: 'Accounting List',
    createPageTitle: 'Create Accounting List',
    accType: 'Acct Type',
    methodName: 'Method Name',
    mode: 'Method Type',
    accountMethod: 'Accounting Method',
    exec: 'Exec',
    cmds: 'Commands',
    startStop: 'Start-Stop',
    stopOnly: 'Stop-Only',
    accountMethodPlaceHolder: 'radius,tacacs',
    default: 'default'
  },
  accountingBinding: {
    title: 'Accounting Binding',
    execConsole: 'EXEC Method List Console',
    cmdConsole: 'Command Method List Console',
    execSsh: 'EXEC Method List SSH',
    cmdSsh: 'Command Method List SSH',
    execTelnet: 'EXEC Method List Telnet',
    cmdTelnet: 'Command Method List Telnet',
    execHttp: 'EXEC Method List HTTP',
    cmdHttp: 'Command Method List HTTP',
    execHttps: 'EXEC Method List HTTPS',
    cmdHttps: 'Command Method List HTTPS',
  },
  accountingStat: {
    title: 'Accounting Stats',
    execBeginNum: 'Number of Accounting Notifications sent at beginning of an EXEC session',
    execBeginError: 'Errors when sending Accounting Notifications beginning of an EXEC session',
    execEndNum: 'Number of Accounting Notifications sent at end of an EXEC session',
    execEndError: 'Errors when sending Accounting Notifications at end of an EXEC session',
    cmdBeginNum: 'Number of Accounting Notifications sent at beginning of a command execution',
    cmdBeginError: 'Errors when sending Accounting Notifications at beginning of a command execution',
    cmdEndNum: 'Number of Accounting Notifications sent at end of a command execution',
    cmdEndError: 'Errors when sending Accounting Notifications at end of a command execution',
    clearStatistics:'Are you sure to clear statistics ?',
  },
  iasUsers: {
    title: 'IAS Users',
    createPageTitle: 'Create IAS User',
    clearTitle: 'Clear IAS Users'
  },
  errdisableInterfaces: {
    title: 'Error Disable Interfaces',
    reason: 'Errdisable Reason',
    time: 'Auto-Recovery Time Left (secs)',
  },
  errdisable: {
    title: 'Error Disable and Auto Recovery',
    reason: 'Errdisable Reason',
    status: 'Auto-recovery Status',
    interval: 'Timeout for Auto-recovery from D-Disable State (secs)',
    dhcpratelimit: 'dhcp-rate-limit',
    arpinspection: 'arp-inspection',
    udld: 'udld',
    bcaststorm: 'bcast-storm',
    mcaststorm: 'mcast-storm',
    ucaststorm: 'ucast-storm',
    bpduguard: 'bpduguard',
    bpdustorm: 'bpdustorm',
    sfpmismatch: 'sfp-mismatch',
  },
  pim: {
    title: 'PIM',
    config: 'PIM Configuration',
    adminMode: 'PIM Mode',
    dense: 'Dense',
    sparse: 'Sparse',
    trapMode: 'Trap Mode',
    noInterfaceMsg: 'None of the routing interfaces are enabled for PIM.',
    helloInterval: 'Hello Interval (secs)',
    joinPruneInterval: 'Join Prune Interval (secs)',
    drPriority: 'DR Priority',
    bsrPriority: 'BSR Priority',
    bsrBorder: 'BSR Border',
    neighborCount: 'Neighbor Count',
    designatedRouter: 'Designated Router',
    ssm: 'PIM Source Specific Multicast',
    groupAddress: 'Group Address',
    groupMask: 'Group Mask',
    ssmIPv4Create: 'Create IPv4 PIM SSM Range',
    ssmIPv6Create: 'Create IPv6 PIM SSM Range',
    ssmIPv4Delete: 'Delete IPv4 PIM SSM Range',
    ssmIPv6Delete: 'Delete IPv6 PIM SSM Range',
    prefix: 'Prefix Length',
    maskPlaceholder: 'Enter the Group Mask',
    maskLengthPlaceholder:'Enter the Length',
    priorityPlaceholder:'Enter the priority',
    intervalPlaceholder:'Enter the interval',
    hashMaskLength: 'BSR Hash Mask Length',
    bsrInterval: 'C-BSR Advertisement Interval (secs)',
    nextBootstrapMessageTime: 'Next Bootstrap Message (hh:mm:ss)',
    nextCanRpAdvertise: 'Next Candidate RP Advertisement (hh:mm:ss)',
    bsr: 'PIM Bootstrap Router',
    bsrSimple: 'BSR',
    bsrAddress: 'BSR Address',
    candidate: 'Candidate',
    elected: 'Elected',
    bsrIpv4Create: 'Create IPv4 PIM BSR',
    bsrIpv6Create: 'Create IPv6 PIM BSR',
    bsrIpv4Delete: 'Delete IPv4 PIM Candidate BSR',
    bsrIpv6Delete: 'Delete IPv6 PIM Candidate BSR',
    bsrIpv4Update: 'Update IPv4 PIM BSR',
    bsrIpv6Update: 'Update IPv6 PIM BSR',
    rpcandidate: 'PIM RP Candidate',
    rpInterval: 'C-RP Advertisement Interval (secs)',
    rpAddress: 'RP Address',
    rpIPv4Delete: 'Delete IPv4 Candidate RP',
    rpIPv6Delete: 'Delete IPv6 Candidate RP',
    rpIPv4Update: 'Update IPv4 Candidate RP',
    rpIPv6Update: 'Update IPv6 Candidate RP',
    rpIPv4Create: 'Create IPv4 Candidate RP',
    rpIPv6Create: 'Create IPv6 Candidate RP',
    rpstatic: 'PIM Rendezvous Point',
    rpIPv4StaticCreate: 'Create IPv4 Static RP',
    rpIPv6StaticCreate: 'Create IPv6 Static RP',
    rpIPv4StaticDelete: 'Delete IPv4 Static RP',
    rpIPv6StaticDelete: 'Delete IPv6 Static RP',
    override: 'Override',
    rpMapping: 'PIM RP Mappings',
    origin: 'Origin',
    expiry: 'Expiry Time (hh:mm:ss)',
    rpHash: 'PIM RP Hash',
    neighbors: 'PIM Neighbors',
    neiborAddress: 'Neighbor Address',
    upTime: 'Up Time (hh:mm:ss)',
    stats: 'PIM Stats',
    rxHello: 'Received Hello Message',
    rxRegister: 'Received Register Message',
    rxRegStop: 'Received Register-Stop Message',
    rxJoinPrune: 'Received Join/Prune Message',
    rxBsr: 'Received Boot Strap Message',
    rxAssert: 'Received Assert Message',
    rxCrp: 'Received Candidate RP Advertisement Message',
    rxInvalid: 'Invalid Packets Received',
    txHello: 'Transmitted Hello Message',
    txRegister: 'Transmitted Register Message',
    txRegStop: 'Transmitted Register-Stop Message',
    txJoinPrune: 'Transmitted Join/Prune Message',
    txBsr: 'Transmitted Boot Strap Message',
    txAssert: 'Transmitted Assert Message',
    txCrp: 'Transmitted Candidate RP Advertisement Message',
    txStatus: 'Packet Sent from Protocol',
    rxStatus: 'Packet Received in Protocol',
    clearStats: 'Clear PIM Statistics',
    otherAddress: 'Other Address',
    noBsrMsg: 'No BSR\'s exist/learnt on this router.',
  },
  mgmdProxy: {
    igmpTitle: 'IGMP-Proxy',
    mldTitle: 'MLD-Proxy',
    operationalMode: 'Operational Mode',
    unsolicitedReportInterval: 'Unsolicited Report Interval',
    groupCount: 'Number of Multicast Groups',
    querierIpAddress: 'Querier Address on Proxy Interface',
    v1QuerierTimeout: 'Older Version 1 Querier Timeout',
    v2QuerierTimeout: 'Older Version 2 Querier Timeout',
    reStartFrequency: 'Proxy Start Frequency',
  },
  mgmdProxyGroups: {
    igmpTitle: 'IGMP-Proxy Groups',
    mldTitle: 'MLD-Proxy Groups',
    groupAddress: 'Group Address',
    lastReporter: 'Last Reporter',
    upTime: 'Up Time',
    memberState: 'Member State',
    filterMode: 'Filter Mode',
    sources: 'Sources',
    sourceAddress: 'Source Address',
    expiryTime: 'Expiry Time',
  },
  mgmdProxyStats: {
    igmpTitle: 'IGMP-Proxy Statistics',
    mldTitle: 'MLD-Proxy Statistics',
    version: 'Ver',
    queryReceived: 'Query Rcvd',
    reportReceived: 'Report Rcvd',
    reportSent: 'Report Sent',
    leaveReceived: 'Leave Rcvd',
    leaveSent: 'Leave Sent',
    igmpClearTips: 'Are you sure to clear IGMP-Proxy Statistics?',
    mldClearTips: 'Are you sure to clear MLD-Proxy Statistics?',
  },
  ipv6Routing:{
    title: 'IPv6 Routing',
    ipv6BriefTitle: 'IPv6 Brief',
    unicastRoutingMode: 'IPv6 Unicast Routing Mode',
    hopLimit: 'IPv6 Hop Limit',
    maxRoutes: 'Maximum Routes',
    dataRate: 'IPv6 Unresolved Data Rate Limit',
    neighborsRenew: 'IPv6 Neighbors Dynamic Renew',
    local: 'Local',
    Static: 'Static',
    ospfIntra: 'OSPF Intra',
    ospfInter: 'OSPF Inter',
    ospfExternal: 'OSPF External',
    bgpExternal: 'BGP External',
    bgpInternal: 'BGP Internal',
    bgpLocal: 'BGP Local',
    subtitle: 'IPv6 Route Preferences',
    rateLimitInterval: 'ICMPv6 Rate Limit Error Interval',
    rateLimitBurstSize: 'ICMPv6 Rate Limit Burst Size'
  },
  ipv6Interface:{
    ipv6InterfaceTitle: 'IPv6 Interfaces',
    routingMode: 'Routing Mode',
    enableMode: 'IPv6 Enable Mode',
    adminMode: 'Administrative Mode',
    operationalMode: 'IPv6 Operational Mode',
    bandwidth: 'Bandwidth',
    mtuSize: 'Interface Maximum Transmit Unit',
    detectionOfNumber: 'Router Duplicate Address Detection Transmits',
    autoConfigMode: 'Address Autoconfigure Mode',
    dhcpMode: 'Address DHCP Mode',
    hopLimit: 'IPv6 Hop Limit Unspecified',
    advertisementNSInterval: 'Router Advertisement NS Interval',
    advertisementMtu: 'Router Advertisement Mtu',
    advertisementLifetime: 'Router Advertisement Lifetime',
    advertisementReachableTime: 'Router Advertisement Reachable Time',
    advertisementMaxInterval: 'Router Advertisement Interval',
    advertisementMinInterval: 'Router Min Advertisement Interval',
    advertisementManagedFlag: 'Router Advertisement Managed Config Flag',
    advertisementOtherFlag: 'Router Advertisement Other Config Flag',
    advertisementPreference: 'Router Advertisement Router Preference',
    advertisementSuppressFlag: 'Router Advertisement Suppress Flag',
    destinationUnreach: "IPv6 Destination Unreachables",
    icmpV6RedirMode: "ICMPv6 Redirects",
    preferredLifetime: 'Preferred Lifetime',
    validLifetime: 'Valid Lifetime',
    onlinkFlag: 'Onlink Flag',
    autonomousFlag: 'Autonomous Flag',
    high: 'High',
    medium: 'Medium',
    low: 'Low',
    createEntry: "Create IPv6 Address",
    kbps: 'kbps',
    milliseconds: 'milliseconds',
    bytes: 'bytes',
    ipv6Addr: 'IPv6 Address/Prefix Length',
    mtuHint: 'The applicable range is 1280 bytes to the <Interface MTU value-18>',
  },
  ipv6DhcpInterface:{
    ipv6DhcpInterfaceTitle: 'IPv6 DHCP Interfaces',
    leasedAddr: "Leased Address",
    client: 'Client',
    active: 'Active',
    ipv6DhcpInterface: 'IPv6 DHCP Interface'
  },
  ipv6Raguard:{
    ipv6RaguardTitle: 'IPv6 RA Guard',
    createIpv6RaGuardEntry: 'Configure the IPv6 RA Guard Host Mode',
    ipv6RaguardMode: 'IPv6 RA Guard Mode',
    role: 'host',
  },
  ipv6Neighbors:{
    ipv6NeighborsTitle: 'IPv6 Neighbors',
    neighborState: 'Neighbor State',
    lastUpdated: 'Age',
    createIpv6NeighborsEntry: 'Create IPv6 Neighbors',
  },
  ipv6EcmpGroups:{
    ipv6EcmpGroupsTitle: 'IPv6 ECMP Groups',
    groupNum: 'Group Number',
    nextHops: 'Next Hops',
    usedRoute: 'The Number of Routes',
    hopContents: 'Hops Contents',
  },
  ipv6RouteSummary:{
    ipv6RouteSummaryTitle: 'IPv6 Route Summary',
    connectedRoutes: 'Connected Routes',
    staticRoutes: 'Static Routes',
    kernalRoutes: 'Kernal Routes',
    ripRoutes: 'RIP Routes',
    bgpRoutes: 'BGP Routes',
    ospfRoutes: 'OSPF Routes',
    ospfIntraArea: 'Intra Area Routes',
    ospfInterArea: 'Inter Area Routes',
    ospfType1: 'External Type-1 Routes',
    ospfType2: 'External Type-2 Routes',
    rejectRoutes: 'Reject Routes',
    netPrototypeRoutes: 'Net Prototype Routes',
    numberOfPrefixes: 'Number of Prefixes',
    totalRoutes: 'Total Routes',
    bestRoutes: 'Best Routes',
    bestRoutesHigh: 'Best Routes (High)',
    alternateRoutes: 'Alternate Routes',
    routeAdds: 'Route Adds',
    routeModifies: 'Route Modifies',
    routeDeletes: 'Route Deletes',
    unresolvedRoute: 'Unresolved Route Adds',
    invalidRoute: 'Invalid Route Adds',
    failedRoute: 'Failed Route Adds',
    kernalFailedRoute: 'Kernal Failed Route Adds',
    hardwareFailedRoute: 'Hardware Failed Route Adds',
    reservedLocals: 'Reserved Locals',
    uniqueNextHops: 'Unique Next Hops',
    uniqueNextHopsHigh: 'Unique Next Hops (High)',
    nextHopGroups: 'Next Hop Groups',
    nextHopGroupsHigh: 'Next Hop Groups (High)',
    ecmpGroups: 'ECMP Groups ',
    ecmpGroupsHigh: 'ECMP Groups (High)',
    ecmpRoutes: 'ECMP Routes',
    truncatedECMP: 'Truncated ECMP Routes',
    ecmpRetries: 'ECMP Retries',
    routesWith: 'Routes with ',
    nextHop: ' Next Hop',
    nextHops: ' Next Hops',
    clearRouteSummaryTitle: 'Claer IPv6 Route Summary',
    clearRouteSummaryAlert: 'Are you sure to clear IPv6 Route Summary?'
  },
  ipv6SnoopingCounters:{
    ipv6SnoopingCountersTitle: 'IPv6 Snooping Counters',
    ra: 'RA(Router Advertisement - ICMP type 134)',
    redir: 'REDIR(Router Redirect - ICMP type 137)',
    clearSnoopingCountersTitle: 'Claer IPv6 Snooping Counters',
    clearSnoopingCountersAlert: 'Are you sure to clear IPv6 Snooping Counters?'
  },
  ipv6Vlan:{
    ipv6VlanTitle: 'IPv6 VLAN',
    ipv6AddrPrefix:'IPv6 Address/Prefix Length',
    macAddr: 'MAC Address Used by Routing VLANs',
  },
  ipv6Route:{
    ipv6RouteTitle: 'IPv6 Route',
    timeStamp: "Route-Timestamp",
    tag: "Tag",
    preference: 'Preference/Metric',
    createIpv6RouteEntry: 'Create IPv6 Route',
    entries:'The Entries of the IPv6 Routing Table',
    hwfailure:'hw-failure',
    ipv6AddressPlaceholder: 'Enter the IPv6 Prefix/Prefix Length',
    ipv6LLAPlaceholder: 'Enter the IPv6 Link-Local Address',
    filterDataTitle: 'Display Data',
    noFilterHint: 'Display IPv6 routing table information.',
    noFilter: 'No filter option',
    filterIpv6Address: 'Filter by IPv6 Address',
    filterIpv6Prefix: 'Filter by IPv6 prefix and prefix length',
    filterInterface: 'Filter by interface',
  },
  ipv6Traffic:{
    title: 'IPv6 Traffic',
    ipv6Stats: 'IPv6 Statistics',
    totalRecv: 'Total Datagrams Received',
    recvDelivered: 'Received Datagrams Locally Delivered',
    recvHeaderErrors: 'Received Datagrams Discarded Due to Header Errors',
    recvMTUerror: 'Received Datagrams Discarded Due to MTU',
    recvNoRoute: 'Received Datagrams Discarded Due to No Route',
    recvUnknown: 'Received Datagrams With Unknown Protocol',
    recvInvalidAddr: 'Received Datagrams Discarded Due to Invalid Address',
    recvTruncatedData: 'Received Datagrams Discarded Due to Truncated Data',
    recvOthererror: 'Received Datagrams Discarded Other',
    recvReassembly: 'Received Datagrams Reassembly Required',
    successfullyReassembled: 'Datagrams Successfully Reassembled',
    failedReassemble: 'Datagrams Failed to Reassemble',
    datagramsForwarded: 'Datagrams Forwarded',
    datagramsTrans: 'Datagrams Locally Transmitted',
    datagramsTransFailed: 'Datagrams Transmit Failed',
    fragmentsCreated: 'Fragments Created',
    successfullyFragmented: 'Datagrams Successfully Fragmented',
    failedFragment: 'Datagrams Failed to Fragment',
    multicastRecv: 'Multicast Datagrams Received',
    multicastTrans: 'Multicast Datagrams Transmitted',
    icmpv6Stats: 'ICMPv6 Statistics',
    totalICMPv6Recv: 'Total ICMPv6 Messages Received',
    messageserrors: 'ICMPv6 Messages with Errors',
    destinationUnreachable: 'ICMPv6 Destination Unreachable Messages',
    prohibitedAdministratively: 'ICMPv6 Messages Prohibited Administratively',
    timeExceeded: 'ICMPv6 Time Exceeded Messages',
    parameterProblem: 'ICMPv6 Parameter Problem Messages',
    bigPackets: 'ICMPv6 Messages with too Big Packets',
    echoRequest: 'ICMPv6 Echo Request Messages Received',
    echoReply: 'ICMPv6 Echo Reply Messages Received',
    routerSolicit: 'ICMPv6 Router Solicit Messages Received',
    routerAdvertisement: 'ICMPv6 Router Advertisement Messages Received',
    neighborSolicit: 'ICMPv6 Neighbor Solicit Messages Received',
    neighborAdvertisement: 'ICMPv6 Neighbor Advertisement Messages Received',
    redirectMessages: 'ICMPv6 Redirect Messages Received',
    groupQuery: 'ICMPv6 Group Membership Query Messages Received',
    groupResponse: 'ICMPv6 Group Membership Response Messages Received',
    groupReduction: 'ICMPv6 Group Membership Reduction Messages Received',
    totalICMPv6Transmitted: 'Total ICMPv6 Messages Transmitted',
    ICMPv6Error: 'ICMPv6 Messages Not Transmitted Due to Error',
    ICMPv6DestinationUnreachable: 'ICMPv6 Destination Unreachable Messages Transmitted',
    ICMPv6ProhibitedAdministratively: 'ICMPv6 Messages Prohibited Administratively Transmitted',
    ICMPv6TimeExceeded: 'ICMPv6 Time Exceeded Messages Transmitted',
    ICMPv6ParameterProblem: 'ICMPv6 Parameter Problem Messages Transmitted',
    ICMPv6BigPacket: 'ICMPv6 Packet too Big Messages Transmitted',
    ICMPv6EchoRequest: 'ICMPv6 Echo Request Messages Transmitted',
    ICMPv6EchoReply: 'ICMPv6 Echo Reply Messages Transmitted',
    ICMPv6RouterSolicit: 'ICMPv6 Router Solicit Messages Transmitted',
    ICMPv6RouterAdvertisement: 'ICMPv6 Router Advertisement Messages Transmitted',
    ICMPv6NeighborSolicit: 'ICMPv6 Neighbor Solicit Messages Transmitted',
    ICMPv6NeighborAdvertisement: 'ICMPv6 Neighbor Advertisement Messages Transmitted',
    ICMPv6Redirect: 'ICMPv6 Redirect Messages Transmitted',
    ICMPv6GroupQuery: 'ICMPv6 Group Membership Query Messages Transmitted',
    ICMPv6GroupResponse: 'ICMPv6 Group Membership Response Messages Transmitted',
    ICMPv6GroupReduction: 'ICMPv6 Group Membership Reduction Messages Transmitted',
    ICMPv6DuplicateAddr: 'ICMPv6 Duplicate Address Detects',
    clearipv6TrafficTitle: 'Claer IPv6 and ICMPv6 Statistics',
    clearipv6TrafficAlert: 'Are you sure to clear IPv6 and ICMPv6 Statistics?'
  },
  ospf: {
    title: 'OSPF',
    group: 'group',
    config: 'Config',
    stats: 'Stats',
    cost: 'Cost',
    globalConfig: 'OSPF Global Configuration',
    clearConfig: 'Clear OSPF Configuration',
    clearConfigAlert: 'Are you sure to clear OSPF configuration?',
    vrfName: 'VRF Name',
    routerId: 'Router ID',
    intf: 'OSPF Interface',
    nolimit: 'No Limit',
    links: 'Links',
    neighborIntf: 'Neighbor Interface',
    intfDetial: 'OSPF Interface Detail',
    adminMode: 'OSPF Admin Mode',
    rfc1583: 'RFC 1583 Compatibility',
    extLsdbLimit: 'External LSDB Limit',
    exitOverflow: 'Exit Overflow Interval',
    spfDelay: 'SPF Delay Time',
    spfHold: 'SPF Hold Time',
    floodPacing: 'Flood Pacing Interval',
    lsaRefresh: 'LSA Refresh Group Pacing Time',
    opaqueCap: 'Opaque Capability',
    autoCost: 'AutoCost Reference Bandwith',
    defPassive: 'Default Passive Setting',
    maxPaths: 'Maximum Paths',
    maxRoutes: 'Maximum Routes',
    defRouteAdvert: 'Default Route Advertise',
    redistConfig: 'Redistribution Config',
    activeAreaNum: 'Number of Active Areas',
    abrStatus: 'ABR Status',
    asbrStatus: 'ASBR Status',
    stubStatus: 'Stub Router Status',
    stubReason: 'Stub Router Reason',
    stubStartup: 'Stub Router Startup Time Remaining',
    stubDuration: 'Stub Router Duration',
    extLsdbOverflow: 'External LSDB Overflow',
    extLsaCount: 'External LSA Count',
    extLsaChecksum: 'External LSA Checksum',
    asCount: 'AS_OPAQUE LSA Count',
    asChecksum: 'AS_OPAQUE LSA Checksum',
    lsaOrigin: 'New LSAs Originated',
    lsaReceive: 'LSAs Received',
    maxLsa: 'Maximum Number of LSAs',
    lsaMark: 'LSA High Water Mark',
    lsaLength: 'AS Scope LSA Flood List Length',
    retransmitList: 'Retransmit List Entries',
    maxRetransmit: 'Maximum Number of Retransmit Entries',
    retransmitMark: 'Retransmit Entries High Water Mark',
    logAdjChanges: 'Log Adjacency Changes',
    detailLog: 'Log All Neighbor State Changes',
    loopbackId: 'Loopback ID',
    areaId:'Area ID',
    priority: 'Router Priority',
    metric: 'Metric',
    metricType: 'Metric Type',
    metricCost: 'Metric Cost',
    distance: 'Distance',
    hello: 'Hello Interval',
    helloInterval: 'Hello Interval (secs)',
    dead: 'Dead Interval',
    deadInterval: 'Dead Interval (secs)',
    retransmit: 'Retransmit Interval',
    retransmitInterval: 'Retransmit Interval (secs)',
    delay: 'Transmit Delay',
    transmitDelay: 'Transmit Delay (secs)',
    ack: 'LSA Ack Interval',
    secondary: 'Secondary IP Address(es)',
    networkType: 'OSPF Network Type',
    bandwidth: 'Bandwidth (kbps)',
    authType: 'Authentication Type',
    authKey: 'Authentication Key',
    authKeyId: 'Authentication Key ID',
    simple: 'Simple',
    encrypt: 'Encrypt',
    md5: 'MD5',
    databaseFilterMode: 'Database Filter Mode',
    p2p: 'Point-to-Point',
    p2mp: 'Point-to-MultiPoint',
    virtual: 'Virtual',
    nbma: 'NBMA',
    prefixSup: 'Prefix Suppression',
    suppress: 'Suppressed',
    notSuppress: 'Not Suppressed',
    notConfig: 'Not Configured',
    passive: 'Passive Status',
    passiveIntf: 'Passive Interface',
    nonpassiveIntf: 'Non-passive interface',
    mtuIgnore: 'OSPF MTU-ignore',
    flood: 'Flood Blocking',
    state: 'Interface State',
    loopback: 'Loopback',
    designate: 'Designated Router',
    otherDesignate: 'Other Designated Router',
    backupDesignate: 'Backup Designated Router',
    downState: 'down',
    loopbackState: 'loopback',
    waitingState: 'waiting',
    p2pState: 'point-to-point',
    designateState: 'designated-router',
    otherDesignateState: 'other-designated-router',
    backupDesignateState: 'backup-designated-router',
    eventsNum: 'Number of Link Events',
    lsas: 'Local Link LSAs',
    checksum: 'Local Link LSA Checksum',
    intfStats: 'OSPF Interface Stats',
    statsDetail: 'OSPF Interface Stats Detail',
    unnumber: 'Unnumbered',
    areaBorder: 'Area Border Router Count',
    asBorder: 'AS Border Router Count',
    ospfEvents: 'OSPF Interface Events',
    virtualEvents: 'Virtual Events',
    neighborEvents: 'Neighbor Events',
    sentPackets: 'Sent Packets',
    rcvdPackets: 'Received Packets',
    discards: 'Discards',
    badVersion: 'Bad Version',
    badNetwork: 'Source Not On Local Subnet',
    badVirtLink: 'Virtual Link Not Found',
    areaMismatch: 'Area Mismatch',
    badDestAddr: 'Invalid Destination Address',
    badAuthType: 'Wrong Authentication Type',
    authFailure: 'Authentication Failure',
    badNeighbor: 'No Neighbor at Source Address',
    badPackettype: 'Invalid OSPF Packet Type',
    hellosIgnored: 'Hellos Ignored',
    ospfPktDetail: 'OSPF Packets Detail',
    txHellos: 'Hello Sent',
    rxHellos: 'Hello Received',
    txDbDescr: 'Database Description Sent',
    rxDbDescr: 'Database Description Received',
    txLsReq: 'LS Request Sent',
    rxLsReq: 'LS Request Received',
    txLsUpdate: 'LS Update Sent',
    rxLsUpdate: 'LS Update Received',
    txLsAck: 'LS Acknowledgment Sent',
    rxLsAck: 'LS Acknowledgment Received',
    areaTitle: 'OSPF Area',
    abrTitle: 'OSPF Area Border Router',
    asbrTitle: 'OSPF AS Boundary Router',
    routeType: 'Route Type',
    nextHop: 'Next Hop',
    nextHopIntf: 'Next Hop Interface',
    intra: 'Intra',
    inter: 'Inter',
    lsaGroupTitle: 'OSPF LSA Group',
    totalLsas: 'Total Self-originated LSAs',
    avgLsas: 'Average LSAs Per Group',
    groupLimit: 'Pacing Group Limit',
    lsaGroupList: 'Number of Self-originated LSAs Within Each LSA Group',
    startAge: 'Group Start Age',
    endAge: 'Group End Age',
    count: 'Count',
    neighborsTitle: 'OSPF Neighbors',
    neighborIp: 'Neighbor IP Address',
    intfIndex: 'Interface Index',
    options: 'Options',
    lsOptions: 'LS Options',
    deadTime: 'Dead Time',
    deadTimeSec: 'Dead Timer Due in (secs)',
    upTime: 'Up Time',
    events: 'Events',
    lsaRetransmit: 'LSAs Retransmitted',
    retransmitLsa: 'Retransmitted LSAs',
    retransmitLen: 'Retransmission Queue Length',
    clearNeighbor: 'Clear Neighbor',
    clearType: 'Clear Type',
    externalRoute: 'External Routing',
    spfRuns: 'SPF Runs',
    borderCount: 'Area Border Router Count',
    lsaCount: 'Area LSA Count',
    ospfIntfEvents: 'OSPF Interface Events',
    lsaChecksum: 'Area LSA Checksum',
    floodList: 'Flood List Length',
    sumLsa: 'Import Summary LSAs',
    stubMetric: 'Stub Area Metric Value',
    importExtLsas: 'Import External LSAs',
    importNssas: 'Import NSSAs',
    importLsas: 'Import No LSAs',
    unknown: 'Unknown',
    redistribute: 'Redistribute into NSSA',
    defaultOriginate: 'Default Information Originate',
    defaultMetric: 'Default Metric',
    defaultMetricType: 'Default Metric Type',
    translatorRole: 'Translator Role',
    translatorInterval: 'Translator Stability Interval',
    translatorState: 'Translator State',
    compare: 'Comparable',
    nonCompare: 'Non-Comparable',
    areaType: 'Area Type',
    nssa: 'NSSA',
    standard: 'Standard',
    nssaSpecInfo: 'OSPF NSSA Specific Information',
    elected: 'Elected',
    stub: 'Stub',
    stubSum: 'Stub Summary',
    always: 'Always',
    startup: 'Startup',
    candidate: 'Candidate',
    areaRanges: 'OSPF Area Ranges',
    prefix: 'Prefix',
    subnetMask: 'Subnet Mask',
    linkType: 'Link Type',
    action: 'Action',
    active: 'Active',
    ospfVirtualLink: 'OSPF Virtual Link',
    areaList: 'Area List',
    summary: 'Summary',
    external: 'External',
    advertise: 'Advertise',
    suppress: 'Suppress',
    createRange: 'Create Area Range',
    areaIdHolder: 'Integer or IPv4 dot notation',
    costHolder: 'Enter Integer',
    neighborId: 'Neighbor Router ID',
    neighborState: 'Neighbor State',
    createLink: 'Create Virtual Link',
    statsTitle: 'OSPF Statistics',
    deltaTime: 'Delta Time',
    summ: 'Summ',
    spfTotal: 'SPF Total',
    ribUpdate: 'RIB Update',
    reason: 'Reason',
    reasonR: 'new router LSA',
    reasonN: 'new network LSA',
    reasonSN: 'new network summary LSA',
    reasonSA: 'new ASBR summary LSA',
    reasonX: 'new external LSA',
    stubRouterTitle: 'OSPF Stub Router',
    tos: 'Type of Service',
    tosNormal: 'Normal',
    stubConfig: 'Stub Router Configuration',
    stubTime: 'Stub Router Startup Time',
    lsaMetric: 'Summary LSA Metric Override',
    clearStubTitle: 'Exit Stub Router Mode',
    clearStubAlert: 'Are you sure to force OSPF to exit stub router mode for the specified router?',
    trafficTitle: 'OSPF Traffic',
    trapFlagTitle: 'OSPF Trap Flag',
    trapError: 'Errors',
    authenticationFailureFlag: 'Authentication Failure',
    badPacketFlag: 'Bad Packet',
    configErrorFlag: 'Config Error',
    virtAuthenticationFailureFlag: 'Virt Authentication Failure',
    virtBadPacketFlag: 'Virt Bad Packet',
    virtConfigErrorFlag: 'Virt Config Error',
    trapLsa: 'LSA',
    lsaMaxageFlag: 'LSA Maxage',
    lsaOriginateFlag: 'LSA Originate',
    trapOverflow: 'Overflow',
    lsdbOverflowFlag: 'LSDB Overflow',
    lsdbApproachingOverflowFlag: 'LSDB Approaching Overflow',
    trapRetransmit: 'Retransmit',
    packetsFlag: 'Packets',
    virtPacketsFlag: 'Virt Packets',
    trapStateChange: 'State Change',
    ifStateChangeFlag: 'If State Change',
    neighborStateChangeFlag: 'Neighbor State Change',
    virtIfStateChangeFlag: 'Virt If State Change',
    virtNeighborStateChangeFlag: 'Virt Neighbor State Change',
    pktStats: 'OSPFv2 Packet Statistics',
    timeClear: 'Time Since Counters Cleared',
    totalRx: 'Total Received',
    totalTx: 'Total Sent',
    lsUpdateMaxRxRate: 'LS Update Max Receive Rate',
    lsUpdateMaxTxRate: 'LS Update Max Send Rate',
    lsaRxNum: 'Number of LSAs Received',
    t1Lsa: 'T1 (Router)',
    t2Lsa: 'T2 (Network)',
    t3Lsa: 'T3 (Net Summary)',
    t4Lsa: 'T4 (ASBR Summary)',
    t5Lsa: 'T5 (External)',
    t7Lsa: 'T7 (NSSA External)',
    t9Lsa: 'T9 (Link Opaque)',
    t10Lsa: 'T10 (Area Opaque)',
    t11Lsa: 'T11 (AS Opaque)',
    trafficQueue: 'OSPFv2 Queue Statistics',
    totalLsaNum: 'Total Number of LSAs Received',
    seconds: 'seconds',
    queueName: 'Queue Name',
    queueCurrent: 'Current',
    queueMax: 'Max',
    queueDrops: 'Drops',
    queueLimit: 'Limit',
    clearTraffic: 'Clear Traffic Counters',
    clearTrafficAlert: 'Are you sure to clear the counters?',
    lsdbTitle: 'OSPF Link State Database',
    routerLsa: 'Router LSA',
    networkLsa: 'Network LSA',
    sumNetworkLsa: 'Summary Network LSA',
    sumAsbrLsa: 'Summary ASBR LSA',
    type7ExtLsa: 'Type-7 Exernal LSA',
    selfType7Lsa: 'Self-Originated Type-7 LSA',
    opaqueLinkLsa: 'Opaque Link LSA',
    opaqueAreaLsa: 'Opaque Area LSA',
    opaqueAsLsa: 'Opaque AS LSA',
    routerLsaTotal: 'Total Router LSA',
    networkLsaTotal: 'Total Network LSA',
    sumNetworkLsaTotal: 'Total Summary Network LSA',
    sumAsbrLsaTotal: 'Total Summary ASBR LSA',
    type7ExtLsaTotal: 'Total Type-7 Exernal LSA',
    opaqueLinkLsaTotal: 'Total Opaque Link LSA',
    Type5ExtLsaTotal: 'Total Type-5 Exernal LSA',
    selfType5ExtLsaTotal: 'Total Self-Originated Type-5 Exernal LSA',
    opaqueAreaLsaTotal: 'Total Opaque Area LSA',
    opaqueAsLsaTotal: 'Total Opaque AS LSA',
    lsaTotal: 'Total LSA',
    dbSum: 'Router Database Summary',
    lsdb: 'Link State Database',
    lsdbOpaqueTitle: 'OSPF Opaque Link State Database',
    lsdbOpaque: 'Opaque Link State Database',
    linkId: 'Link ID',
    advRouterId: 'Advertising Router ID',
    age: 'Age',
    sequence: 'Sequence Number',
    routerOpts: 'Router Options',
    networkMask: 'Network Mask',
    attachedRouters: 'Attached Routers',
    forwardingAddr: 'Forwarding Address',
    externalType: 'External Type',
    routeTag: 'External Route Tag',
    lsaType: 'LSA Type',
    asExtLsa: 'AS External LSA',
    nssaLsa: 'NSSA LSA',
    opaqueId: 'Opaque ID',
    opaqueType: 'Opaque LSA Type',
    opaqueScope: 'Opaque LSA Scope',
    lsaHeaderLength: 'LSA Header Length',
    networkArea: 'OSPF Network Area',
    wildcardMask: 'Wildcard Mask',
    createNetworkArea: 'Create Network Area',
    policiesTitle: 'OSPF Policies',
    source: 'Source',
    tag: 'Tag',
    subnets: 'Subnets',
    distList: 'Distribute List',
    createPolicy: 'Create Policy',
    connected: 'Connected',
    bgp: 'BGP',
    rip: 'RIP',
    clearPolicies: 'Clear Policies',
    clearPoliciesAlert: 'Are you sure to clear all policies?',
    restart: 'Restart OSPF',
    restartAlert: 'Are you sure to restart OSPF?',
    ospfNotEnabled: 'OSPF is not enabled globally.',
    mustInit: 'OSPF must first be initialized for the switch. A router ID needs to be configured.',
    routingNotEnabled: 'OSPF is not initialized. Please check if routing is enabled.',
    noRange: 'No ranges are configured on this area.',
    areaHint: 'Enter area Id to display OSPF area range information.',
    vrfHint: 'Enter VRF name to display OSPF area range information.',
    linkSubnetPrefix: '(Link ID) Subnet Prefix',
    linkSubnetMask: '(Link Data) Subnet Mask',
    designatedRtr: '(Link ID) IP Address of Designated Router',
    linkNeighborId: '(Link ID) Neighbor Router ID',
    linkRouterIntfAddr: '(Link Data) Router IP Address',
    linkConnectedTo: 'Link connected to',
    numOfLinks: 'Number of Links',
    pointToPoint: 'another router (point-to-point)',
    stubNetwork: 'stub network',
    transit: 'transit network',
    virtualLink: 'another router (virtual link)',
    networkSumLsa: 'Network Summary LSA',
    limitHint: 'If the value is -1, then there is no limit.',
  },
  ping: {
    title: 'Ping',
    srcInterface: 'Source Interface',
    interval: 'Interval (seconds)',
    count: 'Count',
    size: 'Size',
    pktReceive: 'Received Packets',
    retTime: 'Response Time',
    result: 'Result',
    vrf: 'Virtual Router',
  },
  traceroute: {
    title: 'Traceroute',
    initTtl: 'Initial TTL',
    maxTtl: 'Maximum TTL',
    maxFail: 'Max Failures Allowed',
  },
  ptp: {
    ptp: 'Precision Time Protocol',
    ptpInterface: 'PTP Interface',
  },
  rip:{
    title: 'RIP',
    config: 'RIP Configuration',
    autoSummary: 'Auto-Summary',
    defaultMetric: 'Default Metric',
    maxPath: 'Maximum Paths',
    updateTime: 'Timers Basic Update Value (seconds)',
    routeAgeTime: 'Timers Basic Routeage Value (seconds)',
    garbageTime: 'Timers Basic Garbage Value (seconds)',
    distance: 'Distance',
    interfaces: 'RIP Interface',
    sendVersion: 'Send Version',
    receiveVersion: 'Receive Version',
    authMode: 'Authentication Mode',
    keyChain: 'Key-Chain',
    splitHorizon: 'Split Horizon Status',
    defaultRouteOrignation: 'Default Route Originate',
    ripPassive: 'RIP Passive',
    passive: 'Passive',
    passiveMode: 'Passive Mode',
    text: 'Text',
    md5: 'MD5',
    simple: 'Simple',
    poisonReverse: 'Poison Reverse',
    summaryaddresses: 'RIP Summary-address',
    sumAddrDelete: 'Delete RIP Summary-address',
    sumAddrCreate: 'Create RIP Summary-address',
    sumAddrCreateHint: 'If you want to set the rip summary-address please set a routing interface first.',
    neighbors: 'RIP Neighbor',
    neighbor: 'Neighbor',
    neighborDelete: 'Delete RIP Neighbor',
    neighborCreate: 'Add RIP Neighbor',
    redistributions: 'RIP Redistribution',
    source: 'Source Protocol',
    bgp: 'BGP',
    connected: 'Connected',
    ospf: 'OSPF',
    redistributionCreate: 'Create RIP Redistribution',
    ngRedistributionCreate: 'Create RIPng Redistribution',
    redistributionDelete: 'Delete RIP Redistribution',
    ngRedistributionDelete: 'Delete RIPng Redistribution',
    metricPlaceholder: 'Enter the metric',
    ripStats: 'RIP Statistics',
    ripGlobalStats: 'RIP Global Statistics',
    ripIntfStats: 'RIP Interface Statistics',
    routeChanges: 'Total number of route changes',
    queriesResponded: 'Total number of queries responded',
    droppedPackets: 'Total number of dropped packets',
    periodicUpdates: 'Periodic Updates Sent',
    triggeredUpdates: 'Triggered Updates Sent',
    badRoutes: 'BadRoutes Received',
    badPackets: 'BadPackets Received',
    noInterfaceMsg: 'None of the routing interfaces are enabled for RIP.',
    database: 'RIP Database',
    nextHop: 'Next Hop',
    nexthopSize: 'Next Hop Size',
    noNextHopMsg: 'There is no next hop for this IP Address.',
    ngTitle: 'RIPng',
    ngInterfaces: 'RIPng Interface',
    noNgInterfaceMsg: 'None of the routing interfaces are enabled for RIPng.',
    ngRedistributions: 'RIPng Redistribution',
    ngFilter: 'RIPng Filter',
    filterAddress: 'Filter Address',
    filterCreate: 'Create RIPng Filter',
    filterDelete: 'Delete RIPng Filter',
    ipv6Prefix: 'IPv6 Prefix',
    filterType: 'Filter Type',
    in: 'IN',
    out: 'OUT',
    ngStats: 'RIPng Stats',
    inPackets: 'Received RIPng Packets',
    inRequests: 'Total Received RIPng Requests',
    inResponses: 'Total Obtained RIPng Responses',
    unknownCmds: 'Received Unknown Commands',
    otherVersions: 'Received Packets of Other Version',
    discards: 'Discarded RIPng Packets',
    outPackets: 'Sent RIPng Packets',
    outRequests: 'Total Sent RIPng Requests',
    outResponses: 'Total Sent RIPng Responses',
    ngDatabase: 'RIPng Database',
    expiredIn: 'expires in',
  },
  pbb: {
    treeTitle: 'PBB',
    title: 'Provider Backbone Bridging',
    backboneSrcMac: 'Backbone Source MAC Address',
    trafficEngi: 'Traffic-Engineering',
    defaultHint: 'If the Backbone Source MAC is empty, it will set to default value.',
  },
  pbbIDomains:{
    title: 'PBB I-Domains',
    isId: 'Service Identifier',
    name: 'I-Domain Name',
    description: 'Description',
    interfaceSize: '',
    vlanTag: 'Tagged Type and VLAN ID',
    bvid: 'Bridged to B-Domain',
    floodingMac: 'Flooding B-MAC',
    mappingEntries: 'Number of Mapping Table Entries',
    interfacesTitle: 'PBB I-Domain Interfaces',
    createPbbIDomainsEntry: 'Create PBB I-Domain',
    createPbbIDomainsIntfEntry: 'Create PBB I-Domain interface',
    matchType: 'VLAN Match Type',
    nullIDomainHint: 'If you want to create entry, please Create PBB I-Domain first.',
  },
  pbbIDomainsMapping:{
    mappingTable: 'Mapping Table',
    cmac: 'C-MAC Dst. Address',
    bmac: 'B-MAC Dst. Address',
    createEntry: 'Create PBB I-Domain Mapping Table',
  },
  pbbBDomains:{
    title: 'PBB B-Domains',
    bvId: "Backbone VLAN ID",
    name: "B-Domain Name",
    iDomainSize: "The Number of Bridged from I-Domain",
    iDomains: "Bridged from I-Domain",
    bmacAddress: "Backbone Destination MAC Address",
    createPbbBDomainsEntry: 'Create PBB B-Domain',
    createPbbBDomainsIntfEntry: 'Create PBB B-Domain Interface',
    interfacesTitle: 'PBB B-Domain Interfaces',
    nullBDomainHint: 'If you want to create entry, please Create PBB B-Domain first.',
  },
  bgp: {
    title: 'BGP',
    bgpVrf: 'BGP VRF',
    mode: 'BGP Mode',
    config: 'BGP Configuration',
    stats: 'BGP Stats',
    vrfName: 'VRF Name',
    phase: 'Phase',
    updateGroup: 'Update Group',
    updGrp: 'Upd Grp',
    genId: 'Generation ID',
    genIdAbbreviation: 'GenId',
    reason: 'Reason',
    peer: 'Peer',
    duration: 'Duration',
    adds: 'Adds',
    modified: 'Mods',
    delete: 'Dels',
    resetBgpPeerTitle: 'Reset BGP Peer',
    resetBgpPeerAlert: 'Are you sure to reset BGP all peers?',
    resetOneBgpPeerTitle: 'Reset Specific BGP Peer',
    resetOneBgpPeerAlert: 'Are you sure to reset this BGP peer?',
    clearBgpCounterAlert: 'Are you sure to clear BGP counters?',
    noStatsMsg: 'No stats information',
    updategroupTitle: 'BGP Update Group',
    noUpdateGroupMsg: 'No updated groups',
    peerType: 'Peer Type',
    advInterval: 'Minimum Advertisement Interval',
    sendCommunity: 'Send Community',
    sendExtendedCommunity: 'Send Extended Community',
    removePrivateAsn: 'Remove Private ASNs',
    routeReflectorClient: 'Route Reflector Client',
    asPathList: 'Neighbor AS Path Access List Out',
    prefixList: 'Neighbor Prefix List Out',
    routeMap: 'Neighbor Route Map Out',
    membersAdded: 'Members Added',
    membersRemoved: 'Members Removed',
    updateVersion: 'Update Version',
    numberOfUpdateSent: 'Number of UPDATES Sent',
    lastUpdateAge: 'Time Since Last UPDATE',
    currentPrefixes: 'Current Prefixes',
    currentPaths: 'Current Paths',
    prefixesAdv: 'Prefixes Advertised',
    prefixesWithdrawn: 'Prefixes Withdrawn',
    updateSendFailures: 'UPDATE Send Failures',
    currentMembers: 'Current Members',
    version: 'Version',
    deltaTime: 'Delta T',
    updBuilt: 'UPD Built',
    updSent: 'UPD Sent',
    pathSent: 'Paths Sent',
    advPrefixs: 'Pfxs Adv',
    wdPrefixs: 'Pfxs Wd',
    updates: 'Updates',
    traffic: 'BGP Traffic',
    timeSinceCleared: 'Time Since Counters Cleared',
    seconds: 'Seconds',
    rxOpen: 'Received Open Messages',
    rxUpdate: 'Received Update Messages',
    rxNotification: 'Received Notification Messages',
    rxKeepalive: 'Received Keepalive Messages',
    rxRefresh: 'Received Refresh Messages',
    rxTotal: 'Total Received Messages',
    txOpen: 'Send Open Messages',
    txUpdate: 'Send Update Messages',
    txNotification: 'Send Notification Messages',
    txKeepalive: 'Send Keepalive Messages',
    txRefresh: 'Send Refresh Messages',
    txTotal: 'Total Send Messages',
    pps: 'pps',
    maxRxUpdate: 'Max Received Update Rate',
    maxTxUpdate: 'Max Send Update Rate',
    eventsCurrent: 'Current Events',
    eventsMax: 'Max Events',
    eventsDrops: 'Drops Events',
    eventsLimit: 'Limit Events',
    keepaliveTxCurrent: 'Current Keepalive Tx',
    keepaliveTxMax: 'Max Keepalive Tx',
    keepaliveTxDops: 'Drops Keepalive Tx',
    keepaliveTxLimit: 'Limit Keepalive Tx',
    decProcCurrent: 'Current Dec Proc',
    decProcMax: 'Max Dec Proc',
    decProcDrops: 'Drops Dec Proc',
    decProcLimit: 'Limit Dec Proc',
    rxDataCurrent: 'Current Rx Data',
    rxDataMax: 'Max Rx Data',
    rxDataDrops: 'Drops Rx Data',
    rxDataLimit: 'Limit Rx Data',
    rtoNotificationCurrent: 'Current RTO Notifications',
    rtoNotificationMax: 'Max RTO Notifications',
    rtoNotificationDrops: 'Drops RTO Notifications',
    rtoNotificationLimit: 'Limit RTO Notifications',
    mibQueriesCurrent: 'Current MIB Queries',
    mibQueriesMax: 'Max MIB Queries',
    mibQueriesDrops: 'Drops MIB Queries',
    mibQueriesLimit: 'Limit MIB Queries',
    summary: 'BGP Summary',
    rtrv4Mode: 'IPv4 Routing',
    rtrv6Mode: 'IPv6 Routing',
    operationMode: 'BGP Operation Mode',
    routerId: 'Router ID',
    bgpRouterId: 'BGP Router ID',
    asNum: 'Local AS Number',
    numNetwork: 'Number of Network Entries',
    numAsPath: 'Number of AS Path',
    dynamicNeighbor: 'Dynamic Neighbors Current/High/Limit',
    currentPeer: 'Dynamic Neighbors Current',
    highPeer: 'Dynamic Neighbor High',
    limitPeer: 'Dynamic Neighbor Limit',
    maxLimit: 'Max AS Path Lengths',
    remoteAddr: 'Neighbor',
    remoteAs: 'ASN',
    remoteAsFull: 'Remote AS',
    localAs: 'Local AS',
    msgRcvd: 'MsgRcvd',
    msgSend: 'MsgSent',
    state: 'Adjacency State',
    time: 'Up/Down Time',
    pfxRcvd: 'Pfx Rcvd',
    noSummaryMsg: 'No BGP neighbors',
    vpnv4: 'VPNv4',
    tableVersion: 'Table Version',
    maxPathIbgp: 'IBGP Maximum Path',
    maxPathEbgp: 'EBGP Maximum Path',
    compareMed: 'Compare MED',
    internalFailover: 'Fast Internal Failover',
    externalFailover: 'Fast External Failover',
    externalDistance: 'External Distance',
    internalDistance: 'Internal Distance',
    localDistance: 'Local Distance',
    gracefulRestart: 'Graceful Restart',
    gracefulHelper: 'Graceful Helper',
    gracefulRestartTime: 'Graceful Restart Time (secs)',
    gracefulStalepathTime: 'Graceful Stalepath Time (secs)',
    forwarding: 'Forwarding',
    addrPrefix: 'Prefix/Prefix Length',
    statusCodes: 'Status Code',
    locPref: 'Local Preference',
    locPrefAbbr: 'LocPref',
    path: 'AS Path',
    pathOnly: 'Path',
    origin: 'Origin',
    igpCost: 'IGP Cost',
    peerId: 'Peer ID',
    noAddrPrefixMsg: 'No BGP Entries',
    noNetworkMsg: 'No BGP Networks',
    deleteNetworkTitle: 'Delete BGP Network',
    deleteTitle: 'Delete BGP',
    deleteRedistributeTitle: 'Delete BGP Redistribution',
    rd: 'Route Distinguisher',
    rdValue: 'Route Distinguisher Value',
    importFrom: 'Imported from',
    noExtCommunity: '----',
    vpnv4Path: 'Paths:',
    bestPath: 'Best Path:',
    nonbestPath: 'Non-Best Paths:',
    noBestPathEntry: 'No Best Path',
    noNonBestPathEntry: 'No Non-Best Paths',
    updateGroups: 'Advertised to Update Groups',
    community: 'Communities',
    routerIdPlaceholder: 'Enter the Router ID',
    addrPrefixPlaceholder: 'Enter the Prefix',
    vrfNamePlaceholder: 'Enter the VRF name',
    prefix: 'Prefix',
    communityTitle: 'BGP Community',
    noCommunityMsg: 'No BGP Community',
    routeReflection: 'BGP Route Reflection',
    filterExactMatch: 'Filter routers that have an exact match',
    filterListName: 'Filter routes that belong to a specific community list',
    clusterId: 'Cluster ID',
    reflection: 'Client-to-client Reflection',
    clientPeer: 'Clients',
    nonClientPeer: 'Non-client Internal Peers',
    noClientPeerMsg: 'No BGP Client',
    noNonClientPeerMsg: 'No BGP Non-Client',
    templateTitle: 'BGP Template',
    templateName: 'Template Name',
    allowasIn: 'Allowas-in',
    retryInterval: 'Connect Retry Interval',
    connRetryInterval: 'Connection Retry Interval',
    ebgpMultihop: 'EBGP Multi-Hop',
    ebgpMultihopNoDesh: 'EBGP Multihop',
    rfc5549: 'RFC 5549 Support',
    shutdown: 'Shutdown',
    keepAlive: 'Keep Alive',
    keepAliveWithSec: 'Keep Alive (sec)',
    holdTime: 'Hold Time (sec)',
    configuredHoldTime: 'Configured Hold Time',
    configuredKeepTime: 'Configured Keep Alive Time',
    updateSrc: 'Update Source',
    af: 'AF',
    noTeplateFamilyMsg: 'No AF Settings',
    templateCreate: 'Create Template',
    templateDelete: 'Delete Template',
    templatePlaceholder: 'Enter the Template Name',
    adInterval: 'Advertisement Interval',
    adIntervalWithSec: 'Advertisement Interval (sec)',
    dafaultOrigin: 'Default Originate',
    dafaultPresent: 'Default Present',
    dafaultRoutemap: 'Default Route-Map',
    routemap: 'Route-Map',
    routeMapPlaceholder: 'Enter Route Map Name',
    filterlistIn: 'Filter-List In',
    filterlistOut: 'Filter-List Out',
    pfxLimit: 'Max Prefix Limit',
    pfxWarning: 'Max Prefix Warning',
    pfxThreshold: 'Max Prefix Threshold',
    nexthopSelf: 'Next-Hop-Self',
    pfxlistIn: 'Prefix-List In',
    pfxlistOut: 'Prefix-List Out',
    removeAsn: 'Remove Private AS',
    routemapIn: 'Route-Map In',
    routemapOut: 'Route-Map Out',
    routeReflector: 'Route Reflector',
    inUse: 'In Use',
    active: 'Active',
    activate: 'Activate',
    listenRangeTitle: 'BGP Listen Range',
    listenRangeDelete: 'Delete Listen Range',
    listenRangeIPv4Create: 'Create IPv4 Listen Range',
    listenRangeIPv6Create: 'Create IPv6 Listen Range',
    listenRangeVrfCreate: 'Create Vrf Listen Range',
    noTemplateMsg: 'No Listen Range Template',
    listenRange: 'Listen Range',
    inheritedTemplate: 'Inherited Template',
    templateMember: 'Members',
    listenRangePrefix: 'Listen Range Prefix',
    listenRangePlaceholder: 'Enter the Listen Range',
    listenRangePrefixLen: 'Listen Range Prefix Length',
    prefixLenPlaceholder: 'Enter the Prefix Length',
    templatePlaceholder: 'Enter the Template Name',
    aggregationTitle: 'BGP Aggregation',
    aggrDiffMeds: 'Allow Different MED',
    defaultLocPref: 'Default Local Preference',
    defaultMetric: 'Default Metric',
    defaultInfoOrig: 'Default Information Originate',
    always: 'Always',
    prefixLen: 'Prefix/Len',
    dstPrefix: 'Destination Prefix',
    asSet: 'AS Set',
    summaryOnly: 'Summary Only',
    dstPrefixPlaceholder: 'Enter the Destination Prefix',
    replace: 'Replace-as',
    peerTitle: 'BGP Peer',
    peerAdmin: 'Peer Admin Status',
    peerState: 'Peer State',
    peerType: 'Peer Type',
    listenRange: 'Listen Range',
    allowAs: 'Allow My ASN Occurences',
    localPort: 'Local Port',
    keepTime: 'Keep Alive Time (sec)',
    md5Pwd: 'MD5 Password',
    hopCount: 'TTL',
    ebgpMultiHop: 'EBGP Multi-hop Count',
    localIntfAddr: 'Local Interface Address',
    remotePort: 'Remote Port',
    capabilities: 'Neighbor Capabilities',
    ipv4Sup: 'IPv4 Unicast Support',
    vpnv4Sup: 'VPNv4 Unicast Support',
    ipv6Sup: 'IPv6 Unicast Support',
    communityNewFormat: 'BGP Community New-Format',
    gracefulRestartMode: 'BGP Graceful-Restart Mode',
    gracefulRestartTime: 'BGP Graceful-Restart Restart-Time',
    peerInactive: 'This peer is inactive.',
    negHoldTime: 'Negotiated Hold Time',
    negKeepaliveTime: 'Negotiated Keep Alive Time',
    lastError: 'Last Error',
    subError: 'Last SubError',
    lastErrorTime: 'Time Since Last Error',
    estTransitions: 'Established Transitions',
    flapCount: 'Flap Count',
    estTime: 'Established Time',
    lastUpdate: 'Time Since Last Update',
    updateGroupipv4: 'IPv4 Outbound Update Group',
    updateGroupipv6: 'IPv6 Outbound Update Group',
    tx: 'Msgs Sent:',
    rx: 'Msgs Rcvd:',
    open: 'Open',
    update: 'Update',
    Notif: 'Notification',
    refresh: 'Refresh',
    total: 'Total',
    updateQueneSize: 'Size',
    updateQueneHigh: 'High',
    updateQueneLimit: 'Limit',
    updateQueneDrops: 'Drops',
    updateQueueBytes: 'bytes',
    ipv4PrefixStats: 'IPv4 Prefix Statistics:',
    inipv4Prefix: 'Inbound Prefixes Advertised',
    inipv4Withdraws: 'Inbound Prefixes Withdrawn',
    inipv4PfxCurrent: 'Inbound Prefixes Current',
    inipv4PfxAccepted: 'Inbound Prefixes Accepted',
    inipv4PfxRejected: 'Inbound Prefixes Rejected',
    inipv4MaxNlriPerUpdate: 'Inbound Max NLRI per Update',
    inipv4MinNlriPerUpdate: 'Inbound Min NLRI per Update',
    outipv4Prefix: 'Outbound Prefixes Advertised',
    outipv4Withdraws: 'Outbound Prefixes Withdrawn',
    outipv4PfxCurrent: 'Outbound Prefixes Current',
    outipv4PfxAccepted: 'Outbound Prefixes Accepted',
    outipv4PfxRejected: 'Outbound Prefixes Rejected',
    outipv4MaxNlriPerUpdate: 'Outbound Max NLRI per Update',
    outipv4MinNlriPerUpdate: 'Outbound Min NLRI per Update',
    vpnv4PrefixStats: 'VPNv4 Prefix Statistics:',
    ipv6PrefixStats: 'IPv6 Prefix Statistics:',
    neighborPlaceholder: 'Enter the Neighbor\'s Address',
    start: 'START',
    stop: 'STOP',
    extended: 'Extended',
    both: 'Both',
    peerPolicyTitle: 'BGP Peer Policy',
    addrFamily: 'Address Family',
    template: 'Template',
    policy: 'Policy',
    msgStat: 'BGP Message Statistics',
    queueStat: 'BGP Queue Statistics',
    noPeerMsg: 'No BGP peers',
    noPeerPolicyMsg: 'No BGP peer policies',
    noAggregationMsg: 'No BGP peer aggregations',
    nolistenMsg: 'No BGP peer listen ranges',
    network: 'Network',
    mask: 'Mask',
    ipv4Address: 'IPv4 Address',
    updateBgp: 'Update BGP',
    bgpConfirm: 'Changing the active AS may cause peering to drop.',
    adminMode: 'BGP Admin Mode',
    configured: 'configured',
    unlimited: 'Unlimited',
    statusCodeInfo : 'Status Codes: s suppressed, * valid, > best, i - internal, S - stale',
    statusCodeInfoForCommunity : 'Status Codes: s suppressed, * valid, > best, i - internal',
    originCodeInfo: 'Origin Codes: i - IGP, e - EGP, ? - incomplete',
    notSupport: 'Not Support',
    bgpNextHop: 'BGP Next Hop',
    nextHop: 'Next Hop',
    bgpPeerAndId: 'Peer (Peer ID)',
    receivedUpdateQueue: 'Received UPDATE Queue',
    sec: 'sec',
    bestPathAsPathIgnore: 'Ignore AS Path',
    logNbrChanges: 'Logging of Adjacency State Changes',
    distributeListFilterIn: 'Distriubte List Filter In',
    distributeListFilterOut: 'Distriubte List Filter Out',
    prefixLonger: 'Longer',
    prefixShorter: 'Shorter',
    prefixLenMatch: 'Prefix Length Match',
    shorterPrefixLen: 'Shorter Prefix Length',
    displayMode: 'Display Option',
    displayPrefixListMode: 'Prefix List',
    displayFilterListMode: 'Filter List',
    filterListId: 'Filter List Id',
    prefixListName: 'Prefix List Name',
    source: 'Source',
    metric: 'Metric',
    distList: 'Distribute List',
    routeMapNoDash: 'Route Map',
    redistributionTitle: 'BGP Redistribution',
    redistributing: 'Redistributing:',
    noRedistributionMsg: 'No BGP Redistribution configured.',
    ospfMatch: 'OSPF Match:',
    ospfMatchInternal: 'int',
    ospfMatchExternalOne: 'ex1',
    ospfMatchExternalTwo: 'ex2',
    ospfMatchNssaExternalOne: 'nssa-ext1',
    ospfMatchNssaExternalTwo: 'nssa-ext2',
    protocol: 'Protocol',
    connected: 'Connected',
    rip: 'RIP',
    ospf: 'OSPF',
    static: 'Static',
    bgpFastExternalFailover: 'BGP Fast External Failover',
    fastExternalFailover: 'Fast External Failover',
    metricPlaceholder: 'Enter Metric',
    routeMapPlaceholder: 'Enter Route Map',
    routeDistance: 'BGP Route Distance',
    address: 'Address',
    wildcard: 'Wildcard',
    distance: 'Distance',
    pfxList: 'Pfx List',
    peerAddress: 'Peer Address',
    wildcardMask: 'Wildcard Mask',
    peerAddressPlaceholder: 'Enter Peer Address',
    wildcardMaskPlaceholder: 'Enter Wildcard Mask',
    distancePlaceholder: 'Enter Distance',
    pfxListPlaceholder: 'Enter Prefix List Name',
    routingTable: 'BGP Routing Table',
    atomicAggregate: 'Atomic Aggregate',
    aggregator: 'Aggregator (AS, Router Id)',
    originatorId: 'Originator Id',
    extCommunity: 'Extended Community'
  },
  asPathAcl: {
    title: 'AS Path Access List',
    aclId: 'List Number',
    action: 'Action',
    regExp: 'Regular Expression',
    createTitle: '',
    deleteTitle: 'Delete AS Path Access List',
    aclIdPlaceholder: 'Enter List Number',
    regExpPlaceholder: 'Enter Regular Expression'
  },
  communityLists: {
    title: 'Community List',
    listName: 'List Name',
    action: 'Action',
    communities: 'Communities',
    community: 'Community',
    noAdvertise: 'No-Advertise',
    noExport: 'No-Export',
    noExportSubconfed: 'No-Export-Subconfed',
    noPeer: 'No-Peer',
    listNamePlaceholder: 'Enter List Name',
    communitiesPlaceholder: 'Enter Community',
    refCount: 'Refcount',
    searches: 'Searches',
    tests: 'Tests',
    hits: 'Hits',
    misses: 'Misses',
  },
  extcommunityLists: {
    title: 'Extended Community List',
    listId: 'List Id',
    action: 'Action',
    communities: 'Communities',
    rtCommunity: 'RT Sub-type Community',
    sooCommunity: 'Soo Sub-type Community',
    communitiesPlaceholder: 'Enter Community',
    listIdPlaceholder: 'Enter List Id',
  },
  dnsClient:{
    title: 'DNS Client',
    mode: 'Default Domain Lookup',
    defaultName: 'Default Domain',
    srcInterface: 'DNS Client Source Interface',
    retry: 'Number of Retries',
    timeout: 'Retry Timeout Period',
  },
  dnsClientDomains:{
    title: 'DNS Client Domains',
    name: 'Default Domain List',
    createEntry: 'Create DNS Client Domain'
  },
  dnsClientServers:{
    title: 'DNS Name Servers',
    name: 'Name Servers',
    createEntry: 'Create DNS Name Server',
    ipAddr: 'DNS Server Address',
    ipType: 'IP Type'
  },
  dnsClientStaticHosts:{
    title: 'DNS Client Static Hosts',
    name: 'Static Host Name',
    createEntry: 'Create DNS Client Static Host',
    ipAddr: 'Static Host Address',
  },
  dnsClientHosts:{
    title: 'DNS Client Hosts',
    name: 'Host Name',
    total: 'Total',
    time: 'Elapsed',
    address: 'Address',
    clearTitle: 'Claer DNS Client Hosts',
    allHost: 'All Hosts'
  },
  llmnr:{
    title: 'LLMNR',
    name: 'Host Name',
    mode: 'LLMNR Mode',
  },
  macfilter:{
    title: 'MAC Filter',
    updatetitle: 'Update MAC Filter',
    srcPort: 'Source Port(s)',
    dstPort: 'Destination Port(s)',
    fwdList: 'Fwd Interface',
    fltList: 'Filtering List',
    addSrc: 'Add Source Port',
    addDst: 'Add Destination Port',
    removeSrc: 'Remove Source Port',
    removeDst: 'Remove Destination Port',
    allIntf: 'For All Interface',
    deleteEntry: 'Delete Mac Filter',
  },
  openflow:{
    title:'OpenFlow',
    openflowCfgTitle: 'OpenFlow Configuration',
    adminMode: 'Administrative Mode',
    operStatus: 'Operational Status',
    disableReason:'Disable Reason',
    ipAddr:'IP Address',
    ipMode:'IP Mode',
    staticIp:'Static IP Address',
    openFlowVar:'OpenFlow Variant',
    passiveMode:'Passive Mode',
    auto:'Auto',
    noSuitIpIntf:'No-Suitable-IP-Interface',
    adminDisabled: 'Admin-Disabled',
    noSslFile: 'No-SSL-Files',
    static:'Static IP',
    serviceport: 'ServicePort IP',
    openflowControlTitle: 'OpenFlow Controllers',
    ipPort: 'IP Port',
    connectMode: 'Connection Mode',
    role: 'Role',
    createOpenflowControlEntry:'Create OpenFlow Controller',
    portNum: 'Port Number',
    ssl: 'SSL',
    tcp: 'TCP',
    portNumPlaceholder:'Enter the Port Number',
    openflowFlowTabTitle: 'OpenFlow Flow Table',
    tableEntryIdx:'Index',
    flowType:'Flow Type',
    hardTimeout: 'Hard Timeout',
    idleTimeout: 'Idle Timeout',
    packetCount:'Packet Count',
    byteCount: 'Byte Count',
    idle:'Idle',
    hardwareInstalled:'Installed in Hardware',
    matchCriteria:'Match Criteria',
    flowTable:'Flow Table',
    priority:'Priority',
    ingressPort:'Ingress Port',
    srcMacMask:'Src MAC Mask',
    dstMacMask:'Dst MAC Mask',
    vlanIdMask:'VLAN Mask',
    vlanPriority:'VLAN Priority',
    etherType:'Ether Type',
    ipProtocol:'IP Protocol',
    srcIp:'Src IP',
    srcIpMask:'Src IP Mask',
    dstIp:'Dst IP',
    dstIpMask:'Dst IP Mask',
    srcIpv6:'Src IPv6',
    srcIpv6Mask:'Src IPv6 Mask',
    dstIpv6:'Dst IPv6',
    dstIpv6Mask:'Dst IPv6 Mask',
    ipv6FlowLabel:'IPv6 Flow Label',
    icmpType:'ICMP Type',
    icmpCode:'ICMP Code',
    icmpv6Type:'ICMPv6 type',
    icmpv6Code:'ICMPv6 Code',
    srcIpPort:'Src IP Port',
    dstIpPort:'Dst IP Port',
    tos:'TOS',
    actions:'Actions',
    redirect:'Redirect',
    egressPort:'Egress Port',
    packetHandle: 'Packet Handling Method',
    redirect:'Redirect',
    newVlanId:'New VLAN',
    newVlanPri:'New VLAN Priority',
    newDscp:'New DSCP',
    newSrcMac:'New SMAC',
    newDstMac:'New DMAC',
    newSrcIp:'New Src IP',
    newSrcIpMask:'New SrcIP Mask',
    newDstIp:'New Dst IP',
    newDstIpMask:'New DstIP Mask',
    newGroupId :'Group',
    openflowGroupTabTitle: 'OpenFlow Group Table',
    groupId:'Group ID',
    groupType:'Group Type',
    referCount:'Reference Count',
    duration:'Duration',
    bucketIdx:'Bucket Index',
    outputPort:'Output Port',
    referGroupId:'Reference Group ID',
    srcMac:'Src MAC',
    dstMac:'Dst MAC',
    maxIndirectGroupEntries:'Max Indirect Group Entries',
    indirectGroupEntries:'Current Indirect Group Entries in Database',
    maxAllGroupEntries:'Max All Group Entries',
    allGroupEntries:'Current All Group Entries in Database',
    maxSelectGroupEntries:'Max Select Group Entries',
    selectGroupEntries:'Current Select Group Entries in Database',
    openflowTabTitle: 'OpenFlow Table Status',
    tableName:'Flow Table Name',
    maxSize:'Maximum Size',
    totalEntryCount:'Number of Entries',
    hwEntryCount:'Hardware Entries',
    swEntryCount:'Software-Only Entries',
    waitingEntryCount:'Waiting for Space Entries',
    flowInsertCount:'Flow Insertion Count',
    flowDeleteCount:'Flow Deletion Count',
    insertFailCount:'Insertion Failure Count',
    tableDescription:'Flow Table Description',
    copyOpenflowSSL:'Copy OpenFlow SSL Key',
    caCert:'openflow-ssl-ca-cert',
    cert:'openflow-ssl-cert',
    privKey:'openflow-ssl-priv-key',
    controller: 'CONTROLLER',
    clearItemTitle: 'Clear OpenFlow CA Certificate',
    clearAlert: 'Are you sure to clear the OpenFlow CA Certificate?',
    dscp:'DSCP',
    ecn: 'ECN',
    status: 'Status',
    filterOption: 'Flow Entry Filter Option',
    noFilter: 'Display All Flow Entires'
  }
}
